
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\basic\plot_training_log.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_basic_plot_training_log.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_basic_plot_training_log.py:


=========================================================
Customize ensemble training log
=========================================================

This example illustrates how to enable and customize the training 
log when training an :mod:`imbalanced_ensemble.ensemble` classifier.

This example uses:

    - :class:`imbalanced_ensemble.ensemble.SelfPacedEnsembleClassifier`

.. GENERATED FROM PYTHON SOURCE LINES 13-18

.. code-block:: default


    # Authors: Zhining Liu <zhining.liu@outlook.com>
    # License: MIT









.. GENERATED FROM PYTHON SOURCE LINES 19-33

.. code-block:: default

    print(__doc__)

    # Import imbalanced_ensemble
    import imbalanced_ensemble as imbens

    # Import utilities
    import sklearn
    from sklearn.datasets import make_classification
    from sklearn.model_selection import train_test_split

    RANDOM_STATE = 42

    # sphinx_gallery_thumbnail_path = '../../docs/source/_static/training_log_thumbnail.png'








.. GENERATED FROM PYTHON SOURCE LINES 34-37

Prepare data
----------------------------
Make a toy 3-class imbalanced classification task.

.. GENERATED FROM PYTHON SOURCE LINES 37-47

.. code-block:: default


    # make dataset
    X, y = make_classification(n_classes=3, class_sep=2,
        weights=[0.1, 0.3, 0.6], n_informative=3, n_redundant=1, flip_y=0,
        n_features=20, n_clusters_per_class=2, n_samples=2000, random_state=0)

    # train valid split
    X_train, X_valid, y_train, y_valid = train_test_split(
        X, y, test_size=0.5, stratify=y, random_state=RANDOM_STATE)








.. GENERATED FROM PYTHON SOURCE LINES 48-55

Customize training log
---------------------------------------------------------------------------
Take ``SelfPacedEnsembleClassifier`` as example, training log is controlled by 3 parameters of the ``fit()`` method:

  - ``eval_datasets``: Dataset(s) used for evaluation during the ensemble training.
  - ``eval_metrics``: Metric(s) used for evaluation during the ensemble training.
  - ``train_verbose``: Controls the granularity and content of the training log.

.. GENERATED FROM PYTHON SOURCE LINES 55-58

.. code-block:: default


    clf = imbens.ensemble.SelfPacedEnsembleClassifier(random_state=RANDOM_STATE)








.. GENERATED FROM PYTHON SOURCE LINES 59-62

Set training log format
-----------------------
(``fit()`` parameter: ``train_verbose``: bool, int or dict)

.. GENERATED FROM PYTHON SOURCE LINES 64-65

**Enable auto training log** 

.. GENERATED FROM PYTHON SOURCE LINES 65-71

.. code-block:: default


    clf.fit(X_train, y_train,
            train_verbose=True,
           )






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃             ┃                          ┃            Data: train             ┃
    ┃ #Estimators ┃    Class Distribution    ┃               Metric               ┃
    ┃             ┃                          ┃  acc    balanced_acc   weighted_f1 ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃      1      ┃ {0: 100, 1: 100, 2: 100} ┃ 0.932      0.948          0.933    ┃
    ┃      5      ┃ {0: 100, 1: 100, 2: 100} ┃ 0.996      0.997          0.996    ┃
    ┃     10      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     15      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     20      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     25      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     30      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     35      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     40      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     45      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     50      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃    final    ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

    SelfPacedEnsembleClassifier(random_state=RandomState(MT19937) at 0x1E1995DC540)



.. GENERATED FROM PYTHON SOURCE LINES 72-73

**Customize training log granularity**

.. GENERATED FROM PYTHON SOURCE LINES 73-80

.. code-block:: default


    clf.fit(X_train, y_train,
            train_verbose={
                'granularity': 10,
            })






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃             ┃                          ┃            Data: train             ┃
    ┃ #Estimators ┃    Class Distribution    ┃               Metric               ┃
    ┃             ┃                          ┃  acc    balanced_acc   weighted_f1 ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃      1      ┃ {0: 100, 1: 100, 2: 100} ┃ 0.952      0.960          0.952    ┃
    ┃     10      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     20      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     30      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     40      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┃     50      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃    final    ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃
    ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

    SelfPacedEnsembleClassifier(random_state=RandomState(MT19937) at 0x1E1995DC540)



.. GENERATED FROM PYTHON SOURCE LINES 81-82

**Customize training log content column**

.. GENERATED FROM PYTHON SOURCE LINES 82-91

.. code-block:: default


    clf.fit(X_train, y_train,
            train_verbose={
                'granularity': 10,
                'print_distribution': False,
                'print_metrics': True,
            })






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃             ┃            Data: train             ┃
    ┃ #Estimators ┃               Metric               ┃
    ┃             ┃  acc    balanced_acc   weighted_f1 ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃      1      ┃ 0.931      0.946          0.931    ┃
    ┃     10      ┃ 1.000      1.000          1.000    ┃
    ┃     20      ┃ 1.000      1.000          1.000    ┃
    ┃     30      ┃ 1.000      1.000          1.000    ┃
    ┃     40      ┃ 1.000      1.000          1.000    ┃
    ┃     50      ┃ 1.000      1.000          1.000    ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃    final    ┃ 1.000      1.000          1.000    ┃
    ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

    SelfPacedEnsembleClassifier(random_state=RandomState(MT19937) at 0x1E1995DC540)



.. GENERATED FROM PYTHON SOURCE LINES 92-95

Add additional evaluation dataset(s)
------------------------------------
(``fit()`` parameter: ``eval_datasets``: dict)

.. GENERATED FROM PYTHON SOURCE LINES 95-105

.. code-block:: default


    clf.fit(X_train, y_train,
            eval_datasets={
                'valid': (X_valid, y_valid), # add validation data
            },
            train_verbose={
                'granularity': 10,
            })






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃             ┃                          ┃            Data: train             ┃            Data: valid             ┃
    ┃ #Estimators ┃    Class Distribution    ┃               Metric               ┃               Metric               ┃
    ┃             ┃                          ┃  acc    balanced_acc   weighted_f1 ┃  acc    balanced_acc   weighted_f1 ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃      1      ┃ {0: 100, 1: 100, 2: 100} ┃ 0.957      0.959          0.957    ┃ 0.922      0.908          0.921    ┃
    ┃     10      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃ 0.967      0.958          0.967    ┃
    ┃     20      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃ 0.968      0.958          0.968    ┃
    ┃     30      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃ 0.971      0.963          0.971    ┃
    ┃     40      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃ 0.972      0.963          0.972    ┃
    ┃     50      ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃ 0.973      0.964          0.973    ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
    ┃    final    ┃ {0: 100, 1: 100, 2: 100} ┃ 1.000      1.000          1.000    ┃ 0.973      0.964          0.973    ┃
    ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

    SelfPacedEnsembleClassifier(random_state=RandomState(MT19937) at 0x1E1995DC540)



.. GENERATED FROM PYTHON SOURCE LINES 106-109

Specify evaluation metric(s)
----------------------------
(``fit()`` parameter: ``eval_metrics``: dict)

.. GENERATED FROM PYTHON SOURCE LINES 109-121

.. code-block:: default


    clf.fit(X_train, y_train,
            eval_datasets={
                'valid': (X_valid, y_valid),
            },
            eval_metrics={
                'weighted_f1': (sklearn.metrics.f1_score, {'average':'weighted'}), # use weighted_f1
            },
            train_verbose={
                'granularity': 10,
            })





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
    ┃             ┃                          ┃ Data: train ┃ Data: valid ┃
    ┃ #Estimators ┃    Class Distribution    ┃   Metric    ┃   Metric    ┃
    ┃             ┃                          ┃ weighted_f1 ┃ weighted_f1 ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
    ┃      1      ┃ {0: 100, 1: 100, 2: 100} ┃    0.970    ┃    0.953    ┃
    ┃     10      ┃ {0: 100, 1: 100, 2: 100} ┃    1.000    ┃    0.975    ┃
    ┃     20      ┃ {0: 100, 1: 100, 2: 100} ┃    1.000    ┃    0.974    ┃
    ┃     30      ┃ {0: 100, 1: 100, 2: 100} ┃    1.000    ┃    0.974    ┃
    ┃     40      ┃ {0: 100, 1: 100, 2: 100} ┃    1.000    ┃    0.980    ┃
    ┃     50      ┃ {0: 100, 1: 100, 2: 100} ┃    1.000    ┃    0.980    ┃
    ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
    ┃    final    ┃ {0: 100, 1: 100, 2: 100} ┃    1.000    ┃    0.980    ┃
    ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛

    SelfPacedEnsembleClassifier(random_state=RandomState(MT19937) at 0x1E1995DC540)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  7.301 seconds)

**Estimated memory usage:**  11 MB


.. _sphx_glr_download_auto_examples_basic_plot_training_log.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_training_log.py <plot_training_log.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_training_log.ipynb <plot_training_log.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
