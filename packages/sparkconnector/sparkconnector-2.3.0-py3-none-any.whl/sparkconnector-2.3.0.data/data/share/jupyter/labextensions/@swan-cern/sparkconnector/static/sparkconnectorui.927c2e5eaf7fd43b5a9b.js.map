{"version":3,"file":"sparkconnectorui.927c2e5eaf7fd43b5a9b.js","mappings":"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","sources":["webpack://@swan-cern/sparkconnector/./lib/components/authenticate.js","webpack://@swan-cern/sparkconnector/./lib/components/common/layout.js","webpack://@swan-cern/sparkconnector/./lib/components/common/loglist.js","webpack://@swan-cern/sparkconnector/./lib/components/common/spark-version.js","webpack://@swan-cern/sparkconnector/./lib/components/configuring/choose-bundles.js","webpack://@swan-cern/sparkconnector/./lib/components/configuring/index.js","webpack://@swan-cern/sparkconnector/./lib/components/configuring/input-spark-configuration.js","webpack://@swan-cern/sparkconnector/./lib/components/configuring/selected-configuration.js","webpack://@swan-cern/sparkconnector/./lib/components/connect-failed.js","webpack://@swan-cern/sparkconnector/./lib/components/connected.js","webpack://@swan-cern/sparkconnector/./lib/components/connecting.js","webpack://@swan-cern/sparkconnector/./lib/components/loading.js","webpack://@swan-cern/sparkconnector/./lib/components/not-attached.js","webpack://@swan-cern/sparkconnector/./lib/components/panel.js","webpack://@swan-cern/sparkconnector/./lib/components/theme-provider.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Button from '@material-ui/core/Button';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { store } from '../store';\nimport { Layout, Section } from './common/layout';\nexport const Authenticate = observer(() => {\n    const [password, setPassword] = React.useState('');\n    let displayError = '';\n    if (store.currentNotebook.authError) {\n        displayError = (React.createElement(Alert, { severity: \"error\" },\n            React.createElement(AlertTitle, null, \"Error\"),\n            store.currentNotebook.authError));\n    }\n    return (React.createElement(Layout, null,\n        React.createElement(Section, { title: \"Authentication\", className: \"jp-SparkConnector-auth\" },\n            displayError,\n            React.createElement(Alert, { severity: \"info\" }, \"Before connecting to the cluster, we need to obtain a Kerberos ticket. Please enter your account password.\"),\n            React.createElement(TextField, { id: \"standard-password-input\", size: \"small\", variant: \"outlined\", label: \"Password\", type: \"password\", autoComplete: \"current-password\", value: password, fullWidth: true, onChange: (event) => {\n                    setPassword(event.target.value);\n                } })),\n        React.createElement(Button, { color: \"primary\", variant: \"contained\", disabled: !password, onClick: () => {\n                store.onClickAuthenticate(password);\n            }, startIcon: React.createElement(VpnKeyIcon, null), className: \"jp-SparkConnector-button-main\" }, \"Authenticate\")));\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../../store';\nimport { SparkConnectionDetails } from './spark-version';\nconst Title = observer(() => {\n    var _a, _b;\n    let notebookName = '';\n    if ((_a = store === null || store === void 0 ? void 0 : store.currentNotebook) === null || _a === void 0 ? void 0 : _a.title) {\n        notebookName = '| ' + ((_b = store === null || store === void 0 ? void 0 : store.currentNotebook) === null || _b === void 0 ? void 0 : _b.title);\n    }\n    return (React.createElement(\"div\", { className: \"jp-SparkConnector-panel\" },\n        React.createElement(\"span\", { className: \"jp-SparkConnector-panelLabel\" },\n            \"Apache Spark \",\n            notebookName)));\n});\nexport const Layout = (props) => {\n    return (React.createElement(\"div\", { className: \"jp-SparkConnector\" },\n        React.createElement(Title, null),\n        React.createElement(SparkConnectionDetails, null),\n        props.children));\n};\nexport const Section = (props) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"header\", { className: \"jp-SparkConnector-section-header\" },\n            props.title,\n            props.extraActions),\n        React.createElement(\"div\", { className: 'jp-SparkConnector-details ' + props.className || '' }, props.children)));\n};\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../../store';\n/*\n  Display a list of log output in monospace font.\n*/\nexport const LogList = observer(() => {\n    const logEndDivRef = React.useRef(null);\n    React.useEffect(() => {\n        var _a;\n        (_a = logEndDivRef.current) === null || _a === void 0 ? void 0 : _a.scrollIntoView({ behavior: 'smooth' });\n    }, [store.currentNotebook.logs]);\n    return (React.createElement(\"div\", { className: \"jp-SparkConnector-confDetailsContainer-sparkLogs info\" },\n        store.currentNotebook.logs.map((log, idx) => {\n            return React.createElement(\"pre\", { key: idx }, log);\n        }),\n        React.createElement(\"div\", { ref: logEndDivRef })));\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../../store';\nexport const SparkConnectionDetails = observer(() => {\n    var _a, _b;\n    let details = '';\n    if (((_a = store.currentNotebook) === null || _a === void 0 ? void 0 : _a.clusterName) &&\n        ((_b = store.currentNotebook) === null || _b === void 0 ? void 0 : _b.sparkVersion)) {\n        details = (React.createElement(\"div\", { className: \"jp-SparkConnector-connectionDetailsContainerInfo\" },\n            \"Cluster \",\n            React.createElement(\"b\", null, store.currentNotebook.clusterName),\n            \" | Version\",\n            ' ',\n            React.createElement(\"b\", null, store.currentNotebook.sparkVersion)));\n    }\n    return (React.createElement(\"div\", { className: \"jp-SparkConnector-details\" },\n        React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: \"jp-SparkConnector-connectionDetailsContainer\" },\n                React.createElement(\"div\", { className: \"jp-SparkConnector-logo\" }),\n                details))));\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../../store';\nimport { Section } from '../common/layout';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\nexport const ChooseBundles = observer(() => {\n    const activeBundles = store.currentNotebook.selectedBundles;\n    const availableBundles = store.currentNotebook.filteredAvailableBundles || [];\n    const toggleBundle = (bundleName) => {\n        if (activeBundles.indexOf(bundleName) === -1) {\n            store.currentNotebook.addBundle(bundleName);\n        }\n        else {\n            store.currentNotebook.removeBundle(bundleName);\n        }\n    };\n    const bundleList = Object.keys(availableBundles).map((bundleName) => {\n        const isSelected = activeBundles.indexOf(bundleName) !== -1;\n        return (React.createElement(ListItem, { key: bundleName, button: true, selected: isSelected, onClick: () => {\n                toggleBundle(bundleName);\n            } },\n            React.createElement(ListItemIcon, null, isSelected ? React.createElement(CheckIcon, null) : React.createElement(AddIcon, null)),\n            React.createElement(ListItemText, { id: bundleName, primary: bundleName })));\n    });\n    return (React.createElement(Section, { title: \"Add Configuration Bundle\" },\n        React.createElement(List, { dense: true, disablePadding: true }, bundleList)));\n});\n","import React from 'react';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Button from '@material-ui/core/Button';\nimport { store } from '../../store';\nimport { Layout } from '../common/layout';\nimport { InputSparkConfiguration } from './input-spark-configuration';\nimport { ChooseBundles } from './choose-bundles';\nimport { SelectedConfiguration } from './selected-configuration';\nexport const Configuring = () => {\n    return (React.createElement(Layout, null,\n        React.createElement(\"div\", { className: \"jp-SparkConnector-scrollable\" },\n            React.createElement(ChooseBundles, null),\n            React.createElement(InputSparkConfiguration, null),\n            React.createElement(SelectedConfiguration, null)),\n        React.createElement(Button, { color: \"primary\", variant: \"contained\", onClick: () => {\n                store.onClickConnect();\n            }, startIcon: React.createElement(LinkIcon, null), className: \"jp-SparkConnector-button-main\" }, \"Connect\")));\n};\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Button } from '@material-ui/core';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../../store';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Section } from '../common/layout';\nexport const InputSparkConfiguration = observer(() => {\n    const options = store.availableOptions || [];\n    const [selectedSuggestion, setSelectedSuggestion] = React.useState(null);\n    const [configurationName, setConfigurationName] = React.useState('');\n    const [value, setValue] = React.useState('');\n    return (React.createElement(Section, { title: \"Add Extra Configuration\" },\n        React.createElement(\"ul\", null,\n            React.createElement(\"li\", null,\n                \"You can configure the following\",\n                ' ',\n                React.createElement(\"a\", { href: \"https://spark.apache.org/docs/latest/configuration#available-properties\", target: \"_blank\", rel: \"noreferrer\" }, \"options.\")),\n            React.createElement(\"li\", null, \"These options override options in the selected bundles.\"),\n            React.createElement(\"li\", null,\n                \"Environment variables can be used via \",\n                '{ENV_VAR_NAME}',\n                \".\")),\n        React.createElement(\"div\", { className: \"jp-SparkConnector-input-sparkopts\" },\n            React.createElement(Autocomplete, { size: \"small\", freeSolo: true, options: options, inputValue: configurationName, onInputChange: (_, newName) => {\n                    setConfigurationName(newName);\n                }, value: selectedSuggestion, onChange: (_, newValue) => {\n                    setSelectedSuggestion(newValue);\n                }, disableClearable: true, groupBy: (option) => option.data.category, getOptionLabel: (option) => {\n                    if (typeof option === 'string') {\n                        return option;\n                    }\n                    return option.value;\n                }, renderInput: (params) => (React.createElement(TextField, Object.assign({}, params, { label: \"Configuration Name\", variant: \"outlined\", size: \"small\" }))) }),\n            React.createElement(TextField, { label: \"Value\", size: \"small\", variant: \"outlined\", value: value, onChange: (event) => {\n                    setValue(event.target.value);\n                } }),\n            React.createElement(Button, { startIcon: React.createElement(AddIcon, null), disabled: !configurationName || !value, variant: \"contained\", onClick: () => {\n                    store.currentNotebook.addConfiguration(configurationName, value);\n                    setConfigurationName('');\n                    setValue('');\n                } }, \"Add Configuration\"))));\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../../store';\nimport { Section } from '../common/layout';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nconst SelectedConfigurationItem = (props) => {\n    return (React.createElement(ListItem, { dense: true, key: props.config.id },\n        React.createElement(ListItemIcon, null,\n            React.createElement(SettingsIcon, null)),\n        React.createElement(ListItemText, { primary: props.config.name, secondary: props.config.value }),\n        React.createElement(ListItemSecondaryAction, null,\n            React.createElement(IconButton, { edge: \"end\", size: \"small\", onClick: props.onClickRemove },\n                React.createElement(DeleteIcon, null)))));\n};\nconst SelectedBundleItem = observer((props) => {\n    var _a, _b;\n    const [expanded, setExpanded] = React.useState(true);\n    const configList = (_b = (_a = store.currentNotebook.filteredAvailableBundles[props.bundleName]) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.map((config, index) => (React.createElement(ListItem, { dense: true, key: index },\n        React.createElement(ListItemIcon, null,\n            React.createElement(SettingsIcon, null)),\n        React.createElement(ListItemText, { primary: config['name'], secondary: config['value'] }))));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ListItem, { dense: true, button: true, divider: true, onClick: () => {\n                setExpanded(!expanded);\n            }, key: props.bundleName },\n            React.createElement(ListItemIcon, null,\n                React.createElement(IconButton, { \"aria-label\": \"delete\", size: \"small\", onClick: () => {\n                        store.currentNotebook.removeBundle(props.bundleName);\n                    } },\n                    React.createElement(DeleteIcon, null))),\n            React.createElement(ListItemText, { primary: React.createElement(\"b\", null, props.bundleName) }),\n            expanded ? React.createElement(ExpandLess, null) : React.createElement(ExpandMore, null)),\n        React.createElement(Collapse, { in: expanded, timeout: \"auto\" },\n            React.createElement(List, { component: \"div\", disablePadding: true, dense: true }, configList))));\n});\nexport const SelectedConfiguration = observer(() => {\n    const bundles = store.currentNotebook.selectedBundles.map((bundleName) => {\n        return React.createElement(SelectedBundleItem, { bundleName: bundleName, key: bundleName });\n    });\n    const options = store.currentNotebook.selectedConfigurations.map((option) => {\n        return (React.createElement(SelectedConfigurationItem, { config: option, onClickRemove: () => {\n                store.currentNotebook.removeConfiguration(option.id);\n            }, key: option.id }));\n    });\n    return (React.createElement(Section, { title: \"Selected Configuration\", className: \"jp-SparkConnector-selected-config\" },\n        React.createElement(List, { dense: true, disablePadding: true },\n            bundles,\n            options.length > 0 && (React.createElement(ListSubheader, null, \"Extra Configuration\")),\n            options)));\n});\n","import * as React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { Layout, Section } from './common/layout';\nimport { LogList } from './common/loglist';\nimport { store } from '../store';\nexport const ConnectFailedComponent = observer(() => {\n    return (React.createElement(Layout, null,\n        React.createElement(Section, { title: \"connection failed\", className: \"jp-SparkConnector-error\" },\n            React.createElement(Alert, { severity: \"error\" },\n                React.createElement(AlertTitle, null, \"Error\"),\n                store.currentNotebook.errorMessage)),\n        React.createElement(Section, { title: \"logs\", className: \"jp-SparkConnector-logs\" },\n            React.createElement(LogList, null)),\n        React.createElement(Button, { color: \"secondary\", variant: \"contained\", onClick: () => {\n                store.onClickRestart();\n            }, startIcon: React.createElement(ReplayIcon, null), className: \"jp-SparkConnector-button-main\" }, \"Restart\")));\n});\n","import * as React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { store } from '../store';\nimport { Layout, Section } from './common/layout';\nimport { LogList } from './common/loglist';\nconst YouAreConnecedTo = observer(() => {\n    return (React.createElement(Alert, { severity: \"success\", style: { margin: '8px' } },\n        React.createElement(AlertTitle, null,\n            \"Connected to \",\n            React.createElement(\"b\", null, store.currentNotebook.clusterName)),\n        \"Variables available in the notebook\",\n        React.createElement(\"li\", null,\n            \"sc:\",\n            ' ',\n            React.createElement(\"a\", { href: \"https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.SparkContext.html#pyspark.SparkContext\", target: \"_blank\", rel: \"noreferrer\" },\n                React.createElement(\"u\", null,\n                    React.createElement(\"b\", null, \"SparkContext\")))),\n        React.createElement(\"li\", null,\n            \"spark:\",\n            ' ',\n            React.createElement(\"a\", { href: \"https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.sql.SparkSession.html#pyspark.sql.SparkSession\", target: \"_blank\", rel: \"noreferrer\" },\n                React.createElement(\"u\", null,\n                    React.createElement(\"b\", null, \"SparkSession\"))))));\n});\nexport const Connected = observer(() => {\n    var _a, _b, _c, _d, _e;\n    return (React.createElement(Layout, null,\n        React.createElement(YouAreConnecedTo, null),\n        React.createElement(Section, { title: \"connection resources\" },\n            React.createElement(List, { dense: true },\n                React.createElement(ListItem, { button: true, component: \"a\", target: \"_blank\", href: (_b = (_a = store.currentNotebook) === null || _a === void 0 ? void 0 : _a.connectionResources) === null || _b === void 0 ? void 0 : _b.sparkHistoryServerUrl },\n                    React.createElement(ListItemIcon, null,\n                        React.createElement(WebAssetIcon, null)),\n                    React.createElement(ListItemText, { primary: \"Spark Web UI\" })),\n                React.createElement(ListItem, { button: true, component: \"a\", target: \"_blank\", href: (_c = store.currentNotebook.connectionResources) === null || _c === void 0 ? void 0 : _c.sparkMetricsUrl, disabled: !((_d = store.currentNotebook.connectionResources) === null || _d === void 0 ? void 0 : _d.sparkMetricsUrl) },\n                    React.createElement(ListItemIcon, null,\n                        React.createElement(AssessmentIcon, null)),\n                    React.createElement(ListItemText, { primary: 'Spark Metrics Dashboard' +\n                            (!((_e = store.currentNotebook.connectionResources) === null || _e === void 0 ? void 0 : _e.sparkMetricsUrl)\n                                ? '(bundle not added)'\n                                : '') })))),\n        React.createElement(Section, { title: \"logs\", className: \"jp-SparkConnector-logs\", extraActions: React.createElement(IconButton, { size: \"small\", className: \"jp-SparkConnector-logrefresh\", onClick: () => {\n                    store.onRefreshLogs();\n                } },\n                React.createElement(RefreshIcon, null)) },\n            React.createElement(LogList, null)),\n        React.createElement(Button, { color: \"secondary\", variant: \"contained\", onClick: () => {\n                store.onClickRestart();\n            }, startIcon: React.createElement(LinkOffIcon, null), className: \"jp-SparkConnector-button-main\" }, \"Disconnect\")));\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Button from '@material-ui/core/Button';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { store } from '../store';\nimport { LogList } from './common/loglist';\nimport { Layout, Section } from './common/layout';\nexport const Connecting = observer(() => {\n    return (React.createElement(Layout, null,\n        React.createElement(Section, { title: \"spark connecting\", className: \"jp-SparkConnector-loading\" },\n            React.createElement(CircularProgress, { size: 80 })),\n        React.createElement(Section, { title: \"logs\", className: \"jp-SparkConnector-logs\" },\n            React.createElement(LogList, null)),\n        React.createElement(Button, { color: \"secondary\", variant: \"contained\", onClick: () => {\n                store.onClickRestart();\n            }, startIcon: React.createElement(CancelIcon, null), className: \"jp-SparkConnector-button-main\" }, \"Cancel\")));\n});\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Layout } from './common/layout';\nexport const Loading = () => {\n    return (React.createElement(Layout, null,\n        React.createElement(\"div\", { className: \"jp-SparkConnector-loading\" },\n            React.createElement(CircularProgress, { size: 80 }))));\n};\n","import React from 'react';\nimport { Layout } from './common/layout';\nexport const NotAttached = () => {\n    return (React.createElement(Layout, null,\n        React.createElement(\"div\", { className: \"jp-SparkConnector-notattached\" }, \"Open a notebook to connect to Apache Spark\")));\n};\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../store';\nimport { ThemeProvider } from './theme-provider';\nimport { Authenticate } from './authenticate';\nimport { Configuring } from './configuring';\nimport { Connected } from './connected';\nimport { ConnectFailedComponent } from './connect-failed';\nimport { Connecting } from './connecting';\nimport { Loading } from './loading';\nimport { NotAttached } from './not-attached';\nconst SparkConnectorPanel = observer(() => {\n    let page = React.createElement(\"div\", null);\n    if (!store.currentNotebook) {\n        return React.createElement(NotAttached, null);\n    }\n    switch (store.currentNotebook.status) {\n        case 'configuring':\n            page = React.createElement(Configuring, null);\n            break;\n        case 'auth':\n            page = React.createElement(Authenticate, null);\n            break;\n        case 'connected':\n            page = React.createElement(Connected, null);\n            break;\n        case 'connecting':\n            page = React.createElement(Connecting, null);\n            break;\n        case 'loading':\n            page = React.createElement(Loading, null);\n            break;\n        case 'error':\n            page = React.createElement(ConnectFailedComponent, null);\n            break;\n        case 'notattached':\n            page = React.createElement(Loading, null);\n            break;\n    }\n    return React.createElement(ThemeProvider, null, page);\n});\nexport default SparkConnectorPanel;\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider as MaterialUIThemeProvider, } from '@material-ui/core/styles';\nimport { observer } from 'mobx-react-lite';\nimport { store } from '../store';\nconst brandColor1 = getComputedStyle(document.body)\n    .getPropertyValue('--jp-brand-color1')\n    .trim();\nconst createTheme = (color) => {\n    return createMuiTheme({\n        shadows: Array(25).fill('none'),\n        shape: {\n            borderRadius: 2,\n        },\n        typography: {\n            fontSize: 12,\n            fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"',\n            ].join(','),\n        },\n        palette: {\n            type: color || 'light',\n            primary: {\n                main: brandColor1,\n            },\n        },\n    });\n};\nconst lightTheme = createTheme('light');\nconst darkTheme = createTheme('dark');\nexport const ThemeProvider = observer((props) => {\n    const currentTheme = store.colorTheme === 'light' ? lightTheme : darkTheme;\n    return (React.createElement(MaterialUIThemeProvider, { theme: currentTheme }, props.children));\n});\n"],"names":[],"sourceRoot":""}