"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions
from nucliadb_protos.noderesources_pb2 import (
    EmptyQuery as EmptyQuery,
    EmptyResponse as EmptyResponse,
    Metadata as Metadata,
    Paragraph as Paragraph,
    Paragraphs as Paragraphs,
    Resource as Resource,
    ResourceID as ResourceID,
    Shard as Shard,
    ShardId as ShardId,
    ShardList as ShardList,
    TextInformation as TextInformation,
)

from nucliadb_protos.utils_pb2 import (
    EntityRelation as EntityRelation,
    ExtractedText as ExtractedText,
    Relation as Relation,
    Vector as Vector,
    VectorObject as VectorObject,
    Vectors as Vectors,
)


DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Filter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["tags",b"tags"]) -> None: ...
global___Filter = Filter

class Faceted(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["tags",b"tags"]) -> None: ...
global___Faceted = Faceted

class OrderBy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class OrderType(_OrderType, metaclass=_OrderTypeEnumTypeWrapper):
        pass
    class _OrderType:
        V = typing.NewType('V', builtins.int)
    class _OrderTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OrderType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DESC = OrderBy.OrderType.V(0)
        ASC = OrderBy.OrderType.V(1)

    DESC = OrderBy.OrderType.V(0)
    ASC = OrderBy.OrderType.V(1)

    FIELD_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    field: typing.Text = ...
    type: global___OrderBy.OrderType.V = ...
    def __init__(self,
        *,
        field : typing.Text = ...,
        type : global___OrderBy.OrderType.V = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","type",b"type"]) -> None: ...
global___OrderBy = OrderBy

class Timestamps(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FROM_MODIFIED_FIELD_NUMBER: builtins.int
    TO_MODIFIED_FIELD_NUMBER: builtins.int
    FROM_CREATED_FIELD_NUMBER: builtins.int
    TO_CREATED_FIELD_NUMBER: builtins.int
    @property
    def from_modified(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def to_modified(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def from_created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def to_created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        from_modified : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        to_modified : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        from_created : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        to_created : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["from_created",b"from_created","from_modified",b"from_modified","to_created",b"to_created","to_modified",b"to_modified"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["from_created",b"from_created","from_modified",b"from_modified","to_created",b"to_created","to_modified",b"to_modified"]) -> None: ...
global___Timestamps = Timestamps

class DocumentSearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    UUID_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    FACETED_FIELD_NUMBER: builtins.int
    PAGE_NUMBER_FIELD_NUMBER: builtins.int
    RESULT_PER_PAGE_FIELD_NUMBER: builtins.int
    TIMESTAMPS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    uuid: typing.Text = ...
    body: typing.Text = ...
    @property
    def filter(self) -> global___Filter: ...
    @property
    def order(self) -> global___OrderBy: ...
    @property
    def faceted(self) -> global___Faceted: ...
    page_number: builtins.int = ...
    result_per_page: builtins.int = ...
    @property
    def timestamps(self) -> global___Timestamps: ...
    def __init__(self,
        *,
        id : typing.Text = ...,
        uuid : typing.Text = ...,
        body : typing.Text = ...,
        filter : typing.Optional[global___Filter] = ...,
        order : typing.Optional[global___OrderBy] = ...,
        faceted : typing.Optional[global___Faceted] = ...,
        page_number : builtins.int = ...,
        result_per_page : builtins.int = ...,
        timestamps : typing.Optional[global___Timestamps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["faceted",b"faceted","filter",b"filter","order",b"order","timestamps",b"timestamps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body",b"body","faceted",b"faceted","filter",b"filter","id",b"id","order",b"order","page_number",b"page_number","result_per_page",b"result_per_page","timestamps",b"timestamps","uuid",b"uuid"]) -> None: ...
global___DocumentSearchRequest = DocumentSearchRequest

class DocumentSearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Result(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        UUID_FIELD_NUMBER: builtins.int
        SLUG_FIELD_NUMBER: builtins.int
        uuid: typing.Text = ...
        slug: typing.Text = ...
        def __init__(self,
            *,
            uuid : typing.Text = ...,
            slug : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["slug",b"slug","uuid",b"uuid"]) -> None: ...

    class FacetResult(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TAG_FIELD_NUMBER: builtins.int
        TOTAL_FIELD_NUMBER: builtins.int
        tag: typing.Text = ...
        total: builtins.int = ...
        def __init__(self,
            *,
            tag : typing.Text = ...,
            total : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["tag",b"tag","total",b"total"]) -> None: ...

    class FacetResults(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FACETRESULTS_FIELD_NUMBER: builtins.int
        @property
        def facetresults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DocumentSearchResponse.FacetResult]: ...
        def __init__(self,
            *,
            facetresults : typing.Optional[typing.Iterable[global___DocumentSearchResponse.FacetResult]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["facetresults",b"facetresults"]) -> None: ...

    class FacetsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___DocumentSearchResponse.FacetResults: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___DocumentSearchResponse.FacetResults] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TOTAL_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    FACETS_FIELD_NUMBER: builtins.int
    PAGE_NUMBER_FIELD_NUMBER: builtins.int
    RESULT_PER_PAGE_FIELD_NUMBER: builtins.int
    total: builtins.int = ...
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DocumentSearchResponse.Result]: ...
    @property
    def facets(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___DocumentSearchResponse.FacetResults]: ...
    page_number: builtins.int = ...
    result_per_page: builtins.int = ...
    def __init__(self,
        *,
        total : builtins.int = ...,
        results : typing.Optional[typing.Iterable[global___DocumentSearchResponse.Result]] = ...,
        facets : typing.Optional[typing.Mapping[typing.Text, global___DocumentSearchResponse.FacetResults]] = ...,
        page_number : builtins.int = ...,
        result_per_page : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["facets",b"facets","page_number",b"page_number","result_per_page",b"result_per_page","results",b"results","total",b"total"]) -> None: ...
global___DocumentSearchResponse = DocumentSearchResponse

class ParagraphSearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    UUID_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    FILTER_DOCUMENT_FIELD_NUMBER: builtins.int
    FILTER_PARAGRAPH_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    FACETED_DOCUMENT_FIELD_NUMBER: builtins.int
    FACETED_PARAGRAPH_FIELD_NUMBER: builtins.int
    PAGE_NUMBER_FIELD_NUMBER: builtins.int
    RESULT_PER_PAGE_FIELD_NUMBER: builtins.int
    TIMESTAMPS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    uuid: typing.Text = ...
    @property
    def fields(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """query for specific types of paragraphs:
        map<document_field, text to search>, ex: "body": "barça"
        """
        pass
    body: typing.Text = ...
    """query this text in all the paragraphs"""

    @property
    def filter_document(self) -> global___Filter: ...
    @property
    def filter_paragraph(self) -> global___Filter: ...
    @property
    def order(self) -> global___OrderBy: ...
    @property
    def faceted_document(self) -> global___Faceted:
        """Faceted{ tags: Vec<String>}"""
        pass
    @property
    def faceted_paragraph(self) -> global___Faceted: ...
    page_number: builtins.int = ...
    result_per_page: builtins.int = ...
    @property
    def timestamps(self) -> global___Timestamps: ...
    def __init__(self,
        *,
        id : typing.Text = ...,
        uuid : typing.Text = ...,
        fields : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        body : typing.Text = ...,
        filter_document : typing.Optional[global___Filter] = ...,
        filter_paragraph : typing.Optional[global___Filter] = ...,
        order : typing.Optional[global___OrderBy] = ...,
        faceted_document : typing.Optional[global___Faceted] = ...,
        faceted_paragraph : typing.Optional[global___Faceted] = ...,
        page_number : builtins.int = ...,
        result_per_page : builtins.int = ...,
        timestamps : typing.Optional[global___Timestamps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["faceted_document",b"faceted_document","faceted_paragraph",b"faceted_paragraph","filter_document",b"filter_document","filter_paragraph",b"filter_paragraph","order",b"order","timestamps",b"timestamps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body",b"body","faceted_document",b"faceted_document","faceted_paragraph",b"faceted_paragraph","fields",b"fields","filter_document",b"filter_document","filter_paragraph",b"filter_paragraph","id",b"id","order",b"order","page_number",b"page_number","result_per_page",b"result_per_page","timestamps",b"timestamps","uuid",b"uuid"]) -> None: ...
global___ParagraphSearchRequest = ParagraphSearchRequest

class ParagraphSearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Result(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        UUID_FIELD_NUMBER: builtins.int
        SLUG_FIELD_NUMBER: builtins.int
        START_POS_FIELD_NUMBER: builtins.int
        END_POS_FIELD_NUMBER: builtins.int
        FIELD_FIELD_NUMBER: builtins.int
        uuid: typing.Text = ...
        slug: typing.Text = ...
        start_pos: builtins.int = ...
        end_pos: builtins.int = ...
        field: typing.Text = ...
        def __init__(self,
            *,
            uuid : typing.Text = ...,
            slug : typing.Text = ...,
            start_pos : builtins.int = ...,
            end_pos : builtins.int = ...,
            field : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["end_pos",b"end_pos","field",b"field","slug",b"slug","start_pos",b"start_pos","uuid",b"uuid"]) -> None: ...

    class FacetResult(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TAG_FIELD_NUMBER: builtins.int
        TOTAL_FIELD_NUMBER: builtins.int
        tag: typing.Text = ...
        total: builtins.int = ...
        def __init__(self,
            *,
            tag : typing.Text = ...,
            total : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["tag",b"tag","total",b"total"]) -> None: ...

    class FacetResults(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FACETRESULTS_FIELD_NUMBER: builtins.int
        @property
        def facetresults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ParagraphSearchResponse.FacetResult]: ...
        def __init__(self,
            *,
            facetresults : typing.Optional[typing.Iterable[global___ParagraphSearchResponse.FacetResult]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["facetresults",b"facetresults"]) -> None: ...

    class FacetsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ParagraphSearchResponse.FacetResults: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ParagraphSearchResponse.FacetResults] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TOTAL_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    FACETS_FIELD_NUMBER: builtins.int
    PAGE_NUMBER_FIELD_NUMBER: builtins.int
    RESULT_PER_PAGE_FIELD_NUMBER: builtins.int
    total: builtins.int = ...
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ParagraphSearchResponse.Result]:
        """"""
        pass
    @property
    def facets(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ParagraphSearchResponse.FacetResults]:
        """For each field what facets are."""
        pass
    page_number: builtins.int = ...
    """What page is the answer."""

    result_per_page: builtins.int = ...
    """How many results are in this page."""

    def __init__(self,
        *,
        total : builtins.int = ...,
        results : typing.Optional[typing.Iterable[global___ParagraphSearchResponse.Result]] = ...,
        facets : typing.Optional[typing.Mapping[typing.Text, global___ParagraphSearchResponse.FacetResults]] = ...,
        page_number : builtins.int = ...,
        result_per_page : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["facets",b"facets","page_number",b"page_number","result_per_page",b"result_per_page","results",b"results","total",b"total"]) -> None: ...
global___ParagraphSearchResponse = ParagraphSearchResponse

class VectorSearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    VECTOR_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """Shard ID"""

    @property
    def vector(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Embedded vector search."""
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        vector : typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","vector",b"vector"]) -> None: ...
global___VectorSearchRequest = VectorSearchRequest

class DocumentVectorIdentifier(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UUID_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    PARAGRAPH_ID_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    uuid: typing.Text = ...
    field: typing.Text = ...
    paragraph_id: typing.Text = ...
    start: builtins.int = ...
    end: builtins.int = ...
    def __init__(self,
        *,
        uuid : typing.Text = ...,
        field : typing.Text = ...,
        paragraph_id : typing.Text = ...,
        start : builtins.int = ...,
        end : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end",b"end","field",b"field","paragraph_id",b"paragraph_id","start",b"start","uuid",b"uuid"]) -> None: ...
global___DocumentVectorIdentifier = DocumentVectorIdentifier

class DocumentScored(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOC_ID_FIELD_NUMBER: builtins.int
    SCORE_FIELD_NUMBER: builtins.int
    @property
    def doc_id(self) -> global___DocumentVectorIdentifier: ...
    score: builtins.float = ...
    def __init__(self,
        *,
        doc_id : typing.Optional[global___DocumentVectorIdentifier] = ...,
        score : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["doc_id",b"doc_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["doc_id",b"doc_id","score",b"score"]) -> None: ...
global___DocumentScored = DocumentScored

class VectorSearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOCUMENTS_FIELD_NUMBER: builtins.int
    @property
    def documents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DocumentScored]:
        """List of docs closer to the asked one."""
        pass
    def __init__(self,
        *,
        documents : typing.Optional[typing.Iterable[global___DocumentScored]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["documents",b"documents"]) -> None: ...
global___VectorSearchResponse = VectorSearchResponse

class RelationSearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___RelationSearchRequest = RelationSearchRequest

class RelationSearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___RelationSearchResponse = RelationSearchResponse

class SearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOCUMENT_FIELD_NUMBER: builtins.int
    PARAGRAPH_FIELD_NUMBER: builtins.int
    @property
    def document(self) -> global___DocumentSearchRequest: ...
    @property
    def paragraph(self) -> global___ParagraphSearchRequest: ...
    def __init__(self,
        *,
        document : typing.Optional[global___DocumentSearchRequest] = ...,
        paragraph : typing.Optional[global___ParagraphSearchRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["document",b"document","paragraph",b"paragraph"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["document",b"document","paragraph",b"paragraph"]) -> None: ...
global___SearchRequest = SearchRequest

class SearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOCUMENT_FIELD_NUMBER: builtins.int
    PARAGRAPH_FIELD_NUMBER: builtins.int
    @property
    def document(self) -> global___DocumentSearchResponse: ...
    @property
    def paragraph(self) -> global___ParagraphSearchResponse: ...
    def __init__(self,
        *,
        document : typing.Optional[global___DocumentSearchResponse] = ...,
        paragraph : typing.Optional[global___ParagraphSearchResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["document",b"document","paragraph",b"paragraph"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["document",b"document","paragraph",b"paragraph"]) -> None: ...
global___SearchResponse = SearchResponse
