stages:
  - validate
  - test
  - deploy

checkstyle:
  tags:
    - docker
  image: python:3.8
  stage: validate
  before_script:
    - pip install -r requirements-dev.txt
    - python setup.py install
  script:
    - pycodestyle --show-source --show-pep8 --exclude="docs,.eggs,versioneer.py,*_version.py, venv, tests/test_drb_impl_ftp.py"

unit_tests:
  tags:
    - docker
  image: python:3.8
  stage: test
  before_script:
    - python setup.py install
    - pip install -r requirements.txt -r requirements-dev.txt -r requirements-test.txt
  script:
    - coverage run --source=drb_impl_ftp --omit=*_version.py,*__init__.py -m unittest -v
    - coverage xml
    - coverage report
    - coverage-badge
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      cobertura: coverage.xml

release:
  tags:
    - docker
  image: python:3.8
  stage: deploy
  before_script:
    - pip install -r requirements.txt -r requirements-dev.txt
    - python setup.py install
  script:
    - python setup.py sdist bdist_wheel
    - pip install dist/drb-impl-ftp-$CI_COMMIT_TAG.tar.gz
    - python -m twine upload dist/*
  only:
    - tags

pages:
  stage: deploy
  image: python:3.8
  before_script:
    - pip install -r requirements.txt -r requirements-doc.txt
  script:
    - sphinx-build -b html docs public
  artifacts:
    paths:
      - public
  only:
    - tags


