Metadata-Version: 2.1
Name: executor1
Version: 1.0.0
Summary: The configuration file is automatically executed
Home-page: http://gitlab.bczx365.com/rpa/UIA_Executor
Author: rejii
Author-email: ljy@bczx365.com
License: MIT
Keywords: uiautomation,autoit,python
Platform: UNKNOWN
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
Requires-Dist: pyautoit
Requires-Dist: uiautomation

#### 表一（UIA字段详情表）：

| 序号 | 参数                  | 是否必选 | 参数类型    | 参数说明                                                     | eg                                            |
| ---- | --------------------- | :------: | ----------- | ------------------------------------------------------------ | --------------------------------------------- |
| 1    | serialNum             |    n     | int         | 序号\编号（唯一                                              | 2                                             |
| 2    | isUIA                 |    N     | bool        | 是否使用uia来操作控件，若为 False，支持参数参考表2           | False                                         |
| 3    | openApp               |    N     | str（path） | 打开某个应用程序，该值为应用程序的绝对路径（若PATH里存在改应用程序则该值可为程序名字） | ‘’                                            |
| 4    | searchFromControl     |    N     | str         | 指定某个控件为查找根控件，该值指向 ‘参数1’                   | 1                                             |
| 5    | searchDepth           |    Y     | int         | 控件深度                                                     | 1                                             |
| 6    | searchInterval        |    N     | float       | 查找时间间隔，默认为0.5                                      | 0.5                                           |
| 7    | name                  |    N     | str         | 控件名字                                                     | ’‘                                            |
| 8    | className             |    N     | str         | 控件的classname                                              | ’‘                                            |
| 9    | subName               |    N     | str         | 部分控件名字                                                 | ’‘                                            |
| 10   | automationId          |    N     | str         | 控件AutomationId(需注意可能automationId会变动)               | ’‘                                            |
| 11   | foundIndex            |    N     | int         | ’‘                                                           | ’‘                                            |
| 12   | controlType           |    N     | str         | 控件类型（详情参考下方说明）                                 | WindowsControl                                |
| 13   | condiment             |    N     | str         | GetChildren，GetFirstChildControl，GetLastChildControl，GetParentControl， GetNextSiblingControl，GetPreviousSiblingControl,GetSameLevelControlByOffset,（详情参考下方说明） | ’GetSameLevelControlByOffset:3,GetChildren:1‘ |
| 14   | **childrenIndex       |    N     | str         | 当 Condiment 存在 GetChildren 时，该值不能为空               |                                               |
| 15   | operation             |    Y     | str         | 该控件的操作动作（详情参考下方说明）                         | ’SendKey, Click'                              |
| 16   | value                 |    N     | str         | 向控件输入文字（该参数绑定 ‘SendKeys’ 操作，详情参考下方Exist详细说明） | ’‘                                            |
| 17   | searchIntervalSeconds |    N     | float       | **[可选参数]** 查询间隔秒（该参数绑定 ‘Exist’ 操作，详情参考下方Exist详细说明） |                                               |
| 18   | printIfNotExist       |    N     | bool        | **[可选参数]** 是否输出到日志（该参数绑定 ‘Exist’ 操作，详情参考下方Exist详细说明） |                                               |
| 19   | maxSearchSeconds      |    N     | float       | **[可选参数]** 查询时间（该参数绑定 ‘Exist’ 操作，详情参考下方Exist详细说明） |                                               |
| 20   | raiseException        |    N     | bool        | **[可选参数]** 是否抛出异常（该参数绑定 ‘Refind’ 操作，详情参考下方Refind详细说明） |                                               |
| 21   | printIfNotDisappear   |    N     | bool        | **[可选参数]** 是否输出到日志（该参数绑定 ‘Disappears’ 操作，详情参考下方Disappears详细说明） |                                               |
| 22   | x                     |    N     | int、None   | **[可选参数]** 横轴坐标（该参数绑定 ‘MoveCursorToInnerPos，WheelDown，WheelUp’ 操作，详情参考下方MoveCursorToInnerPos，WheelDown，WheelUp详细说明） |                                               |
| 23   | y                     |    N     | int、None   | **[可选参数]** 竖轴坐标（该参数绑定 ‘MoveCursorToInnerPos，WheelDown，WheelUp’ 操作，详情参考下方MoveCursorToInnerPos，WheelDown，WheelUp详细说明） |                                               |
| 24   | ratioX                |    N     | float       | **[可选参数]** x轴比例（该参数绑定 ‘MoveCursorToInnerPos，WheelDown，WheelUp’ 操作，详情参考下方MoveCursorToInnerPos，WheelDown，WheelUp详细说明） |                                               |
| 25   | ratioY                |    N     | float       | **[可选参数]** y轴比例（该参数绑定 ‘MoveCursorToInnerPos，WheelDown，WheelUp’ 操作，详情参考下方MoveCursorToInnerPos，WheelDown，WheelUp详细说明） |                                               |
| 26   | simulateMove          |    N     | bool        | **[可选参数]** 模拟移动（该参数绑定 ‘MoveCursorToInnerPos，WheelDown，WheelUp’ 操作，详情参考下方MoveCursorToInnerPos，WheelDown，WheelUp详细说明） |                                               |
| 27   | waitTime              |    N     | float       | **[可选参数]** 等待时间（该参数绑定 ‘DragDrop，RightDragDrop，ShowWindow，Show，Hide，MoveCursorToInnerPos，WheelDown，WheelUp’ 操作，详情参考下方详细说明） |                                               |
| 28   | dragDropX1            |          | int         | **[可选参数]** x轴坐标（该参数绑定 ‘DragDrop，RightDragDrop’ 操作，详情参考下方详细说明） |                                               |
| 29   | dragDropX2            |          | int         | **[可选参数]** 拖拽后x坐标（该参数绑定 ‘DragDrop，RightDragDrop’ 操作，详情参考下方详细说明） |                                               |
| 30   | dragDropY1            |          | int         | **[可选参数]** y轴坐标（该参数绑定 ‘DragDrop，RightDragDrop’ 操作，详情参考下方详细说明） |                                               |
| 31   | dragDropY2            |          | int         | **[可选参数]** 拖拽后Y坐标（该参数绑定 ‘DragDrop，RightDragDrop’ 操作，详情参考下方详细说明） |                                               |
| 32   | moveSpeed             |          | float       | **[可选参数]** 移动速度（该参数绑定 ‘DragDrop，RightDragDrop’ 操作，详情参考下方详细说明） |                                               |
| 33   | wheelTimes            |          | int         | **[可选参数]** 滚动次数（该参数绑定 ‘WheelDown，WheelUp’ 操作，详情参考下方详细说明） |                                               |
| 34   | interval              |          | float       | **[可选参数] **间隔时间（该参数绑定 ‘WheelDown，WheelUp’ 操作，详情参考下方详细说明） |                                               |
| 35   | cmdShow               |          | int         | 窗口展示状态（该参数绑定 ‘ShowWindow，Show，Hide’ 操作，详情参考下方详细说明） |                                               |
| 36   | moveWindowX           |          | /           | 窗口移动（该参数绑定 ‘MoveWindow’ 操作，详情参考下方详细说明） |                                               |
| 37   | moveWindowY           |          | /           | 窗口移动（该参数绑定 ‘MoveWindow’ 操作，详情参考下方详细说明） |                                               |
| 38   | moveWindowWidth       |          | /           | 窗口移动（该参数绑定 ‘MoveWindow’ 操作，详情参考下方详细说明） |                                               |
| 39   | moveWindowHeight      |          | /           | 窗口移动（该参数绑定 ‘MoveWindow’ 操作，详情参考下方详细说明） |                                               |
| 40   | repaint               |          | /           | 窗口移动（该参数绑定 ‘MoveWindow’ 操作，详情参考下方详细说明） |                                               |
| 41   | text                  |          | str         | 新的窗口文本（该参数绑定 ‘SetWindowText’ 操作，详情参考下方详细说明） |                                               |
| 42   | savePath              |          | str         | 截图保存路径（该参数绑定 ‘CaptureToImage’ 操作，详情参考下方详细说明） |                                               |
| 43   | imageX                |          | int         | **[可选参数]** x（该参数绑定 ‘CaptureToImage’ 操作，详情参考下方详细说明） |                                               |
| 44   | imageY                |          | int         | **[可选参数]**y（该参数绑定 ‘CaptureToImage’ 操作，详情参考下方详细说明） |                                               |
| 45   | imageWidth            |          | int         | **[可选参数]**（该参数绑定 ‘CaptureToImage’ 操作，详情参考下方详细说明） |                                               |
| 46   | imageHeight           |          | int         | **[可选参数]**（该参数绑定 ‘CaptureToImage’ 操作，详情参考下方详细说明） |                                               |
| 47   | bitMapX               |          | int         | **[可选参数]**x（该参数绑定 ‘ToBitmap’ 操作，详情参考下方详细说明） |                                               |
| 48   | bitMapY               |          | int         | **[可选参数]**y（该参数绑定 ‘ToBitmap’ 操作，详情参考下方详细说明） |                                               |
| 49   | bitMapWidth           |          | int         | **[可选参数]**（该参数绑定 ‘ToBitmap’ 操作，详情参考下方详细说明） |                                               |
| 50   | bitMapHeight          |          | int         | **[可选参数]**（该参数绑定 ‘ToBitmap’ 操作，详情参考下方详细说明） |                                               |
| 51   | key                   |          | int         | 向控件发送键（该参数绑定 ‘SendKey’ 操作，详情参考下方详细说明） |                                               |
| 52   | hotKey                |          | str         | 向控件发送热键（该参数绑定 ‘HotKey’ 操作，详情参考下方详细说明） |                                               |
| 53   | raiseIfNotExist       |          | bool        | 若控件没有找到是否要抛出异常。默认为Ture。                   | True，False                                   |
| 54   | legacyPatternValue    |          | str         | 向控件发送文本，若普通SendKeys发送文本无效的话则可尝试采用此方法（该参数绑定 ‘LegacyPatternSetValue’ 操作，详情参考下方详细说明） |                                               |
|      |                       |          |             |                                                              |                                               |
|      |                       |          |             |                                                              |                                               |

#### 表二（Autoit字段详情表）：

| 序号 | 参数            | 是否必选 | 参数类型  | 参数说明                                                     | eg                                         |
| ---- | --------------- | -------- | --------- | ------------------------------------------------------------ | ------------------------------------------ |
| 1    | openApp         | N        | str       | 打开某个应用程序，该值为应用程序的绝对路径（若PATH里存在改应用程序则该值可为程序名字） | 'notepad.exe'                              |
| 2    | winTitle        | Y        | str       | windows窗口的title                                           | ’[CLASS:Notepad]‘ /'_ReadMe_.txt - 记事本' |
| 3    | winText         | N        | str       | windows窗口的text                                            | ''                                         |
| 4    | winHandle       | N        | int       | windows窗口的handle，若需要通过handle去操作控件的话在该值必传 | 0x00000000000C0C82                         |
| 5    | ctlClassNameNN  | N        | str       | 控件的ClassNameNN                                            | 'Edit1'                                    |
| 6    | ctlHandle       | N        | int       | 控件的handle，若需要通过handle去操作控件的话在该值必传       | 0x00000000000E0CA6                         |
| 7    | operation       | Y        | str       | 该控件的操作动作（详情参考下方说明）                         | 'CtlSend,CtlLeftClick'                     |
| 8    | sendValue       | N        | str       | 当Operation存在 CtlSend或 Send，该值不能为空                 |                                            |
| 9    | treeViewCommand | N        | str       | 发送一个命令到 TreeView32 控件.（该参数绑定 ‘CtlTreeView’ 操作，该值不能为空，详情参考下方CtlTreeView详细说明） |                                            |
| 10   | treeViewExtra1  | N        | str       | **[可选参数]** 一些命令的附加请求参数.（该参数绑定 ‘CtlTreeView’ 操作，详情参考下方CtlTreeView详细说明） |                                            |
| 11   | treeViewExtra2  | N        | str       | **[可选参数]**一些命令的附加请求参数.（该参数绑定 ‘CtlTreeView’ 操作，详情参考下方CtlTreeView详细说明） |                                            |
| 12   | ctlMoveX        | N        | int       | 在窗口内移动控件,要移动到的新 X 坐标（该参数绑定 ‘CtlMove’ 操作，该值不能为空，详情参考下方CtlMove详细说明） |                                            |
| 13   | ctlMoveY        | N        | int       | 在窗口内移动控件,要移动到的新 Y 坐标（该参数绑定 ‘CtlMove’ 操作，该值不能为空，详情参考下方CtlMove详细说明） |                                            |
| 14   | ctlMoveWidth    | N        | int       | **[可选参数]** 窗口的新宽度.（该参数绑定 ‘CtlMove’ 操作，详情参考下方CtlMove详细说明） |                                            |
| 15   | ctlMoveHeight   | N        | int       | **[可选参数]** 窗口的新高度.（该参数绑定 ‘CtlMove’ 操作，详情参考下方CtlMove详细说明） |                                            |
| 16   | listViewCommand | N        | str       | 向指定的 ListView32 控件发送命令.（该参数绑定 ‘CtlListView’ 操作，该值不能为空，详情参考下方CtlListView详细说明） |                                            |
| 17   | listViewExtra1  | N        | str       | **[可选参数]** 某些命令需要的额外参数.（该参数绑定 ‘CtlListView’ 操作，该值不能为空，详情参考下方CtlListView详细说明） |                                            |
| 18   | listViewExtra2  | N        | str       | **[可选参数]** 某些命令需要的额外参数.（该参数绑定 ‘CtlListView’ 操作，该值不能为空，详情参考下方CtlListView详细说明） |                                            |
| 19   | command         | N        | str       | 向指定控件发送命令.（该参数绑定 ‘CtlCommand’ 操作，该值不能为空，详情参考下方CtlCommand详细说明） |                                            |
| 20   | commandExtra    | N        | str       | **[可选参数]**某些命令需要额外的参数.（该参数绑定 ‘CtlCommand’ 操作，该值不能为空，详情参考下方CtlCommand详细说明） |                                            |
| 21   | menuItem        | N        | str       | **[可选参数]** 子菜单项目的文本.（该参数绑定 ‘WinMenuSelectItem’ 操作，该值不能为空，详情参考下方WinMenuSelectItem详细说明） |                                            |
| 22   | winMoveX        | N        | int       | 要移动到的新 X 坐标.（该参数绑定 ‘WinMove’ 操作，该值不能为空，详情参考下方WinMove详细说明） |                                            |
| 23   | winMoveY        | N        | int       | 要移动到的新 Y 坐标.（该参数绑定 ‘WinMove’ 操作，该值不能为空，详情参考下方WinMove详细说明） |                                            |
| 24   | winMoveHeight   | N        | int/float | **[可选参数]** 窗口的新高度.（该参数绑定 ‘WinMove’ 操作，该值不能为空，详情参考下方WinMove详细说明） |                                            |
| 25   | winMoveWeight   | N        | int/float | **[可选参数]** 窗口的新宽度.（该参数绑定 ‘WinMove’ 操作，该值不能为空，详情参考下方WinMove详细说明） |                                            |
| 26   | winNewTitle     | N        | str       | 需要修改成的新标题.该参数绑定 ‘WinSetTitle’ 操作，该值不能为空，详情参考下方WinSetTitle详细说明） |                                            |
| 27   | winTrans        | N        | int       | 透明度, 介于 0 到 255 之间的数值.数值越大则窗口越不透明. 255=不透明,0=不可见.（该参数绑定 ‘WinSetTrans’ 操作，该值不能为空，详情参考下方WinSetTrans详细说明） |                                            |
| 28   | ctlSendValue    | N        | str       |                                                              |                                            |
| 29   | sendValue       | N        | str       |                                                              |                                            |

#### Operation 详情说明

##### ***当使用 UIA 时，Operation 可为以下选项***

###### 1. SendKeys

- 方法描述：模拟键盘上的打字键。

- 可携带的参数字段：

- | 参数  | 是否必选 | 参数类型 | 参数说明 | eg      |
  | ----- | -------- | -------- | -------- | ------- |
  | value | 是       | str      |          | ‘hello‘ |

###### 2. SendKey

- 方法描述：向控件键入一个键。

- 可携带的参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明                   | eg   |
  | ---- | -------- | -------- | -------------------------- | ---- |
  | key  | 是       | int      | 该值参考文档最下方的参考值 | 0x01 |

###### 3. Click

- 方法描述：模拟鼠标点击，点击前可先使控件具有焦点。

- 可携带的参数：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | ---- | -------- | -------- | -------- | ---- |

###### 4. DoubleClick

- 方法描述：模拟鼠标双击，点击前可先使控件具有焦点。

- 可携带的参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | ---- | -------- | -------- | -------- | ---- |

###### 5. MiddleClick

- 方法描述：模拟鼠标中点击，点击前可先使控件具有焦点。

- 可携带的参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | ---- | -------- | -------- | -------- | ---- |
  |      |          |          |          |      |

###### 6. RightClick

- 方法描述：模拟鼠标右击，点击前可先使控件具有焦点。

- 可携带的参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | ---- | -------- | -------- | -------- | ---- |
  | ’    |          |          |          |      |

###### 7. SetFocus

- 方法描述：设置焦点

- 可携带的参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | ---- | -------- | -------- | -------- | ---- |
  |      |          |          |          |      |

###### 8. Exists

- 方法描述：等待控件出现

- 可携带的参数字段：

- | 参数                  | 是否必选 | 参数类型 | 参数说明                      | eg   |
  | --------------------- | -------- | -------- | ----------------------------- | ---- |
  | maxSearchSeconds      | 否       | float    | 查询等待时间，默认为30        |      |
  | searchIntervalSeconds | 否       | float    | 查询间隔时间，默认0.05        |      |
  | printIfNotExist       | 否       | bool     | 是否往日志输出异常，默认False |      |

###### 9. ReFind

- 方法描述：每个searchchintervalseconds在maxSearchSeconds秒内重新查找控件。  

- 可携带的参数字段：

- | 参数                  | 是否必选 | 参数类型 | 参数说明                | eg   |
  | --------------------- | -------- | -------- | ----------------------- | ---- |
  | maxSearchSeconds      | 否       | float    | 查询等待时间，默认为30  |      |
  | searchIntervalSeconds | 否       | float    | 查询间隔时间，默认0.05  |      |
  | raiseException        | 否       | bool     | 是否抛出异常，默认False |      |

###### 10. Disappears

- 方法描述：检查控件是否在每次查询间隔中消失。 

- 可携带的参数字段：

- | 参数                  | 是否必选 | 参数类型 | 参数说明                      | eg   |
  | --------------------- | -------- | -------- | ----------------------------- | ---- |
  | maxSearchSeconds      | 否       | float    | 查询等待时间，默认为30        |      |
  | searchIntervalSeconds | 否       | float    | 查询间隔时间，默认0.05        |      |
  | printIfNotDisappear   | 否       | bool     | 是否往日志输出异常，默认False |      |

###### 11. MoveCursorToInnerPos

- 方法描述：将光标移动到控件的内部位置，默认居中。

- 可携带的参数字段：

- | 参数         | 是否必选 | 参数类型   | 参数说明                                     | eg   |
  | ------------ | -------- | ---------- | -------------------------------------------- | ---- |
  | x            | 否       | int/None   | x坐标，默认为None，若x=0的话则不用考虑ratioX |      |
  | y            | 否       | int/None   | y坐标，默认None，若y=0的话则不用考虑ratioY   |      |
  | ratioX       | 否       | float/None | 比例，默认0                                  |      |
  | ratioY       | 否       | float/None | 比例，默认0                                  |      |
  | simulateMove | 否       | bool       | 模拟移动，默认True                           |      |

###### 12. MoveCursorToMyCenter

- 方法描述：将光标移动到控件的中心。

- 可携带的参数字段：

- | 参数         | 是否必选 | 参数类型   | 参数说明                                     | eg   |
  | ------------ | -------- | ---------- | -------------------------------------------- | ---- |
  | x            | 否       | int/None   | x坐标，默认为None，若x=0的话则不用考虑ratioX |      |
  | y            | 否       | int/None   | y坐标，默认None，若y=0的话则不用考虑ratioY   |      |
  | ratioX       | 否       | float/None | 比例，默认0                                  |      |
  | ratioY       | 否       | float/None | 比例，默认0                                  |      |
  | simulateMove | 否       | bool       | 模拟移动，默认True                           |      |

###### 13. DragDrop

- 方法描述：拖拽控件

- 可携带的参数字段：

- | 参数       | 是否必选 | 参数类型 | 参数说明          | eg   |
  | ---------- | -------- | -------- | ----------------- | ---- |
  | dragDropX1 | 是       | int      |                   |      |
  | dragDropX2 | 是       | int      |                   |      |
  | dragDropY1 | 是       | int      |                   |      |
  | dragDropY2 | 是       | int      |                   |      |
  | moveSpeed  | 否       | int      | 移动速度，默认1   |      |
  | waitTime   | 否       | float    | 等待时间，默认0.5 |      |

###### 14. RightDragDrop

- 方法描述：拖拽控件

- 可携带的参数字段：

- | 参数       | 是否必选 | 参数类型 | 参数说明          | eg   |
  | ---------- | -------- | -------- | ----------------- | ---- |
  | dragDropX1 | 是       | int      |                   |      |
  | dragDropX2 | 是       | int      |                   |      |
  | dragDropY1 | 是       | int      |                   |      |
  | dragDropY2 | 是       | int      |                   |      |
  | moveSpeed  | 否       | int      | 移动速度，默认1   |      |
  | waitTime   | 否       | float    | 等待时间，默认0.5 |      |

###### 15. WheelDown

- 方法描述：滚轮向下滚

- 可携带的参数：

- | 参数       | 是否必选 | 参数类型   | 参数说明                                     | eg   |
  | ---------- | -------- | ---------- | -------------------------------------------- | ---- |
  | x          | 否       | int/None   | x坐标，默认为None，若x=0的话则不用考虑ratioX |      |
  | y          | 否       | int/None   | y坐标，默认None，若y=0的话则不用考虑ratioY   |      |
  | ratioX     | 否       | float/None | 比例，默认0                                  |      |
  | ratioY     | 否       | float/None | 比例，默认0                                  |      |
  | wheelTimes | 否       | int        | 滚轮滚动次数，默认1                          |      |
  | interval   | 否       | float      | 间隔秒，默认0.05                             |      |
  | waitTime   | 否       | float      | 等待秒，默认0.5                              |      |

###### 16. WheelUp

- 方法描述：滚轮向上滚

- 可携带的参数：

- | 参数       | 是否必选 | 参数类型   | 参数说明                                     | eg   |
  | ---------- | -------- | ---------- | -------------------------------------------- | ---- |
  | x          | 否       | int/None   | x坐标，默认为None，若x=0的话则不用考虑ratioX |      |
  | y          | 否       | int/None   | y坐标，默认None，若y=0的话则不用考虑ratioY   |      |
  | ratioX     | 否       | float/None | 比例，默认0                                  |      |
  | ratioY     | 否       | float/None | 比例，默认0                                  |      |
  | wheelTimes | 否       | int        | 滚轮滚动次数，默认1                          |      |
  | interval   | 否       | float      | 间隔秒，默认0.05                             |      |
  | waitTime   | 否       | float      | 等待秒，默认0.5                              |      |

###### 17. ShowWindow

- 方法描述：设置窗口展示状态

- 可携带的参数：

- | 参数     | 是否必选 | 参数类型 | 参数说明                   | eg   |
  | -------- | -------- | -------- | -------------------------- | ---- |
  | cmdShow  | 是       | int      | 该值参考文档最下方的参考值 |      |
  | waitTime | 否       | float    | 等待秒，默认0.5            |      |

###### 18. Show

- 方法描述：设置窗口状态为展示

- 可携带的参数：

- |   参数   | 是否必选 | 参数类型 | 参数说明        | eg   |
  | :------: | -------- | -------- | :-------------- | ---- |
  | cmdShow  | 否       | int      | show            |      |
  | waitTime | 否       | float    | 等待秒，默认0.5 |      |

###### 19. Hide

- 方法描述：设置窗口状态为隐藏

- 可携带的参数：

- |   参数   | 是否必选 | 参数类型 | 参数说明        | eg   |
  | :------: | -------- | -------- | :-------------- | ---- |
  | cmdShow  | 否       | int      | Hide            |      |
  | waitTime | 否       | float    | 等待秒，默认0.5 |      |

###### 20. GetWindowText

- 方法描述：获取窗口文本

- 可携带的参数：

- | 参数             | 是否必选 | 参数类型 | 参数说明 | eg   |
  | ---------------- | -------- | -------- | -------- | ---- |
  | moveWindowX      | 是       | int      |          |      |
  | moveWindowY      | 是       | int      |          |      |
  | moveWindowHeight | 是       | int      |          |      |
  | moveWindowWidth  | 是       | int      |          |      |
  | repaint          | 否       | bool     |          |      |

###### 21. MoveWindow

- 方法描述：移动窗口

- 可携带的参数：

- | 参数             | 是否必选 | 参数类型 | 参数说明 | eg   |
  | ---------------- | -------- | -------- | -------- | ---- |
  | moveWindowX      | 是       | int      |          |      |
  | moveWindowY      | 是       | int      |          |      |
  | moveWindowHeight | 是       | int      |          |      |
  | moveWindowWidth  | 是       | int      |          |      |
  | repaint          | 否       | bool     |          |      |

###### 22. SetWindowText

- 方法描述：设置窗口文本

- 可携带的参数：

- | 参数 | 是否必选 | 参数类型 | 参数说明     | eg   |
  | :--: | -------- | -------- | :----------- | ---- |
  | text | 是       | str      | 新的窗口文本 |      |

###### 23. CaptureToImage

- 方法描述：将控件转为图片

- 可携带的参数：

- |    参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :---------: | -------- | -------- | :------- | ---- |
  |  savePath   | 是       | str      | 保存路径 |      |
  |   imageX    | 否       | int      | 默认0    |      |
  |   imageY    | 否       | int      | 默认0    |      |
  | imageWidth  | 否       | int      | 默认0    |      |
  | imageHeight | 否       | int      | 默认0    |      |

###### 24. ToBitMap

- 方法描述：转为位图

- 可携带的参数：

- |     参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :----------: | -------- | -------- | :------- | ---- |
  |   bitMapX    | 否       | int      | 默认0    |      |
  |   bitMapY    | 否       | int      | 默认0    |      |
  | bitMapWidth  | 否       | int      | 默认0    |      |
  | bitMapHeight | 否       | int      | 默认0    |      |

###### 25. SetTopMost 

- 方法描述：将窗口置顶，WindowsCOntrol 和 PaneControl 支持

- 可携带的参数：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :--: | -------- | -------- | :------- | ---- |

###### 26. SetActive 

- 方法描述：激活窗口，WindowsCOntrol 和 PaneControl 支持

- 可携带的参数：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :--: | -------- | -------- | :------- | ---- |

###### 27. HotKey 

- 方法描述：想控件发送快捷键

- 可携带的参数：

- |  参数  | 是否必选 | 参数类型 | 参数说明 | eg        |
  | :----: | -------- | -------- | :------- | --------- |
  | hotkey | 是       | str      | 快捷键   | ‘{ENTER}’ |

###### 28.LegacyPatternSetValue

- 方法描述：想控件发送文本

- 可携带的参数：

- |        参数        | 是否必选 | 参数类型 | 参数说明         | eg         |
  | :----------------: | -------- | -------- | :--------------- | ---------- |
  | legacyPatternValue | 是       | str      | 向控件发送的文本 | ‘20211201’ |





##### ***当使用 Autoit时，Operation 可为以下选项***

###### 1. winWait

- 方法描述：暂停脚本的执行直至指定窗口存在(出现)为止.

- 可携带参数字段：

- |   参数   | 是否必选 | 参数类型 | 参数说明 | eg                          |
  | :------: | -------- | -------- | :------- | --------------------------- |
  | winTitle | 是       | str      | 窗口标题 | "[CLASS:Notepad]"、"另存为" |
  | winText  | 否       | str      | 窗口文本 |                             |

###### 2. WinWaitByHandle

- 方法描述：暂停脚本的执行直至指定窗口存在(出现)为止.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### 3. WinClose

- 方法描述：关闭指定窗口.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |      |
  | -------- | -------- | -------- | -------- | ---- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |      |
  | winText  | 否       | str      | 窗口文本 |      |      |

###### WinCloseByHandle

- 方法描述：关闭指定窗口.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinKill

- 方法描述：强行关闭指定窗口.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |      |
  | -------- | -------- | -------- | -------- | ---- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |      |
  | winText  | 否       | str      | 窗口文本 |      |      |

###### Send

- 方法描述：向激活窗口发送模拟键击操作.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |      |
  | --------- | -------- | -------- | -------- | ---- | ---- |
  | sendValue | 是       | str      |          |      |      |

###### WinKillByHandle

- 方法描述：强行关闭指定窗口.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | :--- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinActivate

- 方法描述：激活指定的窗口(设置焦点到该窗口,使其成为活动窗口).

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |      |
  | -------- | -------- | -------- | -------- | ---- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |      |
  | winText  | 否       | str      | 窗口文本 |      |      |

###### WinActivateByHandle

- 方法描述：激活指定的窗口(设置焦点到该窗口,使其成为活动窗口).

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinWaitActivate

- 方法描述：暂停脚本的执行直至指定窗口被激活(成为活动状态)为止.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |      |
  | -------- | -------- | -------- | -------- | ---- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |      |
  | winText  | 否       | str      | 窗口文本 |      |      |

###### WinWaitActivateByHandle

- 方法描述：暂停脚本的执行直至指定窗口被激活(成为活动状态)为止.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinExists

- 方法描述：检查指定的窗口是否存在.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |      |
  | -------- | -------- | -------- | -------- | ---- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |      |
  | winText  | 否       | str      | 窗口文本 |      |      |

###### WinExistsByHandle

- 方法描述：检查指定的窗口是否存在.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinActive

- 方法描述：检查指定的窗口是否存在且当前被激活.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |      |
  | -------- | -------- | -------- | -------- | ---- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |      |
  | winText  | 否       | str      | 窗口文本 |      |      |

###### WinActiveByHandle

- 方法描述：检查指定的窗口是否存在且当前被激活.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinGetCaretPos

- 方法描述：返回顶层窗口的插入符的坐标位置.

- 可携带参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :--: | -------- | -------- | :------- | ---- |

###### WinGetClassList

- 方法描述：获取指定窗口的所有控件类的列表.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetClassListByHandle

- 方法描述：获取指定窗口的所有控件类的列表.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinGetClientSize

- 方法描述：获取指定窗口的客户区的大小信息.

- 可携带参数字段：
  
- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetClientSizeByHandle

- 方法描述：获取指定窗口的客户区的大小信息.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinGetHandle

- 方法描述：获取指定窗口的内部句柄.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetHandleAsText

- 方法描述：获取指定窗口的内部句柄.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetPos

- 方法描述：获取指定窗口的坐标位置和大小等属性.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetPosByHandle

- 方法描述：获取指定窗口的坐标位置和大小等属性.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinGetProcess

- 方法描述：获取指定窗口关联的进程ID(PID).

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetProcessByHandle

- 方法描述：获取指定窗口关联的进程ID(PID).

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinGetState

- 方法描述：获取指定窗口的状态.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetStateByHandle

- 方法描述：获取指定窗口的状态.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinGetText

- 方法描述：获取指定窗口中的文本.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetTextByHandle

- 方法描述：获取指定窗口中的文本.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinGetTitle

- 方法描述：获取指定窗口的完整标题名.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinGetTitleByHandle

- 方法描述：获取指定窗口的完整标题名.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinMenuSelectItem

- 方法描述：调用窗口中的某个菜单项目.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------- | -------- | -------- | --------------- | ---- |
  | winTitle | 是       | str      | 窗口标题        |      |
  | winText  | 否       | str      | 窗口文本        |      |
  | menuItem | 是       | list     | 菜单项目的文本. |      |

###### WinMenuSelectItemByHandle

- 方法描述：调用窗口中的某个菜单项目.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明        | eg   |
  | :-------: | -------- | -------- | :-------------- | ---- |
  | winHandle | 是       | int      | 窗口句柄        |      |
  | menuItem  | 是       | list     | 菜单项目的文本. |      |

###### WinMinimizeAll

- 方法描述：最小化全部窗口.

- 可携带参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :--: | -------- | -------- | :------- | ---- |

###### WinMinimizeAllUndo

- 方法描述：撤销此前的 WinMinimizeAll 的效果.

- 可携带参数字段：

- | 参数 | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :--: | -------- | -------- | :------- | ---- |

###### WinMove

- 方法描述：移动指定的窗口或调整窗口的大小.

- 可携带参数字段：

- | 参数          | 是否必选 | 参数类型 | 参数说明                     | eg   |
  | ------------- | -------- | -------- | ---------------------------- | ---- |
  | winTitle      | 是       | str      | 窗口标题                     |      |
  | winText       | 否       | str      | 窗口文本                     |      |
  | winMoveX      | 是       | int      | 要移动到的新 X 坐标.         |      |
  | winMoveY      | 是       | int      | 要移动到的新 Y 坐标.         |      |
  | winMoveHeight | 否       | int      | **[可选参数]** 窗口的新宽度. |      |
  | winMoveWeight | 否       | int      | **[可选参数]** 窗口的新高度. |      |

###### WinMoveByHandle

- 方法描述：移动指定的窗口或调整窗口的大小.

- 可携带参数字段：

- | 参数          | 是否必选 | 参数类型 | 参数说明                     | eg   |
  | ------------- | -------- | -------- | ---------------------------- | ---- |
  | winHandle     | 是       | str      | 窗口标题                     |      |
  | winMoveX      | 是       | int      | 要移动到的新 X 坐标.         |      |
  | winMoveY      | 是       | int      | 要移动到的新 Y 坐标.         |      |
  | winMoveHeight | 否       | int      | **[可选参数]** 窗口的新宽度. |      |
  | winMoveWeight | 否       | int      | **[可选参数]** 窗口的新高度. |      |

###### WinTopMost

- 方法描述：设置指定窗口的"总是在顶层"属性.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinUnTop

- 方法描述：窗口取消置顶

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinTopMostByHandle

- 方法描述：设置指定窗口的"总是在顶层"属性.

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinUnTopByHandle

- 方法描述：窗口取消置顶

- 可携带参数字段：

- |   参数    | 是否必选 | 参数类型 | 参数说明 | eg   |
  | :-------: | -------- | -------- | :------- | ---- |
  | winHandle | 是       | int      | 窗口句柄 |      |

###### WinHide

- 方法描述：将从窗口状态设置为隐藏状态

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinHideByHandle

- 方法描述：将从窗口状态设置为隐藏状态

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinShow

- 方法描述：将从窗口状态设置为显示状态

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinShowByHandle

- 方法描述：将从窗口状态设置为显示状态

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinMin

- 方法描述：将从窗口状态设置为最小化状态

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinMinByHandle

- 方法描述：将从窗口状态设置为最小化状态

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinMax

- 方法描述：将从窗口状态设置为最大化状态

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinMaxByHandle

- 方法描述：将从窗口状态设置为最大化状态

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinRestore

- 方法描述：将从窗口状态重置，撤销窗口的最小化或最大化状态

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinRestoreByHandle

- 方法描述：将从窗口状态重置，撤销窗口的最小化或最大化状态

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinNormal

- 方法描述：将窗口状态设置为正常

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinNormalByHandle

- 方法描述：将窗口状态设置为正常

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinDisable

- 方法描述：禁用窗口

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinDisableByHandle

- 方法描述：禁用窗口

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinMinDisable

- 方法描述：

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinMinDisableByHandle

- 方法描述：

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinNa

- 方法描述：

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinNaByHandle

- 方法描述：

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinDefault

- 方法描述：将窗口状态设为默认状态

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinDefaultByHandle

- 方法描述：将窗口状态设为默认状态

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinSetTile

- 方法描述：修改指定窗口的标题.

- 可携带参数字段：

- | 参数        | 是否必选 | 参数类型 | 参数说明            | eg   |
  | ----------- | -------- | -------- | ------------------- | ---- |
  | winTitle    | 是       | str      | 窗口标题            |      |
  | winText     | 否       | str      | 窗口文本            |      |
  | WinNewTitle | 是       | str      | 需要修改成的新标题. |      |

###### WinSetTitleByHandle

- 方法描述：修改指定窗口的标题.

- 可携带参数字段：

- | 参数        | 是否必选 | 参数类型 | 参数说明            | eg   |
  | ----------- | -------- | -------- | ------------------- | ---- |
  | winHandle   | 是       | str      | 窗口句柄            |      |
  | WinNewTitle | 是       | str      | 需要修改成的新标题. |      |

###### WinSetTrans

- 方法描述：设置指定窗口的透明度(仅支持Windows 2000/XP或更高版本)

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |
  | WinTrans | 是       | int      | 透明度   |      |

###### WinSetTransByHandle

- 方法描述：设置指定窗口的透明度(仅支持Windows 2000/XP或更高版本)

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | WinTrans  | 是       | int      | 透明度   |      |

###### WinWaitClose

- 方法描述：暂停脚本的执行直至所指定窗口不再存在为止.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinWaitCloseByHandle

- 方法描述：暂停脚本的执行直至所指定窗口不再存在为止.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### WinWaitNotActive

- 方法描述：暂停脚本的执行直至指定窗口不是激活状态为止.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### WinWaitNotActiveByHandle

- 方法描述：暂停脚本的执行直至指定窗口不是激活状态为止.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### CtlLeftClick

- 方法描述：向指定控件发送鼠标点击命令. 

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlLeftClickByHandle

- 方法描述：向指定控件发送鼠标点击命令. 

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlDoubleclick

- 方法描述：向指定控件发送鼠标点击命令. 双击

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlDoubleClickByHandle

- 方法描述：向指定控件发送鼠标点击命令. 双击

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlRightClick

- 方法描述：向指定控件发送鼠标点击命令. 右击

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlRightClickByHandle

- 方法描述：向指定控件发送鼠标点击命令. 右击

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlRightDoubleClick

- 方法描述：向指定控件发送鼠标点击命令. 右键双击

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlRightDoubleClickByHandle

- 方法描述：向指定控件发送鼠标点击命令. 右键双击

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlSend

- 方法描述：向指定的控件发送字符串.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明              | eg   |
  | -------------- | -------- | -------- | --------------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题              |      |
  | winText        | 否       | str      | 窗口文本              |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN       |      |
  | sendValue      | 是       | str      | 要设置到控件的新文本. |      |

###### CtlSendByHandle

- 方法描述：向指定的控件发送字符串.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明              | eg   |
  | --------- | -------- | -------- | --------------------- | ---- |
  | winHandle | 是       | str      | 窗口句柄              |      |
  | ctlHandle | 是       | str      | 控件句柄              |      |
  | sendValue | 是       | str      | 要设置到控件的新文本. |      |

###### CtlSetText

- 方法描述：修改指定控件的文本.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明              | eg   |
  | -------------- | -------- | -------- | --------------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题              |      |
  | winText        | 否       | str      | 窗口文本              |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN       |      |
  | ctlText        | 是       | str      | 要设置到控件的新文本. |      |

###### CtlSetTextByHandle

- 方法描述：修改指定控件的文本.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明              | eg   |
  | --------- | -------- | -------- | --------------------- | ---- |
  | winHandle | 是       | str      | 窗口句柄              |      |
  | ctlHandle | 是       | str      | 控件句柄              |      |
  | ctlText   | 是       | str      | 要设置到控件的新文本. |      |

###### CtlCommand

- 方法描述：向指定控件发送命令.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明                               | eg   |
  | -------------- | -------- | -------- | -------------------------------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题                               |      |
  | winText        | 否       | str      | 窗口文本                               |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN                        |      |
  | command        | 否       | str      | 要发送到控件的命令.                    |      |
  | extra          | 否       | str      | **[可选参数]** 一些命令的附加请求参数. |      |

###### CtlCommandByHandle

- 方法描述：向指定控件发送命令.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明                               | eg   |
  | --------- | -------- | -------- | -------------------------------------- | ---- |
  | winHandle | 是       | str      | 窗口句柄                               |      |
  | ctlHandle | 是       | str      | 控件句柄                               |      |
  | command   | 否       | str      | 要发送到控件的命令 (见下方参考).       |      |
  | extra     | 否       |          | **[可选参数]** 一些命令的附加请求参数. |      |

###### CtlListView

- 方法描述：向指定的 ListView32 控件发送命令.

- 可携带参数字段：

- | 参数            | 是否必选 | 参数类型 | 参数说明                               | eg   |
  | --------------- | -------- | -------- | -------------------------------------- | ---- |
  | winTitle        | 是       | str      | 窗口标题                               |      |
  | winText         | 否       | str      | 窗口文本                               |      |
  | ctlClassNameNN  | 是       | str      | 控件ClassNameNN                        |      |
  | listViewCommand | 否       | str      | **[可选参数]** 一些命令的附加请求参数. |      |
  | listViewExtra1  | 否       | str      | **[可选参数]** 一些命令的附加请求参数. |      |
  | listViewExtra2  | 否       | str      | **[可选参数]** 一些命令的附加请求参数. |      |

###### CtlListViewByHandle

- 方法描述：向指定的 ListView32 控件发送命令.

- 可携带参数字段：

- | 参数            | 是否必选 | 参数类型 | 参数说明                               | eg   |
  | --------------- | -------- | -------- | -------------------------------------- | ---- |
  | winHandle       | 是       | str      | 窗口句柄                               |      |
  | ctlHandle       | 是       | str      | 控件句柄                               |      |
  | listViewCommand | 否       | str      | 要发送到控件的命令 (见下方参考).       |      |
  | listViewExtra1  | 否       |          | **[可选参数]** 一些命令的附加请求参数. |      |
  | listViewExtra2  | 否       |          | **[可选参数]** 一些命令的附加请求参数. |      |
  |                 |          |          |                                        |      |

###### CtlDisable

- 方法描述：禁用或使某控件变成灰色不可用状态.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlDisableByHandle

- 方法描述：禁用或使某控件变成灰色不可用状态.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlEnable

- 方法描述：使灰色按钮/控件变为"可用"状态.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlEnableByHandle

- 方法描述：使灰色按钮/控件变为"可用"状态.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlFocus

- 方法描述：设置输入焦点到指定窗口的某个控件上.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlFocusByHandle

- 方法描述：设置输入焦点到指定窗口的某个控件上.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlGetFocus

- 方法描述：返回指定窗口上键盘焦点所在的控件的类别名.

- 可携带参数字段：

- | 参数     | 是否必选 | 参数类型 | 参数说明 | eg   |
  | -------- | -------- | -------- | -------- | ---- |
  | winTitle | 是       | str      | 窗口标题 |      |
  | winText  | 否       | str      | 窗口文本 |      |

###### CtlGetFocusByHandle

- 方法描述：返回指定窗口上键盘焦点所在的控件的类别名.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |

###### CtlGetHandle

- 方法描述：获取指定控件的内部句柄.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winHandle      | 是       | str      | 窗口句柄        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlGetHandleAsText

- 方法描述：获取指定控件的内部句柄.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlGetPos

- 方法描述：获取指定控件相对其窗口的坐标位置和大小等信息.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlGetPosByHandle

- 方法描述：获取指定控件相对其窗口的坐标位置和大小等信息.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlGetText

- 方法描述：获取指定控件上的文本.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlGetTextByHandle

- 方法描述：获取指定控件上的文本.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlHide

- 方法描述：隐藏指定控件.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlHideByHandle

- 方法描述：隐藏指定控件.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlMove

- 方法描述：在窗口内移动控件.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明                           | eg   |
  | -------------- | -------- | -------- | ---------------------------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题                           |      |
  | winText        | 否       | str      | 窗口文本                           |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN                    |      |
  | ctlMoveX       | 是       | int      | 要移动到的新 X 坐标.               |      |
  | ctlMoveY       | 是       | int      | 要移动到的新 Y 坐标.               |      |
  | ctlMoveWidth   | 否       | int      | **[可选参数]** 窗口的新宽度.默认-1 |      |
  | ctlMoveHeight  | 否       | int      | **[可选参数]** 窗口的新高度.默认-1 |      |

###### CtlMoveByHandle

- 方法描述：在窗口内移动控件.

- 可携带参数字段：

- | 参数          | 是否必选 | 参数类型 | 参数说明                           | eg   |
  | ------------- | -------- | -------- | ---------------------------------- | ---- |
  | winHandle     | 是       | str      | 窗口句柄                           |      |
  | ctlHandle     | 是       | str      | 控件句柄                           |      |
  | ctlMoveX      | 是       | int      | 要移动到的新 X 坐标.               |      |
  | ctlMoveY      | 是       | int      | 要移动到的新 Y 坐标.               |      |
  | ctlMoveWidth  | 否       | int      | **[可选参数]** 窗口的新宽度.默认-1 |      |
  | ctlMoveHeight | 否       | int      | **[可选参数]** 窗口的新高度.默认-1 |      |

###### CtlShow

- 方法描述：显示已经隐藏的控件.

- 可携带参数字段：

- | 参数           | 是否必选 | 参数类型 | 参数说明        | eg   |
  | -------------- | -------- | -------- | --------------- | ---- |
  | winTitle       | 是       | str      | 窗口标题        |      |
  | winText        | 否       | str      | 窗口文本        |      |
  | ctlClassNameNN | 是       | str      | 控件ClassNameNN |      |

###### CtlShowByHandle

- 方法描述：显示已经隐藏的控件.

- 可携带参数字段：

- | 参数      | 是否必选 | 参数类型 | 参数说明 | eg   |
  | --------- | -------- | -------- | -------- | ---- |
  | winHandle | 是       | str      | 窗口句柄 |      |
  | ctlHandle | 是       | str      | 控件句柄 |      |

###### CtlTreeView

- 方法描述：发送一个命令到 TreeView32 控件.

- 可携带参数字段：

- | 参数            | 是否必选 | 参数类型 | 参数说明                               | eg   |
  | --------------- | -------- | -------- | -------------------------------------- | ---- |
  | winTitle        | 是       | str      | 窗口标题                               |      |
  | winText         | 否       | str      | 窗口文本                               |      |
  | ctlClassNameNN  | 是       | str      | 控件ClassNameNN                        |      |
  | treeViewCommand | 否       | str      | **[可选参数]** 一些命令的附加请求参数. |      |
  | treeViewExtra1  | 否       | str      | **[可选参数]** 一些命令的附加请求参数. |      |
  | treeViewExtra2  | 否       | str      | **[可选参数]** 一些命令的附加请求参数. |      |

###### CtlTreeViewByHandle

- 方法描述：发送一个命令到 TreeView32 控件.

- 可携带参数字段：

- | 参数            | 是否必选 | 参数类型 | 参数说明                               | eg   |
  | --------------- | -------- | -------- | -------------------------------------- | ---- |
  | winHandle       | 是       | str      | 窗口句柄                               |      |
  | ctlHandle       | 是       | str      | 控件句柄                               |      |
  | treeViewCommand | 否       | str      | 要发送到控件的命令 (见下方参考).       |      |
  | treeViewExtra1  | 否       |          | **[可选参数]** 一些命令的附加请求参数. |      |
  | treeViewExtra2  | 否       |          | **[可选参数]** 一些命令的附加请求参数. |      |
  |                 |          |          |                                        |      |

#### ControlType 详情说明

***ControlType 该参数仅支持 UIA，可为以下选项***

AppBarControl 

ButtonControl 

CalendarControl 

CheckBoxControl 

ComboBoxControl 

CustomControl 

DataGridControl 

DataItemControl 

DocumentControl 

EditControl 

GroupControl 

HeaderControl 

HeaderItemControl 

HyperlinkControl 

ImageControl 

ListControl 

ListItemControl 

MenuBarControl 

MenuControl 

MenuItemControl 

PaneControl 

ProgressBarControl 

RadioButtonControl 

ScrollBarControl 

SemanticZoomControl 

SeparatorControl 

SliderControl 

SpinnerControl 

SplitButtonControl 

StatusBarControl 

TabControl 

TabItemControl 

TableControl 

TextControl 

ThumbControl 

TitleBarControl 

ToolBarControl 

ToolTipControl 

TreeControl 

TreeItemControl 

WindowControl 

#### Condiment 详情说明

***Condiment 该参数仅支持 UIA，可为以下选项***

1. GetChildren（自控件）
2. GetParentControl（父控件）
3. GetFirstChildControl（首个自控件）
4. GetLastChildControl（最后一个子控件）
5. GetNextSiblingControl（妹妹控件）
6. GetPreviousSiblingControl（姐姐控件）
7. GetSameLevelControlByOffset（根据offset获取同级控件）

#### 其他参考

1. SendKey 中 key 的参考值

   ```python
   class Keys:
       """Key codes from Win32."""
       VK_LBUTTON = 0x01                       #Left mouse button
       VK_RBUTTON = 0x02                       #Right mouse button
       VK_CANCEL = 0x03                        #Control-break processing
       VK_MBUTTON = 0x04                       #Middle mouse button (three-button mouse)
       VK_XBUTTON1 = 0x05                      #X1 mouse button
       VK_XBUTTON2 = 0x06                      #X2 mouse button
       VK_BACK = 0x08                          #BACKSPACE key
       VK_TAB = 0x09                           #TAB key
       VK_CLEAR = 0x0C                         #CLEAR key
       VK_RETURN = 0x0D                        #ENTER key
       VK_ENTER = 0x0D
       VK_SHIFT = 0x10                         #SHIFT key
       VK_CONTROL = 0x11                       #CTRL key
       VK_MENU = 0x12                          #ALT key
       VK_PAUSE = 0x13                         #PAUSE key
       VK_CAPITAL = 0x14                       #CAPS LOCK key
       VK_KANA = 0x15                          #IME Kana mode
       VK_HANGUEL = 0x15                       #IME Hanguel mode (maintained for compatibility; use VK_HANGUL)
       VK_HANGUL = 0x15                        #IME Hangul mode
       VK_JUNJA = 0x17                         #IME Junja mode
       VK_FINAL = 0x18                         #IME final mode
       VK_HANJA = 0x19                         #IME Hanja mode
       VK_KANJI = 0x19                         #IME Kanji mode
       VK_ESCAPE = 0x1B                        #ESC key
       VK_CONVERT = 0x1C                       #IME convert
       VK_NONCONVERT = 0x1D                    #IME nonconvert
       VK_ACCEPT = 0x1E                        #IME accept
       VK_MODECHANGE = 0x1F                    #IME mode change request
       VK_SPACE = 0x20                         #SPACEBAR
       VK_PRIOR = 0x21                         #PAGE UP key
       VK_PAGEUP = 0x21
       VK_NEXT = 0x22                          #PAGE DOWN key
       VK_PAGEDOWN = 0x22
       VK_END = 0x23                           #END key
       VK_HOME = 0x24                          #HOME key
       VK_LEFT = 0x25                          #LEFT ARROW key
       VK_UP = 0x26                            #UP ARROW key
       VK_RIGHT = 0x27                         #RIGHT ARROW key
       VK_DOWN = 0x28                          #DOWN ARROW key
       VK_SELECT = 0x29                        #SELECT key
       VK_PRINT = 0x2A                         #PRINT key
       VK_EXECUTE = 0x2B                       #EXECUTE key
       VK_SNAPSHOT = 0x2C                      #PRINT SCREEN key
       VK_INSERT = 0x2D                        #INS key
       VK_DELETE = 0x2E                        #DEL key
       VK_HELP = 0x2F                          #HELP key
       VK_0 = 0x30                             #0 key
       VK_1 = 0x31                             #1 key
       VK_2 = 0x32                             #2 key
       VK_3 = 0x33                             #3 key
       VK_4 = 0x34                             #4 key
       VK_5 = 0x35                             #5 key
       VK_6 = 0x36                             #6 key
       VK_7 = 0x37                             #7 key
       VK_8 = 0x38                             #8 key
       VK_9 = 0x39                             #9 key
       VK_A = 0x41                             #A key
       VK_B = 0x42                             #B key
       VK_C = 0x43                             #C key
       VK_D = 0x44                             #D key
       VK_E = 0x45                             #E key
       VK_F = 0x46                             #F key
       VK_G = 0x47                             #G key
       VK_H = 0x48                             #H key
       VK_I = 0x49                             #I key
       VK_J = 0x4A                             #J key
       VK_K = 0x4B                             #K key
       VK_L = 0x4C                             #L key
       VK_M = 0x4D                             #M key
       VK_N = 0x4E                             #N key
       VK_O = 0x4F                             #O key
       VK_P = 0x50                             #P key
       VK_Q = 0x51                             #Q key
       VK_R = 0x52                             #R key
       VK_S = 0x53                             #S key
       VK_T = 0x54                             #T key
       VK_U = 0x55                             #U key
       VK_V = 0x56                             #V key
       VK_W = 0x57                             #W key
       VK_X = 0x58                             #X key
       VK_Y = 0x59                             #Y key
       VK_Z = 0x5A                             #Z key
       VK_LWIN = 0x5B                          #Left Windows key (Natural keyboard)
       VK_RWIN = 0x5C                          #Right Windows key (Natural keyboard)
       VK_APPS = 0x5D                          #Applications key (Natural keyboard)
       VK_SLEEP = 0x5F                         #Computer Sleep key
       VK_NUMPAD0 = 0x60                       #Numeric keypad 0 key
       VK_NUMPAD1 = 0x61                       #Numeric keypad 1 key
       VK_NUMPAD2 = 0x62                       #Numeric keypad 2 key
       VK_NUMPAD3 = 0x63                       #Numeric keypad 3 key
       VK_NUMPAD4 = 0x64                       #Numeric keypad 4 key
       VK_NUMPAD5 = 0x65                       #Numeric keypad 5 key
       VK_NUMPAD6 = 0x66                       #Numeric keypad 6 key
       VK_NUMPAD7 = 0x67                       #Numeric keypad 7 key
       VK_NUMPAD8 = 0x68                       #Numeric keypad 8 key
       VK_NUMPAD9 = 0x69                       #Numeric keypad 9 key
       VK_MULTIPLY = 0x6A                      #Multiply key
       VK_ADD = 0x6B                           #Add key
       VK_SEPARATOR = 0x6C                     #Separator key
       VK_SUBTRACT = 0x6D                      #Subtract key
       VK_DECIMAL = 0x6E                       #Decimal key
       VK_DIVIDE = 0x6F                        #Divide key
       VK_F1 = 0x70                            #F1 key
       VK_F2 = 0x71                            #F2 key
       VK_F3 = 0x72                            #F3 key
       VK_F4 = 0x73                            #F4 key
       VK_F5 = 0x74                            #F5 key
       VK_F6 = 0x75                            #F6 key
       VK_F7 = 0x76                            #F7 key
       VK_F8 = 0x77                            #F8 key
       VK_F9 = 0x78                            #F9 key
       VK_F10 = 0x79                           #F10 key
       VK_F11 = 0x7A                           #F11 key
       VK_F12 = 0x7B                           #F12 key
       VK_F13 = 0x7C                           #F13 key
       VK_F14 = 0x7D                           #F14 key
       VK_F15 = 0x7E                           #F15 key
       VK_F16 = 0x7F                           #F16 key
       VK_F17 = 0x80                           #F17 key
       VK_F18 = 0x81                           #F18 key
       VK_F19 = 0x82                           #F19 key
       VK_F20 = 0x83                           #F20 key
       VK_F21 = 0x84                           #F21 key
       VK_F22 = 0x85                           #F22 key
       VK_F23 = 0x86                           #F23 key
       VK_F24 = 0x87                           #F24 key
       VK_NUMLOCK = 0x90                       #NUM LOCK key
       VK_SCROLL = 0x91                        #SCROLL LOCK key
       VK_LSHIFT = 0xA0                        #Left SHIFT key
       VK_RSHIFT = 0xA1                        #Right SHIFT key
       VK_LCONTROL = 0xA2                      #Left CONTROL key
       VK_RCONTROL = 0xA3                      #Right CONTROL key
       VK_LMENU = 0xA4                         #Left MENU key
       VK_RMENU = 0xA5                         #Right MENU key
       VK_BROWSER_BACK = 0xA6                  #Browser Back key
       VK_BROWSER_FORWARD = 0xA7               #Browser Forward key
       VK_BROWSER_REFRESH = 0xA8               #Browser Refresh key
       VK_BROWSER_STOP = 0xA9                  #Browser Stop key
       VK_BROWSER_SEARCH = 0xAA                #Browser Search key
       VK_BROWSER_FAVORITES = 0xAB             #Browser Favorites key
       VK_BROWSER_HOME = 0xAC                  #Browser Start and Home key
       VK_VOLUME_MUTE = 0xAD                   #Volume Mute key
       VK_VOLUME_DOWN = 0xAE                   #Volume Down key
       VK_VOLUME_UP = 0xAF                     #Volume Up key
       VK_MEDIA_NEXT_TRACK = 0xB0              #Next Track key
       VK_MEDIA_PREV_TRACK = 0xB1              #Previous Track key
       VK_MEDIA_STOP = 0xB2                    #Stop Media key
       VK_MEDIA_PLAY_PAUSE = 0xB3              #Play/Pause Media key
       VK_LAUNCH_MAIL = 0xB4                   #Start Mail key
       VK_LAUNCH_MEDIA_SELECT = 0xB5           #Select Media key
       VK_LAUNCH_APP1 = 0xB6                   #Start Application 1 key
       VK_LAUNCH_APP2 = 0xB7                   #Start Application 2 key
       VK_OEM_1 = 0xBA                         #Used for miscellaneous characters; it can vary by keyboard.For the US standard keyboard, the ';:' key
       VK_OEM_PLUS = 0xBB                      #For any country/region, the '+' key
       VK_OEM_COMMA = 0xBC                     #For any country/region, the ',' key
       VK_OEM_MINUS = 0xBD                     #For any country/region, the '-' key
       VK_OEM_PERIOD = 0xBE                    #For any country/region, the '.' key
       VK_OEM_2 = 0xBF                         #Used for miscellaneous characters; it can vary by keyboard.For the US standard keyboard, the '/?' key
       VK_OEM_3 = 0xC0                         #Used for miscellaneous characters; it can vary by keyboard.For the US standard keyboard, the '`~' key
       VK_OEM_4 = 0xDB                         #Used for miscellaneous characters; it can vary by keyboard.For the US standard keyboard, the '[{' key
       VK_OEM_5 = 0xDC                         #Used for miscellaneous characters; it can vary by keyboard.For the US standard keyboard, the '\|' key
       VK_OEM_6 = 0xDD                         #Used for miscellaneous characters; it can vary by keyboard.For the US standard keyboard, the ']}' key
       VK_OEM_7 = 0xDE                         #Used for miscellaneous characters; it can vary by keyboard.For the US standard keyboard, the 'single-quote/double-quote' key
       VK_OEM_8 = 0xDF                         #Used for miscellaneous characters; it can vary by keyboard.
       VK_OEM_102 = 0xE2                       #Either the angle bracket key or the backslash key on the RT 102-key keyboard
       VK_PROCESSKEY = 0xE5                    #IME PROCESS key
       VK_PACKET = 0xE7                        #Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KeyUp
       VK_ATTN = 0xF6                          #Attn key
       VK_CRSEL = 0xF7                         #CrSel key
       VK_EXSEL = 0xF8                         #ExSel key
       VK_EREOF = 0xF9                         #Erase EOF key
       VK_PLAY = 0xFA                          #Play key
       VK_ZOOM = 0xFB                          #Zoom key
       VK_NONAME = 0xFC                        #Reserved
       VK_PA1 = 0xFD                           #PA1 key
       VK_OEM_CLEAR = 0xFE                     #Clear key
   ```

2. showWindow 中 字段 cmdShow 的参考值：

   ```python
   class SW:
       """ShowWindow params from Win32."""
       Hide = 0
       ShowNormal = 1
       Normal = 1
       ShowMinimized = 2
       ShowMaximized = 3
       Maximize = 3
       ShowNoActivate = 4
       Show = 5
       Minimize = 6
       ShowMinNoActive = 7
       ShowNA = 8
       Restore = 9
       ShowDefault = 10
       ForceMinimize = 11
       Max = 11
   ```

   


