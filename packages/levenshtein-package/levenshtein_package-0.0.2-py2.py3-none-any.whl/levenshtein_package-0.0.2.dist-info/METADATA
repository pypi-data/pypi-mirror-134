Metadata-Version: 2.1
Name: levenshtein-package
Version: 0.0.2
Summary: Package for calculating Levenshtein distance and similarity
Home-page: https://www.github.com/leongraumans/levenshtein/
Author: Leon Graumans
Author-email: hey@leongraumans.nl
License: Proprietary
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Dist: numpy (>=1.20.3)
Provides-Extra: test
Requires-Dist: coverage (==5.3) ; extra == 'test'
Requires-Dist: pytest (==5.4.3) ; extra == 'test'
Requires-Dist: isort (==4.3.21) ; extra == 'test'
Requires-Dist: flake8 (==3.8.4) ; extra == 'test'
Requires-Dist: flake8-blind-except (==0.1.1) ; extra == 'test'
Requires-Dist: flake8-debugger (==3.2.1) ; extra == 'test'
Requires-Dist: flake8-imports (==0.1.1) ; extra == 'test'

Levenshtein package
===================

The Levenshtein distance is a string metric for measuring the difference
between two strings. With this package you can calculate the Levenshtein
distance and ratio between two words, or get the most similar word in a
list of words.


More info at
https://en.wikipedia.org/wiki/Levenshtein_distance

Installation
------------

.. code:: bash

   pip install levenshtein-package

Available methods
-----------------

-  ``calculate_distance``
-  ``calculate_similarity``
-  ``get_most_similar_in_list``

Examples
--------

.. code:: python

   >>> from levenshtein import calculate_distance, calculate_similarity, get_most_similar_in_list

   >>> calculate_distance("apple", "pear")
   4

   >>> calculate_similarity("apple", "pear")
   0.4444444444444444

   >>> get_most_similar_in_list("apple", ["pear", "peach", "apricot", "banana"])
   'pear'

