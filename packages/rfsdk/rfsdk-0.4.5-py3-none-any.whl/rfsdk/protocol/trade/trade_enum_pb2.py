# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: trade/trade_enum.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
    name='trade/trade_enum.proto',
    package='trade.tag',
    syntax='proto3',
    serialized_options=_b('\242\002\003TEN'),
    serialized_pb=_b(
        '\n\x16trade/trade_enum.proto\x12\ttrade.tag*\x87\x01\n\x0cLogLevelType\x12\x16\n\x12LogLevelType_DEBUG\x10\x00\x12\x15\n\x11LogLevelType_INFO\x10\x01\x12\x18\n\x14LogLevelType_WARNING\x10\x02\x12\x16\n\x12LogLevelType_ERROR\x10\x03\x12\x16\n\x12LogLevelType_NOLOG\x10\x04*f\n\x10\x43ommProtocolType\x12\x1e\n\x1a\x43ommProtocolType_UNDEFINED\x10\x00\x12\x18\n\x14\x43ommProtocolType_TCP\x10\x01\x12\x18\n\x14\x43ommProtocolType_UDP\x10\x02*\\\n\nMarketType\x12\x12\n\x0eMarketType_SHA\x10\x00\x12\x12\n\x0eMarketType_SZA\x10\x01\x12\x12\n\x0eMarketType_SHB\x10\x02\x12\x12\n\x0eMarketType_SZB\x10\x03*\xd2\x01\n\x0c\x45xchangeType\x12\x1a\n\x16\x45xchangeType_UNDEFINED\x10\x00\x12\x13\n\x0f\x45xchangeType_SH\x10\x01\x12\x13\n\x0f\x45xchangeType_SZ\x10\x02\x12\x13\n\x0f\x45xchangeType_ZJ\x10\x03\x12\x13\n\x0f\x45xchangeType_SQ\x10\x04\x12\x13\n\x0f\x45xchangeType_SN\x10\x05\x12\x13\n\x0f\x45xchangeType_DL\x10\x06\x12\x13\n\x0f\x45xchangeType_ZZ\x10\x07\x12\x13\n\x0f\x45xchangeType_HK\x10\x08*\xe9\x01\n\tPriceType\x12\x17\n\x13PriceType_UNDEFINED\x10\x00\x12\x13\n\x0fPriceType_LIMIT\x10\x01\x12\x1c\n\x18PriceType_BEST5_OR_LIMIT\x10\x02\x12\x1d\n\x19PriceType_BEST5_OR_CANCEL\x10\x03\x12\x1c\n\x18PriceType_BEST_OR_CANCEL\x10\x04\x12\x1b\n\x17PriceType_ALL_OR_CANCEL\x10\x05\x12\x1a\n\x16PriceType_FORWARD_BEST\x10\x06\x12\x1a\n\x16PriceType_REVERSE_BEST\x10\x07*\x9d\x01\n\nActionType\x12\x18\n\x14\x41\x63tionType_UNDEFINED\x10\x00\x12\x12\n\x0e\x41\x63tionType_BUY\x10\x01\x12\x13\n\x0f\x41\x63tionType_SELL\x10\x02\x12\x18\n\x14\x41\x63tionType_SUBSCRIBE\x10\x03\x12\x17\n\x13\x41\x63tionType_PURCHASE\x10\x04\x12\x19\n\x15\x41\x63tionType_REDEMPTION\x10\x05*\x8d\x03\n\x0fOrderStatusType\x12\x18\n\x14OrderStatusType_INIT\x10\x00\x12\x1e\n\x1aOrderStatusType_PROCESSING\x10\x01\x12\x19\n\x15OrderStatusType_READY\x10\x02\x12\x1b\n\x17OrderStatusType_INVALID\x10\x03\x12\x1f\n\x1bOrderStatusType_PART_TRADED\x10\x04\x12\x1e\n\x1aOrderStatusType_ALL_TRADED\x10\x05\x12\"\n\x1eOrderStatusType_PART_CANCELLED\x10\x06\x12!\n\x1dOrderStatusType_ALL_CANCELLED\x10\x07\x12&\n\"OrderStatusType_INTERNAL_CANCELLED\x10\x08\x12\x1b\n\x17OrderStatusType_Unknown\x10\x0e\x12\x1e\n\x1aOrderStatusType_NotTouched\x10\x0f\x12\x1b\n\x17OrderStatusType_Touched\x10\x10*\xb0\x03\n\x13\x43onditionStatusType\x12\x1c\n\x18\x43onditionStatusType_INIT\x10\x00\x12\x1d\n\x19\x43onditionStatusType_PAUSE\x10\x01\x12\x1f\n\x1b\x43onditionStatusType_TRIGGER\x10\x02\x12\x1e\n\x1a\x43onditionStatusType_CANCEL\x10\x03\x12\x1e\n\x1a\x43onditionStatusType_EXPIRE\x10\x04\x12\x1d\n\x19\x43onditionStatusType_ERROR\x10\x05\x12#\n\x1f\x43onditionStatusType_TRADE_ERROR\x10\x06\x12\x1b\n\x17\x43onditionStatusType_ING\x10\n\x12\x1b\n\x17\x43onditionStatusType_END\x10\x0b\x12,\n(ConditionStatusType_TrigerAndEntrustFail\x10\r\x12/\n+ConditionStatusType_ExpirdAndCancelAndWrong\x10\x0e\x12\x1e\n\x1a\x43onditionStatusType_DELETE\x10\x0f*Q\n\nResumeType\x12\x16\n\x12ResumeType_RESTART\x10\x00\x12\x15\n\x11ResumeType_RESUME\x10\x01\x12\x14\n\x10ResumeType_QUICE\x10\x02*c\n\nSymbolType\x12\x14\n\x10SymbolType_STOCK\x10\x00\x12\x13\n\x0fSymbolType_BOND\x10\x01\x12\x13\n\x0fSymbolType_FUND\x10\x02\x12\x15\n\x11SymbolType_OPTION\x10\x03*\xbe\x03\n\x0eInstrumentType\x12\x18\n\x14InstrumentType_Stock\x10\x00\x12\x19\n\x15InstrumentType_Future\x10\x01\x12\x19\n\x15InstrumentType_Option\x10\x02\x12\x1f\n\x1bInstrumentType_FutureOption\x10\x03\x12\x17\n\x13InstrumentType_Bond\x10\x04\x12\x15\n\x11InstrumentType_FX\x10\x05\x12\x17\n\x13InstrumentType_Repo\x10\x06\x12\x18\n\x14InstrumentType_Index\x10\x07\x12\x16\n\x12InstrumentType_ETF\x10\x08\x12\x1b\n\x17InstrumentType_MultiLeg\x10\t\x12\x1c\n\x18InstrumentType_Synthetic\x10\n\x12\x1a\n\x16InstrumentType_Warrant\x10\x0b\x12\x17\n\x13InstrumentType_Spot\x10\x0c\x12\x1b\n\x17InstrumentType_Standard\x10\r\x12\x17\n\x13InstrumentType_Fund\x10\x0f\x12\x1a\n\x16InstrumentType_Unknown\x10\x1e*8\n\x0bPutCallType\x12\x13\n\x0fPutCallType_Put\x10\x00\x12\x14\n\x10PutCallType_Call\x10\x01*\xee\x02\n\x0c\x42usinessType\x12\x16\n\x12\x42usinessType_STOCK\x10\x00\x12\x14\n\x10\x42usinessType_IPO\x10\x01\x12\x14\n\x10\x42usinessType_ETF\x10\x02\x12\x14\n\x10\x42usinessType_LOF\x10\x03\x12\x17\n\x13\x42usinessType_MARGIN\x10\x04\x12\x1a\n\x16\x42usinessType_ALLOTMENT\x10\x05\x12\x33\n/BusinessType_STRUCTURED_FUND_PURCHAE_REDEMPTION\x10\x06\x12,\n(BusinessType_STRUCTURED_FUND_SPLIT_MERGE\x10\x07\x12\x1b\n\x17\x42usinessType_MONEY_FUND\x10\x08\x12\x17\n\x13\x42usinessType_OPTION\x10\t\x12\x1f\n\x1b\x42usinessType_OPTION_EXECUTE\x10\n\x12\x15\n\x11\x42usinessType_REPO\x10\x0b*n\n\x0b\x41\x63\x63ountType\x12\x16\n\x12\x41\x63\x63ountType_NORMAL\x10\x00\x12\x16\n\x12\x41\x63\x63ountType_CREDIT\x10\x01\x12\x16\n\x12\x41\x63\x63ountType_DERIVE\x10\x02\x12\x17\n\x13\x41\x63\x63ountType_FUTURES\x10\x03*\x9a\x01\n\x15PositionDirectionType\x12\x1d\n\x19PositionDirectionType_NET\x10\x00\x12\x1e\n\x1aPositionDirectionType_LONG\x10\x01\x12\x1f\n\x1bPositionDirectionType_SHORT\x10\x02\x12!\n\x1dPositionDirectionType_COVERED\x10\x03*b\n\tTradeType\x12\x14\n\x10TradeType_COMMON\x10\x00\x12\x12\n\x0eTradeType_CASH\x10\x01\x12\x14\n\x10TradeType_CANCEL\x10\x02\x12\x15\n\x11TradeType_INVALID\x10\x03*\x82\x01\n\tOrderType\x12\x17\n\x13OrderType_UNDEFINED\x10\x00\x12\x14\n\x10OrderType_NORMAL\x10\x01\x12\x19\n\x15OrderType_COMBINATION\x10\x02\x12\x17\n\x13OrderType_CONDITION\x10\x03\x12\x12\n\x0eOrderType_ALGO\x10\x04*l\n\x0c\x43urrencyType\x12\x1a\n\x16\x43urrencyType_UNDEFINED\x10\x00\x12\x14\n\x10\x43urrencyType_CNY\x10\x01\x12\x14\n\x10\x43urrencyType_USD\x10\x02\x12\x14\n\x10\x43urrencyType_HKD\x10\x03*0\n\x07\x42izType\x12\x12\n\x0e\x42izType_Future\x10\x00\x12\x11\n\rBizType_Stock\x10\x01*s\n\rHedgeFlagType\x12\x19\n\x15HedgeFlag_Speculation\x10\x00\x12\x17\n\x13HedgeFlag_Arbitrage\x10\x02\x12\x13\n\x0fHedgeFlag_Hedge\x10\x03\x12\x19\n\x15HedgeFlag_MarketMaker\x10\x05*\xa5\x05\n\x0eOrderPriceType\x12\x1b\n\x17OrderPriceType_AnyPrice\x10\x00\x12\x1d\n\x19OrderPriceType_LimitPrice\x10\x01\x12\x1c\n\x18OrderPriceType_BestPrice\x10\x03\x12\x1c\n\x18OrderPriceType_LastPrice\x10\x04\x12(\n$OrderPriceType_LastPricePlusOneTicks\x10\x05\x12(\n$OrderPriceType_LastPricePlusTwoTicks\x10\x06\x12*\n&OrderPriceType_LastPricePlusThreeTicks\x10\x07\x12\x1c\n\x18OrderPriceType_AskPrice1\x10\x08\x12(\n$OrderPriceType_AskPrice1PlusOneTicks\x10\t\x12(\n$OrderPriceType_AskPrice1PlusTwoTicks\x10\n\x12*\n&OrderPriceType_AskPrice1PlusThreeTicks\x10\x0b\x12\x1c\n\x18OrderPriceType_BidPrice1\x10\x0c\x12(\n$OrderPriceType_BidPrice1PlusOneTicks\x10\r\x12(\n$OrderPriceType_BidPrice1PlusTwoTicks\x10\x0e\x12*\n&OrderPriceType_BidPrice1PlusThreeTicks\x10\x0f\x12!\n\x1dOrderPriceType_FiveLevelPrice\x10\x10\x12\x1e\n\x1aOrderPriceType_MarketPrice\x10\x11\x12\x1c\n\x18OrderPriceType_OverPrice\x10\x12*\xb5\x01\n\x11TimeConditionType\x12\x19\n\x15TimeConditionType_IOC\x10\x00\x12\x19\n\x15TimeConditionType_GFS\x10\x02\x12\x19\n\x15TimeConditionType_GFD\x10\x03\x12\x19\n\x15TimeConditionType_GTD\x10\x04\x12\x19\n\x15TimeConditionType_GTC\x10\x05\x12\x19\n\x15TimeConditionType_GFA\x10\x06*i\n\x13VolumeConditionType\x12\x1a\n\x16VolumeConditionType_AV\x10\x00\x12\x1a\n\x16VolumeConditionType_MV\x10\x01\x12\x1a\n\x16VolumeConditionType_CV\x10\x02*\xf3\x06\n\x17\x43ontingentConditionType\x12\'\n#ContingentConditionType_Immediately\x10\x00\x12!\n\x1d\x43ontingentConditionType_Touch\x10\x02\x12\'\n#ContingentConditionType_TouchProfit\x10\x03\x12\'\n#ContingentConditionType_ParkedOrder\x10\x04\x12\x39\n5ContingentConditionType_LastPriceGreaterThanStopPrice\x10\x05\x12:\n6ContingentConditionType_LastPriceGreaterEqualStopPrice\x10\x06\x12\x38\n4ContingentConditionType_LastPriceLesserThanStopPrice\x10\x07\x12\x39\n5ContingentConditionType_LastPriceLesserEqualStopPrice\x10\x08\x12\x38\n4ContingentConditionType_AskPriceGreaterThanStopPrice\x10\t\x12\x39\n5ContingentConditionType_AskPriceGreaterEqualStopPrice\x10\n\x12\x37\n3ContingentConditionType_AskPriceLesserThanStopPrice\x10\x0b\x12\x38\n4ContingentConditionType_AskPriceLesserEqualStopPrice\x10\x0c\x12\x38\n4ContingentConditionType_BidPriceGreaterThanStopPrice\x10\r\x12\x39\n5ContingentConditionType_BidPriceGreaterEqualStopPrice\x10\x0e\x12\x37\n3ContingentConditionType_BidPriceLesserThanStopPrice\x10\x0f\x12\x38\n4ContingentConditionType_BidPriceLesserEqualStopPrice\x10\x10*\xd8\x02\n\x14\x46orceCloseReasonType\x12&\n\"ForceCloseReasonType_NotForceClose\x10\x00\x12$\n ForceCloseReasonType_LackDeposit\x10\x01\x12\x30\n,ForceCloseReasonType_ClientOverPositionLimit\x10\x02\x12\x30\n,ForceCloseReasonType_MemberOverPositionLimit\x10\x03\x12$\n ForceCloseReasonType_NotMultiple\x10\x04\x12\"\n\x1e\x46orceCloseReasonType_Violation\x10\x05\x12\x1e\n\x1a\x46orceCloseReasonType_Other\x10\x06\x12$\n ForceCloseReasonType_PersonDeliv\x10\x07*g\n\x11PosiDirectionType\x12\x19\n\x15PosiDirectionType_Net\x10\x00\x12\x1a\n\x16PosiDirectionType_Long\x10\x02\x12\x1b\n\x17PosiDirectionType_Short\x10\x03*\xb5\x01\n\rTradeTypeType\x12\x14\n\x10TradeType_Common\x10\x00\x12\x1e\n\x1aTradeType_OptionsExecution\x10\x01\x12\x12\n\x0eTradeTypeT_OTC\x10\x02\x12\x18\n\x14TradeType_EFPDerived\x10\x03\x12 \n\x1cTradeType_CombinationDerived\x10\x04\x12\x1e\n\x1aTradeType_SplitCombination\x10\n*\xe5\x01\n\x0eOffsetFlagType\x12\x17\n\x13OffsetFlagType_Open\x10\x00\x12\x18\n\x14OffsetFlagType_Close\x10\x01\x12\x1d\n\x19OffsetFlagType_ForceClose\x10\x02\x12\x1d\n\x19OffsetFlagType_CloseToday\x10\x03\x12!\n\x1dOffsetFlagType_CloseYesterday\x10\x04\x12\x1b\n\x17OffsetFlagType_ForceOff\x10\x05\x12\"\n\x1eOffsetFlagType_LocalForceClose\x10\x06*c\n\x0fPriceSourceType\x12\x1d\n\x19PriceSourceType_LastPrice\x10\x00\x12\x17\n\x13PriceSourceType_Buy\x10\x01\x12\x18\n\x14PriceSourceType_Sell\x10\x02*N\n\x10PositionDateType\x12\x1a\n\x16PositionDateType_Today\x10\x00\x12\x1e\n\x1aPositionDateType_Yesterday\x10\x01*\xa8\x02\n\x14InstrumentStatusType\x12&\n\"InstrumentStatusType_BeforeTrading\x10\x00\x12\x1f\n\x1bInstrumentStatusType_Closed\x10\x01\x12\"\n\x1eInstrumentStatusType_NoTrading\x10\x02\x12(\n$InstrumentStatusType_AuctionOrdering\x10\x03\x12\'\n#InstrumentStatusType_AuctionBalance\x10\x04\x12%\n!InstrumentStatusType_AuctionMatch\x10\x05\x12)\n%InstrumentStatusType_ContinousTrading\x10\x06*N\n\x11OpenOrDestroyType\x12\x1d\n\x19OpenOrDestroyType_Destroy\x10\x00\x12\x1a\n\x16OpenOrDestroyType_Open\x10\x01*\xad\x05\n\x0eIdCardTypeType\x12\x16\n\x12IdCardTypeType_EID\x10\x00\x12\x19\n\x15IdCardTypeType_IDCard\x10\x01\x12 \n\x1cIdCardTypeType_OfficerIDCard\x10\x02\x12\x1f\n\x1bIdCardTypeType_PoliceIDCard\x10\x03\x12 \n\x1cIdCardTypeType_SoldierIDCard\x10\x04\x12$\n IdCardTypeType_HouseholdRegister\x10\x05\x12\x1b\n\x17IdCardTypeType_Passport\x10\x06\x12)\n%IdCardTypeType_TaiwanCompatriotIDCard\x10\x07\x12!\n\x1dIdCardTypeType_HomeComingCard\x10\x08\x12\x1c\n\x18IdCardTypeType_LicenseNo\x10\t\x12\x18\n\x14IdCardTypeType_TaxNo\x10\x41\x12)\n%IdCardTypeType_HMMainlandTravelPermit\x10\x42\x12)\n%IdCardTypeType_TwMainlandTravelPermit\x10\x43\x12!\n\x1dIdCardTypeType_DrivingLicense\x10\x44\x12\x1b\n\x17IdCardTypeType_SocialID\x10\x46\x12\x1a\n\x16IdCardTypeType_LocalID\x10G\x12\'\n#IdCardTypeType_BusinessRegistration\x10H\x12\x1d\n\x19IdCardTypeType_HKMCIDCard\x10I\x12\"\n\x1eIdCardTypeType_AccountsPermits\x10J\x12\x1c\n\x18IdCardTypeType_OtherCard\x10x*E\n\x0c\x43ustTypeType\x12\x17\n\x13\x43ustTypeType_Person\x10\x00\x12\x1c\n\x18\x43ustTypeType_Institution\x10\x01*\x8e\x01\n\x0f\x42\x61nkAccTypeType\x12\x1d\n\x19\x42\x61nkAccTypeType_UNDEFINED\x10\x00\x12\x1c\n\x18\x42\x61nkAccTypeType_BankBook\x10\x01\x12\x1e\n\x1a\x42\x61nkAccTypeType_SavingCard\x10\x02\x12\x1e\n\x1a\x42\x61nkAccTypeType_CreditCard\x10\x03*<\n\nStatusType\x12\x15\n\x11StatusType_Normal\x10\x00\x12\x17\n\x13StatusType_Repealed\x10\x01*`\n\x0bPwdFlagType\x12\x17\n\x13PwdFlagType_NoCheck\x10\x00\x12\x1a\n\x16PwdFlagType_BlankCheck\x10\x01\x12\x1c\n\x18PwdFlagType_EncryptCheck\x10\x02*\x90\x01\n\x0eTransDirection\x12\x1c\n\x18TransDirection_UNDEFINED\x10\x00\x12\x1f\n\x1bTransDirection_BankToFuture\x10\x01\x12\x1f\n\x1bTransDirection_FutureToBank\x10\x02\x12\x1e\n\x1aTransDirection_BankBalance\x10\x03*\x94\x01\n\nSourceType\x12\x12\n\x0eSourceType_SDK\x10\x00\x12\x15\n\x11SourceType_Trader\x10\x01\x12\x18\n\x14SourceType_Condition\x10\x02\x12\x1a\n\x16SourceType_HttpGateway\x10\x03\x12\x12\n\x0eSourceType_APP\x10\x04\x12\x11\n\rSourceType_PC\x10\x05*I\n\nClientType\x12\x11\n\rClientType_PC\x10\x00\x12\x12\n\x0e\x43lientType_APP\x10\x01\x12\x14\n\x10\x43lientType_INNER\x10\x02*\xb2\x01\n\x10\x43lientIDTypeType\x12\x1e\n\x1a\x43lientIDTypeType_UNDEFINED\x10\x00\x12 \n\x1c\x43lientIDTypeType_Speculation\x10\x01\x12\x1e\n\x1a\x43lientIDTypeType_Arbitrage\x10\x02\x12\x1a\n\x16\x43lientIDTypeType_Hedge\x10\x03\x12 \n\x1c\x43lientIDTypeType_MarketMaker\x10\x05*h\n\x0f\x45ntrusrKindType\x12\x1d\n\x19\x45ntrusrKindType_UNDEFINED\x10\x00\x12\x19\n\x15\x45ntrusrKindType_Today\x10\x01\x12\x1b\n\x17\x45ntrusrKindType_Tonight\x10\x02*O\n\x12\x45xchangeStatusType\x12\x1b\n\x17\x45xchangeStatusType_Stop\x10\x00\x12\x1c\n\x18\x45xchangeStatusType_Start\x10\x01*\xda\x01\n\x0fSpecialFlagType\x12\x1e\n\x1aSpecialFlagType_NotAppoint\x10\x00\x12\x1b\n\x17SpecialFlagType_Appoint\x10\x01\x12\x1e\n\x1aSpecialFlagType_NewAppoint\x10\x02\x12\x1e\n\x1aSpecialFlagType_Appointing\x10\x03\x12!\n\x1dSpecialFlagType_CancelAppoint\x10\x04\x12\'\n#SpecialFlagType_NewAppointCanceling\x10\x05*_\n\x0fTradeStatusType\x12\x18\n\x14TradeStatusType_Open\x10\x00\x12\x19\n\x15TradeStatusType_Close\x10\x01\x12\x17\n\x13TradeStatusType_All\x10\x02*P\n\tQueryType\x12\x17\n\x13QueryType_UNDEFINED\x10\x00\x12\x14\n\x10QueryType_Detail\x10\x01\x12\x14\n\x10QueryType_Gather\x10\x02\x42\x06\xa2\x02\x03TENb\x06proto3')
)

_LOGLEVELTYPE = _descriptor.EnumDescriptor(
    name='LogLevelType',
    full_name='trade.tag.LogLevelType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='LogLevelType_DEBUG', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='LogLevelType_INFO', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='LogLevelType_WARNING', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='LogLevelType_ERROR', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='LogLevelType_NOLOG', index=4, number=4,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=38,
    serialized_end=173,
)
_sym_db.RegisterEnumDescriptor(_LOGLEVELTYPE)

LogLevelType = enum_type_wrapper.EnumTypeWrapper(_LOGLEVELTYPE)
_COMMPROTOCOLTYPE = _descriptor.EnumDescriptor(
    name='CommProtocolType',
    full_name='trade.tag.CommProtocolType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='CommProtocolType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CommProtocolType_TCP', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CommProtocolType_UDP', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=175,
    serialized_end=277,
)
_sym_db.RegisterEnumDescriptor(_COMMPROTOCOLTYPE)

CommProtocolType = enum_type_wrapper.EnumTypeWrapper(_COMMPROTOCOLTYPE)
_MARKETTYPE = _descriptor.EnumDescriptor(
    name='MarketType',
    full_name='trade.tag.MarketType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='MarketType_SHA', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='MarketType_SZA', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='MarketType_SHB', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='MarketType_SZB', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=279,
    serialized_end=371,
)
_sym_db.RegisterEnumDescriptor(_MARKETTYPE)

MarketType = enum_type_wrapper.EnumTypeWrapper(_MARKETTYPE)
_EXCHANGETYPE = _descriptor.EnumDescriptor(
    name='ExchangeType',
    full_name='trade.tag.ExchangeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_SH', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_SZ', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_ZJ', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_SQ', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_SN', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_DL', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_ZZ', index=7, number=7,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeType_HK', index=8, number=8,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=374,
    serialized_end=584,
)
_sym_db.RegisterEnumDescriptor(_EXCHANGETYPE)

ExchangeType = enum_type_wrapper.EnumTypeWrapper(_EXCHANGETYPE)
_PRICETYPE = _descriptor.EnumDescriptor(
    name='PriceType',
    full_name='trade.tag.PriceType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PriceType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceType_LIMIT', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceType_BEST5_OR_LIMIT', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceType_BEST5_OR_CANCEL', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceType_BEST_OR_CANCEL', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceType_ALL_OR_CANCEL', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceType_FORWARD_BEST', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceType_REVERSE_BEST', index=7, number=7,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=587,
    serialized_end=820,
)
_sym_db.RegisterEnumDescriptor(_PRICETYPE)

PriceType = enum_type_wrapper.EnumTypeWrapper(_PRICETYPE)
_ACTIONTYPE = _descriptor.EnumDescriptor(
    name='ActionType',
    full_name='trade.tag.ActionType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ActionType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ActionType_BUY', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ActionType_SELL', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ActionType_SUBSCRIBE', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ActionType_PURCHASE', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ActionType_REDEMPTION', index=5, number=5,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=823,
    serialized_end=980,
)
_sym_db.RegisterEnumDescriptor(_ACTIONTYPE)

ActionType = enum_type_wrapper.EnumTypeWrapper(_ACTIONTYPE)
_ORDERSTATUSTYPE = _descriptor.EnumDescriptor(
    name='OrderStatusType',
    full_name='trade.tag.OrderStatusType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_INIT', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_PROCESSING', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_READY', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_INVALID', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_PART_TRADED', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_ALL_TRADED', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_PART_CANCELLED', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_ALL_CANCELLED', index=7, number=7,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_INTERNAL_CANCELLED', index=8, number=8,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_Unknown', index=9, number=14,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_NotTouched', index=10, number=15,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderStatusType_Touched', index=11, number=16,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=983,
    serialized_end=1380,
)
_sym_db.RegisterEnumDescriptor(_ORDERSTATUSTYPE)

OrderStatusType = enum_type_wrapper.EnumTypeWrapper(_ORDERSTATUSTYPE)
_CONDITIONSTATUSTYPE = _descriptor.EnumDescriptor(
    name='ConditionStatusType',
    full_name='trade.tag.ConditionStatusType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_INIT', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_PAUSE', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_TRIGGER', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_CANCEL', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_EXPIRE', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_ERROR', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_TRADE_ERROR', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_ING', index=7, number=10,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_END', index=8, number=11,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_TrigerAndEntrustFail', index=9, number=13,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_ExpirdAndCancelAndWrong', index=10, number=14,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ConditionStatusType_DELETE', index=11, number=15,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1383,
    serialized_end=1815,
)
_sym_db.RegisterEnumDescriptor(_CONDITIONSTATUSTYPE)

ConditionStatusType = enum_type_wrapper.EnumTypeWrapper(_CONDITIONSTATUSTYPE)
_RESUMETYPE = _descriptor.EnumDescriptor(
    name='ResumeType',
    full_name='trade.tag.ResumeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ResumeType_RESTART', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ResumeType_RESUME', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ResumeType_QUICE', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1817,
    serialized_end=1898,
)
_sym_db.RegisterEnumDescriptor(_RESUMETYPE)

ResumeType = enum_type_wrapper.EnumTypeWrapper(_RESUMETYPE)
_SYMBOLTYPE = _descriptor.EnumDescriptor(
    name='SymbolType',
    full_name='trade.tag.SymbolType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='SymbolType_STOCK', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SymbolType_BOND', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SymbolType_FUND', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SymbolType_OPTION', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1900,
    serialized_end=1999,
)
_sym_db.RegisterEnumDescriptor(_SYMBOLTYPE)

SymbolType = enum_type_wrapper.EnumTypeWrapper(_SYMBOLTYPE)
_INSTRUMENTTYPE = _descriptor.EnumDescriptor(
    name='InstrumentType',
    full_name='trade.tag.InstrumentType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Stock', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Future', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Option', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_FutureOption', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Bond', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_FX', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Repo', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Index', index=7, number=7,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_ETF', index=8, number=8,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_MultiLeg', index=9, number=9,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Synthetic', index=10, number=10,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Warrant', index=11, number=11,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Spot', index=12, number=12,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Standard', index=13, number=13,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Fund', index=14, number=15,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentType_Unknown', index=15, number=30,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2002,
    serialized_end=2448,
)
_sym_db.RegisterEnumDescriptor(_INSTRUMENTTYPE)

InstrumentType = enum_type_wrapper.EnumTypeWrapper(_INSTRUMENTTYPE)
_PUTCALLTYPE = _descriptor.EnumDescriptor(
    name='PutCallType',
    full_name='trade.tag.PutCallType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PutCallType_Put', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PutCallType_Call', index=1, number=1,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2450,
    serialized_end=2506,
)
_sym_db.RegisterEnumDescriptor(_PUTCALLTYPE)

PutCallType = enum_type_wrapper.EnumTypeWrapper(_PUTCALLTYPE)
_BUSINESSTYPE = _descriptor.EnumDescriptor(
    name='BusinessType',
    full_name='trade.tag.BusinessType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='BusinessType_STOCK', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_IPO', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_ETF', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_LOF', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_MARGIN', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_ALLOTMENT', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_STRUCTURED_FUND_PURCHAE_REDEMPTION', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_STRUCTURED_FUND_SPLIT_MERGE', index=7, number=7,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_MONEY_FUND', index=8, number=8,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_OPTION', index=9, number=9,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_OPTION_EXECUTE', index=10, number=10,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BusinessType_REPO', index=11, number=11,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2509,
    serialized_end=2875,
)
_sym_db.RegisterEnumDescriptor(_BUSINESSTYPE)

BusinessType = enum_type_wrapper.EnumTypeWrapper(_BUSINESSTYPE)
_ACCOUNTTYPE = _descriptor.EnumDescriptor(
    name='AccountType',
    full_name='trade.tag.AccountType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='AccountType_NORMAL', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='AccountType_CREDIT', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='AccountType_DERIVE', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='AccountType_FUTURES', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2877,
    serialized_end=2987,
)
_sym_db.RegisterEnumDescriptor(_ACCOUNTTYPE)

AccountType = enum_type_wrapper.EnumTypeWrapper(_ACCOUNTTYPE)
_POSITIONDIRECTIONTYPE = _descriptor.EnumDescriptor(
    name='PositionDirectionType',
    full_name='trade.tag.PositionDirectionType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PositionDirectionType_NET', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PositionDirectionType_LONG', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PositionDirectionType_SHORT', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PositionDirectionType_COVERED', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2990,
    serialized_end=3144,
)
_sym_db.RegisterEnumDescriptor(_POSITIONDIRECTIONTYPE)

PositionDirectionType = enum_type_wrapper.EnumTypeWrapper(_POSITIONDIRECTIONTYPE)
_TRADETYPE = _descriptor.EnumDescriptor(
    name='TradeType',
    full_name='trade.tag.TradeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='TradeType_COMMON', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeType_CASH', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeType_CANCEL', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeType_INVALID', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3146,
    serialized_end=3244,
)
_sym_db.RegisterEnumDescriptor(_TRADETYPE)

TradeType = enum_type_wrapper.EnumTypeWrapper(_TRADETYPE)
_ORDERTYPE = _descriptor.EnumDescriptor(
    name='OrderType',
    full_name='trade.tag.OrderType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='OrderType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderType_NORMAL', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderType_COMBINATION', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderType_CONDITION', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderType_ALGO', index=4, number=4,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3247,
    serialized_end=3377,
)
_sym_db.RegisterEnumDescriptor(_ORDERTYPE)

OrderType = enum_type_wrapper.EnumTypeWrapper(_ORDERTYPE)
_CURRENCYTYPE = _descriptor.EnumDescriptor(
    name='CurrencyType',
    full_name='trade.tag.CurrencyType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='CurrencyType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CurrencyType_CNY', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CurrencyType_USD', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CurrencyType_HKD', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3379,
    serialized_end=3487,
)
_sym_db.RegisterEnumDescriptor(_CURRENCYTYPE)

CurrencyType = enum_type_wrapper.EnumTypeWrapper(_CURRENCYTYPE)
_BIZTYPE = _descriptor.EnumDescriptor(
    name='BizType',
    full_name='trade.tag.BizType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='BizType_Future', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BizType_Stock', index=1, number=1,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3489,
    serialized_end=3537,
)
_sym_db.RegisterEnumDescriptor(_BIZTYPE)

BizType = enum_type_wrapper.EnumTypeWrapper(_BIZTYPE)
_HEDGEFLAGTYPE = _descriptor.EnumDescriptor(
    name='HedgeFlagType',
    full_name='trade.tag.HedgeFlagType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='HedgeFlag_Speculation', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='HedgeFlag_Arbitrage', index=1, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='HedgeFlag_Hedge', index=2, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='HedgeFlag_MarketMaker', index=3, number=5,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3539,
    serialized_end=3654,
)
_sym_db.RegisterEnumDescriptor(_HEDGEFLAGTYPE)

HedgeFlagType = enum_type_wrapper.EnumTypeWrapper(_HEDGEFLAGTYPE)
_ORDERPRICETYPE = _descriptor.EnumDescriptor(
    name='OrderPriceType',
    full_name='trade.tag.OrderPriceType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_AnyPrice', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_LimitPrice', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_BestPrice', index=2, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_LastPrice', index=3, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_LastPricePlusOneTicks', index=4, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_LastPricePlusTwoTicks', index=5, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_LastPricePlusThreeTicks', index=6, number=7,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_AskPrice1', index=7, number=8,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_AskPrice1PlusOneTicks', index=8, number=9,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_AskPrice1PlusTwoTicks', index=9, number=10,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_AskPrice1PlusThreeTicks', index=10, number=11,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_BidPrice1', index=11, number=12,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_BidPrice1PlusOneTicks', index=12, number=13,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_BidPrice1PlusTwoTicks', index=13, number=14,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_BidPrice1PlusThreeTicks', index=14, number=15,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_FiveLevelPrice', index=15, number=16,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_MarketPrice', index=16, number=17,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OrderPriceType_OverPrice', index=17, number=18,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3657,
    serialized_end=4334,
)
_sym_db.RegisterEnumDescriptor(_ORDERPRICETYPE)

OrderPriceType = enum_type_wrapper.EnumTypeWrapper(_ORDERPRICETYPE)
_TIMECONDITIONTYPE = _descriptor.EnumDescriptor(
    name='TimeConditionType',
    full_name='trade.tag.TimeConditionType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='TimeConditionType_IOC', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TimeConditionType_GFS', index=1, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TimeConditionType_GFD', index=2, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TimeConditionType_GTD', index=3, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TimeConditionType_GTC', index=4, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TimeConditionType_GFA', index=5, number=6,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=4337,
    serialized_end=4518,
)
_sym_db.RegisterEnumDescriptor(_TIMECONDITIONTYPE)

TimeConditionType = enum_type_wrapper.EnumTypeWrapper(_TIMECONDITIONTYPE)
_VOLUMECONDITIONTYPE = _descriptor.EnumDescriptor(
    name='VolumeConditionType',
    full_name='trade.tag.VolumeConditionType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='VolumeConditionType_AV', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='VolumeConditionType_MV', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='VolumeConditionType_CV', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=4520,
    serialized_end=4625,
)
_sym_db.RegisterEnumDescriptor(_VOLUMECONDITIONTYPE)

VolumeConditionType = enum_type_wrapper.EnumTypeWrapper(_VOLUMECONDITIONTYPE)
_CONTINGENTCONDITIONTYPE = _descriptor.EnumDescriptor(
    name='ContingentConditionType',
    full_name='trade.tag.ContingentConditionType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_Immediately', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_Touch', index=1, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_TouchProfit', index=2, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_ParkedOrder', index=3, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_LastPriceGreaterThanStopPrice', index=4, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_LastPriceGreaterEqualStopPrice', index=5, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_LastPriceLesserThanStopPrice', index=6, number=7,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_LastPriceLesserEqualStopPrice', index=7, number=8,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_AskPriceGreaterThanStopPrice', index=8, number=9,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_AskPriceGreaterEqualStopPrice', index=9, number=10,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_AskPriceLesserThanStopPrice', index=10, number=11,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_AskPriceLesserEqualStopPrice', index=11, number=12,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_BidPriceGreaterThanStopPrice', index=12, number=13,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_BidPriceGreaterEqualStopPrice', index=13, number=14,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_BidPriceLesserThanStopPrice', index=14, number=15,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ContingentConditionType_BidPriceLesserEqualStopPrice', index=15, number=16,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=4628,
    serialized_end=5511,
)
_sym_db.RegisterEnumDescriptor(_CONTINGENTCONDITIONTYPE)

ContingentConditionType = enum_type_wrapper.EnumTypeWrapper(_CONTINGENTCONDITIONTYPE)
_FORCECLOSEREASONTYPE = _descriptor.EnumDescriptor(
    name='ForceCloseReasonType',
    full_name='trade.tag.ForceCloseReasonType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_NotForceClose', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_LackDeposit', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_ClientOverPositionLimit', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_MemberOverPositionLimit', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_NotMultiple', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_Violation', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_Other', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ForceCloseReasonType_PersonDeliv', index=7, number=7,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=5514,
    serialized_end=5858,
)
_sym_db.RegisterEnumDescriptor(_FORCECLOSEREASONTYPE)

ForceCloseReasonType = enum_type_wrapper.EnumTypeWrapper(_FORCECLOSEREASONTYPE)
_POSIDIRECTIONTYPE = _descriptor.EnumDescriptor(
    name='PosiDirectionType',
    full_name='trade.tag.PosiDirectionType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PosiDirectionType_Net', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PosiDirectionType_Long', index=1, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PosiDirectionType_Short', index=2, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=5860,
    serialized_end=5963,
)
_sym_db.RegisterEnumDescriptor(_POSIDIRECTIONTYPE)

PosiDirectionType = enum_type_wrapper.EnumTypeWrapper(_POSIDIRECTIONTYPE)
_TRADETYPETYPE = _descriptor.EnumDescriptor(
    name='TradeTypeType',
    full_name='trade.tag.TradeTypeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='TradeType_Common', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeType_OptionsExecution', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeTypeT_OTC', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeType_EFPDerived', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeType_CombinationDerived', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeType_SplitCombination', index=5, number=10,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=5966,
    serialized_end=6147,
)
_sym_db.RegisterEnumDescriptor(_TRADETYPETYPE)

TradeTypeType = enum_type_wrapper.EnumTypeWrapper(_TRADETYPETYPE)
_OFFSETFLAGTYPE = _descriptor.EnumDescriptor(
    name='OffsetFlagType',
    full_name='trade.tag.OffsetFlagType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='OffsetFlagType_Open', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OffsetFlagType_Close', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OffsetFlagType_ForceClose', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OffsetFlagType_CloseToday', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OffsetFlagType_CloseYesterday', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OffsetFlagType_ForceOff', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OffsetFlagType_LocalForceClose', index=6, number=6,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=6150,
    serialized_end=6379,
)
_sym_db.RegisterEnumDescriptor(_OFFSETFLAGTYPE)

OffsetFlagType = enum_type_wrapper.EnumTypeWrapper(_OFFSETFLAGTYPE)
_PRICESOURCETYPE = _descriptor.EnumDescriptor(
    name='PriceSourceType',
    full_name='trade.tag.PriceSourceType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PriceSourceType_LastPrice', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceSourceType_Buy', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PriceSourceType_Sell', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=6381,
    serialized_end=6480,
)
_sym_db.RegisterEnumDescriptor(_PRICESOURCETYPE)

PriceSourceType = enum_type_wrapper.EnumTypeWrapper(_PRICESOURCETYPE)
_POSITIONDATETYPE = _descriptor.EnumDescriptor(
    name='PositionDateType',
    full_name='trade.tag.PositionDateType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PositionDateType_Today', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PositionDateType_Yesterday', index=1, number=1,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=6482,
    serialized_end=6560,
)
_sym_db.RegisterEnumDescriptor(_POSITIONDATETYPE)

PositionDateType = enum_type_wrapper.EnumTypeWrapper(_POSITIONDATETYPE)
_INSTRUMENTSTATUSTYPE = _descriptor.EnumDescriptor(
    name='InstrumentStatusType',
    full_name='trade.tag.InstrumentStatusType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='InstrumentStatusType_BeforeTrading', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentStatusType_Closed', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentStatusType_NoTrading', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentStatusType_AuctionOrdering', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentStatusType_AuctionBalance', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentStatusType_AuctionMatch', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='InstrumentStatusType_ContinousTrading', index=6, number=6,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=6563,
    serialized_end=6859,
)
_sym_db.RegisterEnumDescriptor(_INSTRUMENTSTATUSTYPE)

InstrumentStatusType = enum_type_wrapper.EnumTypeWrapper(_INSTRUMENTSTATUSTYPE)
_OPENORDESTROYTYPE = _descriptor.EnumDescriptor(
    name='OpenOrDestroyType',
    full_name='trade.tag.OpenOrDestroyType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='OpenOrDestroyType_Destroy', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='OpenOrDestroyType_Open', index=1, number=1,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=6861,
    serialized_end=6939,
)
_sym_db.RegisterEnumDescriptor(_OPENORDESTROYTYPE)

OpenOrDestroyType = enum_type_wrapper.EnumTypeWrapper(_OPENORDESTROYTYPE)
_IDCARDTYPETYPE = _descriptor.EnumDescriptor(
    name='IdCardTypeType',
    full_name='trade.tag.IdCardTypeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_EID', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_IDCard', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_OfficerIDCard', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_PoliceIDCard', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_SoldierIDCard', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_HouseholdRegister', index=5, number=5,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_Passport', index=6, number=6,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_TaiwanCompatriotIDCard', index=7, number=7,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_HomeComingCard', index=8, number=8,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_LicenseNo', index=9, number=9,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_TaxNo', index=10, number=65,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_HMMainlandTravelPermit', index=11, number=66,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_TwMainlandTravelPermit', index=12, number=67,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_DrivingLicense', index=13, number=68,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_SocialID', index=14, number=70,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_LocalID', index=15, number=71,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_BusinessRegistration', index=16, number=72,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_HKMCIDCard', index=17, number=73,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_AccountsPermits', index=18, number=74,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='IdCardTypeType_OtherCard', index=19, number=120,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=6942,
    serialized_end=7627,
)
_sym_db.RegisterEnumDescriptor(_IDCARDTYPETYPE)

IdCardTypeType = enum_type_wrapper.EnumTypeWrapper(_IDCARDTYPETYPE)
_CUSTTYPETYPE = _descriptor.EnumDescriptor(
    name='CustTypeType',
    full_name='trade.tag.CustTypeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='CustTypeType_Person', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CustTypeType_Institution', index=1, number=1,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=7629,
    serialized_end=7698,
)
_sym_db.RegisterEnumDescriptor(_CUSTTYPETYPE)

CustTypeType = enum_type_wrapper.EnumTypeWrapper(_CUSTTYPETYPE)
_BANKACCTYPETYPE = _descriptor.EnumDescriptor(
    name='BankAccTypeType',
    full_name='trade.tag.BankAccTypeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='BankAccTypeType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BankAccTypeType_BankBook', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BankAccTypeType_SavingCard', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='BankAccTypeType_CreditCard', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=7701,
    serialized_end=7843,
)
_sym_db.RegisterEnumDescriptor(_BANKACCTYPETYPE)

BankAccTypeType = enum_type_wrapper.EnumTypeWrapper(_BANKACCTYPETYPE)
_STATUSTYPE = _descriptor.EnumDescriptor(
    name='StatusType',
    full_name='trade.tag.StatusType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='StatusType_Normal', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='StatusType_Repealed', index=1, number=1,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=7845,
    serialized_end=7905,
)
_sym_db.RegisterEnumDescriptor(_STATUSTYPE)

StatusType = enum_type_wrapper.EnumTypeWrapper(_STATUSTYPE)
_PWDFLAGTYPE = _descriptor.EnumDescriptor(
    name='PwdFlagType',
    full_name='trade.tag.PwdFlagType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='PwdFlagType_NoCheck', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PwdFlagType_BlankCheck', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='PwdFlagType_EncryptCheck', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=7907,
    serialized_end=8003,
)
_sym_db.RegisterEnumDescriptor(_PWDFLAGTYPE)

PwdFlagType = enum_type_wrapper.EnumTypeWrapper(_PWDFLAGTYPE)
_TRANSDIRECTION = _descriptor.EnumDescriptor(
    name='TransDirection',
    full_name='trade.tag.TransDirection',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='TransDirection_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TransDirection_BankToFuture', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TransDirection_FutureToBank', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TransDirection_BankBalance', index=3, number=3,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8006,
    serialized_end=8150,
)
_sym_db.RegisterEnumDescriptor(_TRANSDIRECTION)

TransDirection = enum_type_wrapper.EnumTypeWrapper(_TRANSDIRECTION)
_SOURCETYPE = _descriptor.EnumDescriptor(
    name='SourceType',
    full_name='trade.tag.SourceType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='SourceType_SDK', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SourceType_Trader', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SourceType_Condition', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SourceType_HttpGateway', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SourceType_APP', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SourceType_PC', index=5, number=5,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8153,
    serialized_end=8301,
)
_sym_db.RegisterEnumDescriptor(_SOURCETYPE)

SourceType = enum_type_wrapper.EnumTypeWrapper(_SOURCETYPE)
_CLIENTTYPE = _descriptor.EnumDescriptor(
    name='ClientType',
    full_name='trade.tag.ClientType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ClientType_PC', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ClientType_APP', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ClientType_INNER', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8303,
    serialized_end=8376,
)
_sym_db.RegisterEnumDescriptor(_CLIENTTYPE)

ClientType = enum_type_wrapper.EnumTypeWrapper(_CLIENTTYPE)
_CLIENTIDTYPETYPE = _descriptor.EnumDescriptor(
    name='ClientIDTypeType',
    full_name='trade.tag.ClientIDTypeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ClientIDTypeType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ClientIDTypeType_Speculation', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ClientIDTypeType_Arbitrage', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ClientIDTypeType_Hedge', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ClientIDTypeType_MarketMaker', index=4, number=5,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8379,
    serialized_end=8557,
)
_sym_db.RegisterEnumDescriptor(_CLIENTIDTYPETYPE)

ClientIDTypeType = enum_type_wrapper.EnumTypeWrapper(_CLIENTIDTYPETYPE)
_ENTRUSRKINDTYPE = _descriptor.EnumDescriptor(
    name='EntrusrKindType',
    full_name='trade.tag.EntrusrKindType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='EntrusrKindType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='EntrusrKindType_Today', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='EntrusrKindType_Tonight', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8559,
    serialized_end=8663,
)
_sym_db.RegisterEnumDescriptor(_ENTRUSRKINDTYPE)

EntrusrKindType = enum_type_wrapper.EnumTypeWrapper(_ENTRUSRKINDTYPE)
_EXCHANGESTATUSTYPE = _descriptor.EnumDescriptor(
    name='ExchangeStatusType',
    full_name='trade.tag.ExchangeStatusType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='ExchangeStatusType_Stop', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='ExchangeStatusType_Start', index=1, number=1,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8665,
    serialized_end=8744,
)
_sym_db.RegisterEnumDescriptor(_EXCHANGESTATUSTYPE)

ExchangeStatusType = enum_type_wrapper.EnumTypeWrapper(_EXCHANGESTATUSTYPE)
_SPECIALFLAGTYPE = _descriptor.EnumDescriptor(
    name='SpecialFlagType',
    full_name='trade.tag.SpecialFlagType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='SpecialFlagType_NotAppoint', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SpecialFlagType_Appoint', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SpecialFlagType_NewAppoint', index=2, number=2,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SpecialFlagType_Appointing', index=3, number=3,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SpecialFlagType_CancelAppoint', index=4, number=4,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='SpecialFlagType_NewAppointCanceling', index=5, number=5,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8747,
    serialized_end=8965,
)
_sym_db.RegisterEnumDescriptor(_SPECIALFLAGTYPE)

SpecialFlagType = enum_type_wrapper.EnumTypeWrapper(_SPECIALFLAGTYPE)
_TRADESTATUSTYPE = _descriptor.EnumDescriptor(
    name='TradeStatusType',
    full_name='trade.tag.TradeStatusType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='TradeStatusType_Open', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeStatusType_Close', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='TradeStatusType_All', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=8967,
    serialized_end=9062,
)
_sym_db.RegisterEnumDescriptor(_TRADESTATUSTYPE)

TradeStatusType = enum_type_wrapper.EnumTypeWrapper(_TRADESTATUSTYPE)
_QUERYTYPE = _descriptor.EnumDescriptor(
    name='QueryType',
    full_name='trade.tag.QueryType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='QueryType_UNDEFINED', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='QueryType_Detail', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='QueryType_Gather', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=9064,
    serialized_end=9144,
)
_sym_db.RegisterEnumDescriptor(_QUERYTYPE)

QueryType = enum_type_wrapper.EnumTypeWrapper(_QUERYTYPE)
LogLevelType_DEBUG = 0
LogLevelType_INFO = 1
LogLevelType_WARNING = 2
LogLevelType_ERROR = 3
LogLevelType_NOLOG = 4
CommProtocolType_UNDEFINED = 0
CommProtocolType_TCP = 1
CommProtocolType_UDP = 2
MarketType_SHA = 0
MarketType_SZA = 1
MarketType_SHB = 2
MarketType_SZB = 3
ExchangeType_UNDEFINED = 0
ExchangeType_SH = 1
ExchangeType_SZ = 2
ExchangeType_ZJ = 3
ExchangeType_SQ = 4
ExchangeType_SN = 5
ExchangeType_DL = 6
ExchangeType_ZZ = 7
ExchangeType_HK = 8
PriceType_UNDEFINED = 0
PriceType_LIMIT = 1
PriceType_BEST5_OR_LIMIT = 2
PriceType_BEST5_OR_CANCEL = 3
PriceType_BEST_OR_CANCEL = 4
PriceType_ALL_OR_CANCEL = 5
PriceType_FORWARD_BEST = 6
PriceType_REVERSE_BEST = 7
ActionType_UNDEFINED = 0
ActionType_BUY = 1
ActionType_SELL = 2
ActionType_SUBSCRIBE = 3
ActionType_PURCHASE = 4
ActionType_REDEMPTION = 5
OrderStatusType_INIT = 0
OrderStatusType_PROCESSING = 1
OrderStatusType_READY = 2
OrderStatusType_INVALID = 3
OrderStatusType_PART_TRADED = 4
OrderStatusType_ALL_TRADED = 5
OrderStatusType_PART_CANCELLED = 6
OrderStatusType_ALL_CANCELLED = 7
OrderStatusType_INTERNAL_CANCELLED = 8
OrderStatusType_Unknown = 14
OrderStatusType_NotTouched = 15
OrderStatusType_Touched = 16
ConditionStatusType_INIT = 0
ConditionStatusType_PAUSE = 1
ConditionStatusType_TRIGGER = 2
ConditionStatusType_CANCEL = 3
ConditionStatusType_EXPIRE = 4
ConditionStatusType_ERROR = 5
ConditionStatusType_TRADE_ERROR = 6
ConditionStatusType_ING = 10
ConditionStatusType_END = 11
ConditionStatusType_TrigerAndEntrustFail = 13
ConditionStatusType_ExpirdAndCancelAndWrong = 14
ConditionStatusType_DELETE = 15
ResumeType_RESTART = 0
ResumeType_RESUME = 1
ResumeType_QUICE = 2
SymbolType_STOCK = 0
SymbolType_BOND = 1
SymbolType_FUND = 2
SymbolType_OPTION = 3
InstrumentType_Stock = 0
InstrumentType_Future = 1
InstrumentType_Option = 2
InstrumentType_FutureOption = 3
InstrumentType_Bond = 4
InstrumentType_FX = 5
InstrumentType_Repo = 6
InstrumentType_Index = 7
InstrumentType_ETF = 8
InstrumentType_MultiLeg = 9
InstrumentType_Synthetic = 10
InstrumentType_Warrant = 11
InstrumentType_Spot = 12
InstrumentType_Standard = 13
InstrumentType_Fund = 15
InstrumentType_Unknown = 30
PutCallType_Put = 0
PutCallType_Call = 1
BusinessType_STOCK = 0
BusinessType_IPO = 1
BusinessType_ETF = 2
BusinessType_LOF = 3
BusinessType_MARGIN = 4
BusinessType_ALLOTMENT = 5
BusinessType_STRUCTURED_FUND_PURCHAE_REDEMPTION = 6
BusinessType_STRUCTURED_FUND_SPLIT_MERGE = 7
BusinessType_MONEY_FUND = 8
BusinessType_OPTION = 9
BusinessType_OPTION_EXECUTE = 10
BusinessType_REPO = 11
AccountType_NORMAL = 0
AccountType_CREDIT = 1
AccountType_DERIVE = 2
AccountType_FUTURES = 3
PositionDirectionType_NET = 0
PositionDirectionType_LONG = 1
PositionDirectionType_SHORT = 2
PositionDirectionType_COVERED = 3
TradeType_COMMON = 0
TradeType_CASH = 1
TradeType_CANCEL = 2
TradeType_INVALID = 3
OrderType_UNDEFINED = 0
OrderType_NORMAL = 1
OrderType_COMBINATION = 2
OrderType_CONDITION = 3
OrderType_ALGO = 4
CurrencyType_UNDEFINED = 0
CurrencyType_CNY = 1
CurrencyType_USD = 2
CurrencyType_HKD = 3
BizType_Future = 0
BizType_Stock = 1
HedgeFlag_Speculation = 0
HedgeFlag_Arbitrage = 2
HedgeFlag_Hedge = 3
HedgeFlag_MarketMaker = 5
OrderPriceType_AnyPrice = 0
OrderPriceType_LimitPrice = 1
OrderPriceType_BestPrice = 3
OrderPriceType_LastPrice = 4
OrderPriceType_LastPricePlusOneTicks = 5
OrderPriceType_LastPricePlusTwoTicks = 6
OrderPriceType_LastPricePlusThreeTicks = 7
OrderPriceType_AskPrice1 = 8
OrderPriceType_AskPrice1PlusOneTicks = 9
OrderPriceType_AskPrice1PlusTwoTicks = 10
OrderPriceType_AskPrice1PlusThreeTicks = 11
OrderPriceType_BidPrice1 = 12
OrderPriceType_BidPrice1PlusOneTicks = 13
OrderPriceType_BidPrice1PlusTwoTicks = 14
OrderPriceType_BidPrice1PlusThreeTicks = 15
OrderPriceType_FiveLevelPrice = 16
OrderPriceType_MarketPrice = 17
OrderPriceType_OverPrice = 18
TimeConditionType_IOC = 0
TimeConditionType_GFS = 2
TimeConditionType_GFD = 3
TimeConditionType_GTD = 4
TimeConditionType_GTC = 5
TimeConditionType_GFA = 6
VolumeConditionType_AV = 0
VolumeConditionType_MV = 1
VolumeConditionType_CV = 2
ContingentConditionType_Immediately = 0
ContingentConditionType_Touch = 2
ContingentConditionType_TouchProfit = 3
ContingentConditionType_ParkedOrder = 4
ContingentConditionType_LastPriceGreaterThanStopPrice = 5
ContingentConditionType_LastPriceGreaterEqualStopPrice = 6
ContingentConditionType_LastPriceLesserThanStopPrice = 7
ContingentConditionType_LastPriceLesserEqualStopPrice = 8
ContingentConditionType_AskPriceGreaterThanStopPrice = 9
ContingentConditionType_AskPriceGreaterEqualStopPrice = 10
ContingentConditionType_AskPriceLesserThanStopPrice = 11
ContingentConditionType_AskPriceLesserEqualStopPrice = 12
ContingentConditionType_BidPriceGreaterThanStopPrice = 13
ContingentConditionType_BidPriceGreaterEqualStopPrice = 14
ContingentConditionType_BidPriceLesserThanStopPrice = 15
ContingentConditionType_BidPriceLesserEqualStopPrice = 16
ForceCloseReasonType_NotForceClose = 0
ForceCloseReasonType_LackDeposit = 1
ForceCloseReasonType_ClientOverPositionLimit = 2
ForceCloseReasonType_MemberOverPositionLimit = 3
ForceCloseReasonType_NotMultiple = 4
ForceCloseReasonType_Violation = 5
ForceCloseReasonType_Other = 6
ForceCloseReasonType_PersonDeliv = 7
PosiDirectionType_Net = 0
PosiDirectionType_Long = 2
PosiDirectionType_Short = 3
TradeType_Common = 0
TradeType_OptionsExecution = 1
TradeTypeT_OTC = 2
TradeType_EFPDerived = 3
TradeType_CombinationDerived = 4
TradeType_SplitCombination = 10
OffsetFlagType_Open = 0
OffsetFlagType_Close = 1
OffsetFlagType_ForceClose = 2
OffsetFlagType_CloseToday = 3
OffsetFlagType_CloseYesterday = 4
OffsetFlagType_ForceOff = 5
OffsetFlagType_LocalForceClose = 6
PriceSourceType_LastPrice = 0
PriceSourceType_Buy = 1
PriceSourceType_Sell = 2
PositionDateType_Today = 0
PositionDateType_Yesterday = 1
InstrumentStatusType_BeforeTrading = 0
InstrumentStatusType_Closed = 1
InstrumentStatusType_NoTrading = 2
InstrumentStatusType_AuctionOrdering = 3
InstrumentStatusType_AuctionBalance = 4
InstrumentStatusType_AuctionMatch = 5
InstrumentStatusType_ContinousTrading = 6
OpenOrDestroyType_Destroy = 0
OpenOrDestroyType_Open = 1
IdCardTypeType_EID = 0
IdCardTypeType_IDCard = 1
IdCardTypeType_OfficerIDCard = 2
IdCardTypeType_PoliceIDCard = 3
IdCardTypeType_SoldierIDCard = 4
IdCardTypeType_HouseholdRegister = 5
IdCardTypeType_Passport = 6
IdCardTypeType_TaiwanCompatriotIDCard = 7
IdCardTypeType_HomeComingCard = 8
IdCardTypeType_LicenseNo = 9
IdCardTypeType_TaxNo = 65
IdCardTypeType_HMMainlandTravelPermit = 66
IdCardTypeType_TwMainlandTravelPermit = 67
IdCardTypeType_DrivingLicense = 68
IdCardTypeType_SocialID = 70
IdCardTypeType_LocalID = 71
IdCardTypeType_BusinessRegistration = 72
IdCardTypeType_HKMCIDCard = 73
IdCardTypeType_AccountsPermits = 74
IdCardTypeType_OtherCard = 120
CustTypeType_Person = 0
CustTypeType_Institution = 1
BankAccTypeType_UNDEFINED = 0
BankAccTypeType_BankBook = 1
BankAccTypeType_SavingCard = 2
BankAccTypeType_CreditCard = 3
StatusType_Normal = 0
StatusType_Repealed = 1
PwdFlagType_NoCheck = 0
PwdFlagType_BlankCheck = 1
PwdFlagType_EncryptCheck = 2
TransDirection_UNDEFINED = 0
TransDirection_BankToFuture = 1
TransDirection_FutureToBank = 2
TransDirection_BankBalance = 3
SourceType_SDK = 0
SourceType_Trader = 1
SourceType_Condition = 2
SourceType_HttpGateway = 3
SourceType_APP = 4
SourceType_PC = 5
ClientType_PC = 0
ClientType_APP = 1
ClientType_INNER = 2
ClientIDTypeType_UNDEFINED = 0
ClientIDTypeType_Speculation = 1
ClientIDTypeType_Arbitrage = 2
ClientIDTypeType_Hedge = 3
ClientIDTypeType_MarketMaker = 5
EntrusrKindType_UNDEFINED = 0
EntrusrKindType_Today = 1
EntrusrKindType_Tonight = 2
ExchangeStatusType_Stop = 0
ExchangeStatusType_Start = 1
SpecialFlagType_NotAppoint = 0
SpecialFlagType_Appoint = 1
SpecialFlagType_NewAppoint = 2
SpecialFlagType_Appointing = 3
SpecialFlagType_CancelAppoint = 4
SpecialFlagType_NewAppointCanceling = 5
TradeStatusType_Open = 0
TradeStatusType_Close = 1
TradeStatusType_All = 2
QueryType_UNDEFINED = 0
QueryType_Detail = 1
QueryType_Gather = 2

DESCRIPTOR.enum_types_by_name['LogLevelType'] = _LOGLEVELTYPE
DESCRIPTOR.enum_types_by_name['CommProtocolType'] = _COMMPROTOCOLTYPE
DESCRIPTOR.enum_types_by_name['MarketType'] = _MARKETTYPE
DESCRIPTOR.enum_types_by_name['ExchangeType'] = _EXCHANGETYPE
DESCRIPTOR.enum_types_by_name['PriceType'] = _PRICETYPE
DESCRIPTOR.enum_types_by_name['ActionType'] = _ACTIONTYPE
DESCRIPTOR.enum_types_by_name['OrderStatusType'] = _ORDERSTATUSTYPE
DESCRIPTOR.enum_types_by_name['ConditionStatusType'] = _CONDITIONSTATUSTYPE
DESCRIPTOR.enum_types_by_name['ResumeType'] = _RESUMETYPE
DESCRIPTOR.enum_types_by_name['SymbolType'] = _SYMBOLTYPE
DESCRIPTOR.enum_types_by_name['InstrumentType'] = _INSTRUMENTTYPE
DESCRIPTOR.enum_types_by_name['PutCallType'] = _PUTCALLTYPE
DESCRIPTOR.enum_types_by_name['BusinessType'] = _BUSINESSTYPE
DESCRIPTOR.enum_types_by_name['AccountType'] = _ACCOUNTTYPE
DESCRIPTOR.enum_types_by_name['PositionDirectionType'] = _POSITIONDIRECTIONTYPE
DESCRIPTOR.enum_types_by_name['TradeType'] = _TRADETYPE
DESCRIPTOR.enum_types_by_name['OrderType'] = _ORDERTYPE
DESCRIPTOR.enum_types_by_name['CurrencyType'] = _CURRENCYTYPE
DESCRIPTOR.enum_types_by_name['BizType'] = _BIZTYPE
DESCRIPTOR.enum_types_by_name['HedgeFlagType'] = _HEDGEFLAGTYPE
DESCRIPTOR.enum_types_by_name['OrderPriceType'] = _ORDERPRICETYPE
DESCRIPTOR.enum_types_by_name['TimeConditionType'] = _TIMECONDITIONTYPE
DESCRIPTOR.enum_types_by_name['VolumeConditionType'] = _VOLUMECONDITIONTYPE
DESCRIPTOR.enum_types_by_name['ContingentConditionType'] = _CONTINGENTCONDITIONTYPE
DESCRIPTOR.enum_types_by_name['ForceCloseReasonType'] = _FORCECLOSEREASONTYPE
DESCRIPTOR.enum_types_by_name['PosiDirectionType'] = _POSIDIRECTIONTYPE
DESCRIPTOR.enum_types_by_name['TradeTypeType'] = _TRADETYPETYPE
DESCRIPTOR.enum_types_by_name['OffsetFlagType'] = _OFFSETFLAGTYPE
DESCRIPTOR.enum_types_by_name['PriceSourceType'] = _PRICESOURCETYPE
DESCRIPTOR.enum_types_by_name['PositionDateType'] = _POSITIONDATETYPE
DESCRIPTOR.enum_types_by_name['InstrumentStatusType'] = _INSTRUMENTSTATUSTYPE
DESCRIPTOR.enum_types_by_name['OpenOrDestroyType'] = _OPENORDESTROYTYPE
DESCRIPTOR.enum_types_by_name['IdCardTypeType'] = _IDCARDTYPETYPE
DESCRIPTOR.enum_types_by_name['CustTypeType'] = _CUSTTYPETYPE
DESCRIPTOR.enum_types_by_name['BankAccTypeType'] = _BANKACCTYPETYPE
DESCRIPTOR.enum_types_by_name['StatusType'] = _STATUSTYPE
DESCRIPTOR.enum_types_by_name['PwdFlagType'] = _PWDFLAGTYPE
DESCRIPTOR.enum_types_by_name['TransDirection'] = _TRANSDIRECTION
DESCRIPTOR.enum_types_by_name['SourceType'] = _SOURCETYPE
DESCRIPTOR.enum_types_by_name['ClientType'] = _CLIENTTYPE
DESCRIPTOR.enum_types_by_name['ClientIDTypeType'] = _CLIENTIDTYPETYPE
DESCRIPTOR.enum_types_by_name['EntrusrKindType'] = _ENTRUSRKINDTYPE
DESCRIPTOR.enum_types_by_name['ExchangeStatusType'] = _EXCHANGESTATUSTYPE
DESCRIPTOR.enum_types_by_name['SpecialFlagType'] = _SPECIALFLAGTYPE
DESCRIPTOR.enum_types_by_name['TradeStatusType'] = _TRADESTATUSTYPE
DESCRIPTOR.enum_types_by_name['QueryType'] = _QUERYTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
