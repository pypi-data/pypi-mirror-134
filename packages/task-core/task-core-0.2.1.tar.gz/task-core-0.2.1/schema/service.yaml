$schema: http://json-schema.org/draft-07/schema
additionalProperties: true
default: {}
title: The service schema
description: Schema for task-core service files
required:
  - id
  - version
  - tasks
  - type
type: object
definitions:
  task_id:
    type: string
    pattern: "^[a-zA-Z0-9\\.\\-\\_]+$"
  service_task:
    type: object
    properties:
      id:
        oneOf:
          - $ref: "#/definitions/task_id"
      action:
        type: string
      provides:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      requires:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      needed-by:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      driver:
        const: service
      jobs:
        type: array
    required:
      - id
      - driver
      - jobs
  print_task:
    type: object
    properties:
      id:
        oneOf:
          - $ref: "#/definitions/task_id"
      action:
        type: string
      provides:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      requires:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      needed-by:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      driver:
        const: print
      message:
        type: string
    required:
      - id
      - driver
      - message
  directord_task:
    type: object
    properties:
      id:
        oneOf:
          - $ref: "#/definitions/task_id"
      action:
        type: string
      provides:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      requires:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      needed-by:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      driver:
        const: directord
      jobs:
        type: array
    required:
      - id
      - driver
      - jobs
    type: object
  ansible_runner_task:
    type: object
    properties:
      id:
        oneOf:
          - $ref: "#/definitions/task_id"
      action:
        type: string
      provides:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      requires:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      needed-by:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      driver:
        const: ansible_runner
      playbook:
        type: string
      inventory:
        type: string
      working_dir:
        type: string
      runner_options:
        type: object
      task_options:
        type: object
      global_fact_cache:
        type: boolean
    required:
      - id
      - driver
      - playbook
    type: object
  noop_task:
    type: object
    properties:
      id:
        oneOf:
          - $ref: "#/definitions/task_id"
      action:
        type: string
      provides:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      requires:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      needed-by:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      driver:
        const: noop
    required:
      - id
      - driver
    type: object
  returncode:
    type: integer
  local_task:
    type: object
    properties:
      id:
        oneOf:
          - $ref: "#/definitions/task_id"
      action:
        type: string
      provides:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      requires:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      needed-by:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/task_id"
      driver:
        const: local
      command:
        type: string
      quiet:
        type: boolean
      returncodes:
        type: array
        oneOf:
          - $ref: "#/definitions/returncode"
    required:
      - id
      - driver
      - command

properties:
  id:
    oneOf:
      - $ref: "#/definitions/task_id"
  version:
    type: string
    pattern: "^[0-9\\.]+$"
  type:
    const: service
  tasks:
    type: array
    minItems: 1
    items:
      anyOf:
        - $ref: "#/definitions/service_task"
        - $ref: "#/definitions/print_task"
        - $ref: "#/definitions/directord_task"
        - $ref: "#/definitions/ansible_runner_task"
        - $ref: "#/definitions/local_task"
