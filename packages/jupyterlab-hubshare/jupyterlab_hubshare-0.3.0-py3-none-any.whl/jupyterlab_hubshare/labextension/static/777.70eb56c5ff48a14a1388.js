"use strict";(self.webpackChunkjupyterlab_hubshare=self.webpackChunkjupyterlab_hubshare||[]).push([[777],{777:(e,t,o)=>{o.r(t),o.d(t,{default:()=>d});var n=o(659),a=o(271),r=o.n(a),s=o(618),i=o(503),c=o(491);class h extends s.ReactWidget{constructor(e,t,o){super(),this.name=t,this.path=e,this.importFunc=o}render(){const e=i.ServerConnection.makeSettings(),t=encodeURIComponent(this.path),o=c.URLExt.join(e.baseUrl,"jupyterlab_hubshare",`preview?path=${t}`);return r().createElement("div",{style:{width:"100%",height:"100%"}},r().createElement("div",null,r().createElement("input",{type:"button",value:"Import",onClick:()=>this.importFunc(this.path)})),r().createElement("iframe",{style:{width:"100%",height:"100%"},src:o}))}}class l extends s.MainAreaWidget{constructor(e,t,o){super({content:new h(e,t,o)}),this.id="HubShare-preview",this.title.label=`Preview: ${t}`,this.title.closable=!0}}async function p(e="",t={}){const o=i.ServerConnection.makeSettings(),n=c.URLExt.join(o.baseUrl,"jupyterlab_hubshare",e);let a;try{a=await i.ServerConnection.makeRequest(n,t,o)}catch(e){throw new i.ServerConnection.NetworkError(e)}let r=await a.text();if(r.length>0)try{r=JSON.parse(r)}catch(e){console.log("Not a JSON response body.",a)}if(!a.ok)throw new i.ServerConnection.ResponseError(a,r.message||r);return r}const d={id:"jupyterlab_hubshare:plugin",autoStart:!0,requires:[n.IFileBrowserFactory],activate:(e,t)=>{console.log("JupyterLab extension jupyterlab_hubshare is activated!");let o=null;const{tracker:n}=t;p("other-link").then((t=>{(t.other_links||[]).map((t=>{e.contextMenu.addItem({command:`HubShare:other-link-${t.id}`,selector:".jp-DirListing-item",rank:3}),e.commands.addCommand(`HubShare:other-link-${t.id}`,{label:`Copy ${t.label}`,execute:()=>{const e=n.currentWidget;if(!e)return;const o=e.selectedItems().next().path;console.log(o),p("other-link",{method:"POST",body:JSON.stringify({path:o,id:t.id})}).then((e=>{let t=e.path;console.log(e),t.startsWith("http://")&&t.startsWith("https://")||(t=new URL(t,window.location.href).href),console.log(t),s.Clipboard.copyToSystem(t)}))},iconClass:"jp-MaterialIcon jp-LinkIcon"})}))})),e.commands.addCommand("HubShare:preview",{caption:"Preview Shared Notebook",execute:t=>{null!==o&&o.close(),o=new l(String(t.path),String(t.name),(t=>{console.log(t),e.commands.execute("HubShare:import",{path:t})})),o.isAttached||e.shell.add(o,"main"),e.shell.activateById(o.id)}}),e.commands.addCommand("HubShare:import",{caption:"import notebook",execute:n=>{const a=String(n.path);p("content",{method:"PUT",body:JSON.stringify({path:a})}).then((n=>{const a=t.defaultBrowser.model.path;return new Promise((t=>{e.commands.execute("docmanager:new-untitled",{path:a,type:"notebook"}).then((t=>(o.close(),e.commands.execute("docmanager:open",{factory:"Notebook",path:t.path})))).then((e=>e.context.ready.then((()=>{e.model.fromJSON(n.content),t(e)})))).then((()=>e.commands.execute("docmanager:save")))}))}))}}),e.commands.addCommand("HubShare:share-link",{label:"Copy Sharable link",execute:()=>{const e=n.currentWidget;if(!e)return;const t=e.selectedItems().next().path;console.log(t),p("share-url",{method:"PUT",body:JSON.stringify({path:t})}).then((e=>{let t=e.share_path;console.log(e),t.startsWith("http://")&&t.startsWith("https://")||(t=new URL(t,window.location.href).href),console.log(t),s.Clipboard.copyToSystem(t)}))},iconClass:"jp-MaterialIcon jp-LinkIcon"}),e.contextMenu.addItem({command:"HubShare:share-link",selector:'.jp-DirListing-item[data-file-type="notebook"]',rank:3});const a=new URLSearchParams(window.location.search);if(a.get("hubshare-preview")){console.log(`original path: ${a.get("hubshare-preview")}`);const t=a.get("hubshare-preview"),o=decodeURIComponent(Array.prototype.map.call(atob(t),(e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2))).join("")).split("/").pop();console.log(`Found preview path: ${t}`),Promise.all([e.restored]).then((()=>{e.commands.execute("HubShare:preview",{path:t,name:o})}))}}}}}]);