{"version":3,"sources":["style.module.scss","RunCommand.tsx","index.tsx"],"names":["module","exports","RunCommand","state","action","commandString","commandOptions","isFocused","render","className","styles","poButton","onClick","onClicked","disabled","props","onFocus","_onFocus","onBlur","_onBlur","style","margin","src","process","alt","window","parent","chrome","msgObject","args","json","JSON","stringify","webview","postMessage","setState","prevState","Streamlit","setComponentValue","console","log","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,SAAW,0B,4KCqBvBC,E,4MACGC,MAAQ,CACbC,OAAQ,aACRC,cAAe,GACfC,eAAgB,GAChBC,WAAW,G,EAENC,OAAS,WAgBd,OACE,8BACE,4BACEC,UAAWC,IAAOC,SAClBC,QAAS,EAAKC,UACdC,SAAU,EAAKC,MAAMD,SACrBE,QAAS,EAAKC,SACdC,OAAQ,EAAKC,SAEb,8BACE,yBAAKC,MAdI,CACfC,OAAQ,mBAaoBC,IAAKC,wBAAiDC,IAAI,UARpF,iB,EAgBEX,UAAY,WAClB,GAAmC,oBAAxBY,OAAOC,OAAOC,OAAuB,CAE9C,IAAIC,EAAY,CACdxB,OAAQ,aACRC,cAAe,EAAKU,MAAMc,KAAX,cACfvB,eAAgB,EAAKS,MAAMc,KAAX,gBAEdC,EAAOC,KAAKC,UAAUJ,GAC1BH,OAAOC,OAAOC,OAAOM,QAAQC,YAAYJ,GAEzC,EAAKK,UACH,SAACC,GAAD,mBAAC,eACIA,GADL,IAEEhC,OAAQwB,EAAUxB,OAClBC,cAAeuB,EAAUvB,cACzBC,eAAgBsB,EAAUtB,oBAE5B,kBAAM+B,IAAUC,kBAAkB,EAAKnC,MAAMC,WAE/CmC,QAAQC,IAAI,2BAIZD,QAAQC,IAAI,+B,EAIRvB,SAAW,WACjB,EAAKkB,SAAS,CAAE5B,WAAW,K,EAGrBY,QAAU,WAChB,EAAKgB,SAAS,CAAE5B,WAAW,K,yBA1ENkC,KA8EVC,cAAwBxC,GChGvCyC,IAASnC,OACP,kBAAC,IAAMoC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.32a07ee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poButton\":\"style_poButton__3x8Ka\"};","import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport styles from './style.module.scss';\r\n\r\ninterface State {\r\n  action: string\r\n  commandString: string\r\n  commandOptions: string\r\n  isFocused: boolean\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    chrome: any;\r\n  }\r\n}\r\n\r\nclass RunCommand extends StreamlitComponentBase<State> {\r\n  public state = { \r\n    action: \"RunCommand\",\r\n    commandString: \"\", \r\n    commandOptions: \"\",\r\n    isFocused: false }\r\n\r\n  public render = (): ReactNode => {\r\n    // const { theme } = this.props\r\n    // const style: React.CSSProperties = {}\r\n\r\n    // if (theme) {\r\n    //   const borderStyling = `1px solid ${\r\n    //     this.state.isFocused ? theme.primaryColor : \"gray\"\r\n    //   }`\r\n    //   style.border = borderStyling\r\n    //   style.marginBottom = 2\r\n    // }\r\n\r\n    const imgStyle = {\r\n      margin: \"0px 3px 2px 0px\"\r\n    }\r\n    \r\n    return (\r\n      <span>\r\n        <button\r\n          className={styles.poButton}\r\n          onClick={this.onClicked}\r\n          disabled={this.props.disabled}\r\n          onFocus={this._onFocus}\r\n          onBlur={this._onBlur}\r\n        >\r\n          <span>\r\n            <img style={imgStyle} src={process.env.PUBLIC_URL + '/img/pollination.png'} alt=\"logo\" />\r\n          </span>\r\n            Run Command\r\n        </button>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  private onClicked = (): void => {\r\n    if (typeof window.parent.chrome != \"undefined\") {\r\n\r\n      var msgObject = {\r\n        action: \"RunCommand\",\r\n        commandString: this.props.args[\"commandString\"],\r\n        commandOptions: this.props.args[\"commandOptions\"]\r\n      };\r\n      var json = JSON.stringify(msgObject);\r\n      window.parent.chrome.webview.postMessage(json);\r\n\r\n      this.setState(\r\n        (prevState) => ({ \r\n          ...prevState, \r\n          action: msgObject.action,\r\n          commandString: msgObject.commandString,\r\n          commandOptions: msgObject.commandOptions\r\n        }),\r\n        () => Streamlit.setComponentValue(this.state.action)\r\n      );\r\n      console.log('JSON command sent!');\r\n    }\r\n    else\r\n    {\r\n      console.log('Webview2 is not running...');\r\n    }\r\n  }\r\n\r\n  private _onFocus = (): void => {\r\n    this.setState({ isFocused: true })\r\n  }\r\n\r\n  private _onBlur = (): void => {\r\n    this.setState({ isFocused: false })\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(RunCommand)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport RunCommand from \"./RunCommand\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <RunCommand />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}