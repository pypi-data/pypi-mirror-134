{"version":3,"sources":["style.module.scss","SendGeometry.tsx","index.tsx"],"names":["module","exports","SendGeometry","state","action","data","uniqueId","options","layer","units","isFocused","isChecked","render","className","styles","poCheckboxLabel","poCheckbox","type","defaultChecked","props","args","onChange","disabled","onFocus","_onFocus","onBlur","_onBlur","poCheckboxSpan","event","window","parent","chrome","check","target","checked","msgObject","json","JSON","stringify","webview","postMessage","setState","prevState","Streamlit","setComponentValue","console","log","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,eAAiB,8BAA8B,WAAa,4B,4KC0BzHC,E,4MACGC,MAAQ,CACXC,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,QAAS,CACPC,MAAO,GACPC,MAAO,IAETC,WAAW,EACXC,WAAW,G,EAGRC,OAAS,WACd,OACE,2BAAOC,UAAWC,IAAOC,iBACvB,2BACEF,UAAWC,IAAOE,WAClBC,KAAK,WACLC,eAAgB,EAAKC,MAAMC,KAAX,UAChBC,SAAU,EAAKA,SACfC,SAAU,EAAKH,MAAMG,SACrBC,QAAS,EAAKC,SACdC,OAAQ,EAAKC,UACf,0BAAMb,UAAWC,IAAOa,gBAAxB,mB,EAOEN,SAAW,SAACO,GAClB,GAAmC,oBAAxBC,OAAOC,OAAOC,OAAuB,CAC9C,IAAIC,EAAQJ,EAAMK,OAAOC,QAGrBC,EAAY,CACd/B,OAHkB4B,EAAS,eAAiB,cAI5C3B,KAAM,EAAKc,MAAMC,KAAX,KACNd,SAAU,EAAKa,MAAMC,KAAX,SACVb,QAAS,EAAKY,MAAMC,KAAX,SAGPgB,EAAOC,KAAKC,UAAUH,GAC1BN,OAAOC,OAAOC,OAAOQ,QAAQC,YAAYJ,GAEzC,EAAKK,UACH,SAACC,GAAD,mBAAC,eACIA,GADL,IAEEtC,OAAQ+B,EAAU/B,OAClBC,KAAM8B,EAAU9B,KAChBC,SAAU6B,EAAU7B,SACpBC,QAAS4B,EAAU5B,QACnBI,UAAWqB,OAEb,kBAAMW,IAAUC,kBAAkBT,EAAU9B,SAE9CwC,QAAQC,IAAI,0BAIZD,QAAQC,IAAI,+B,EAIRtB,SAAW,WACjB,EAAKiB,SAAS,CAAE/B,WAAW,K,EAGrBgB,QAAU,WAChB,EAAKe,SAAS,CAAE/B,WAAW,K,yBAtEJqC,KA0EZC,cAAwB9C,GCjGvC+C,IAASrC,OACP,kBAAC,IAAMsC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4c388a94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poCheckboxLabel\":\"style_poCheckboxLabel__2IHB4\",\"poCheckboxSpan\":\"style_poCheckboxSpan__ltXcy\",\"poCheckbox\":\"style_poCheckbox__3Q56z\"};","import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport styles from './style.module.scss';\r\n\r\ninterface State {\r\n  action: string\r\n  data: string\r\n  uniqueId: string\r\n  options: {\r\n    layer: string,\r\n    units: string\r\n  }\r\n  isFocused: boolean\r\n  isChecked: boolean\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    chrome: any;\r\n  }\r\n}\r\n\r\nclass SendGeometry extends StreamlitComponentBase<State> {\r\n  public state = {\r\n      action: '',\r\n      data: '',\r\n      uniqueId: '',\r\n      options: {\r\n        layer: '',\r\n        units: ''\r\n      },\r\n      isFocused: false, \r\n      isChecked: false\r\n    }\r\n\r\n  public render = (): ReactNode => {\r\n    return (\r\n      <label className={styles.poCheckboxLabel}>\r\n        <input \r\n          className={styles.poCheckbox}\r\n          type=\"checkbox\" \r\n          defaultChecked={this.props.args[\"isChecked\"]} \r\n          onChange={this.onChange} \r\n          disabled={this.props.disabled}\r\n          onFocus={this._onFocus}\r\n          onBlur={this._onBlur}/>\r\n        <span className={styles.poCheckboxSpan}>\r\n          Draw Geometry\r\n        </span>\r\n      </label>\r\n    )\r\n  }\r\n\r\n  private onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    if (typeof window.parent.chrome != \"undefined\") {\r\n      let check = event.target.checked;\r\n      let dotNetAction = (check) ? \"DrawGeometry\" : \"DisableDraw\";\r\n\r\n      var msgObject = {\r\n        action: dotNetAction,\r\n        data: this.props.args[\"data\"],\r\n        uniqueId: this.props.args[\"uniqueId\"],\r\n        options: this.props.args[\"options\"]\r\n      };\r\n\r\n      var json = JSON.stringify(msgObject);\r\n      window.parent.chrome.webview.postMessage(json);\r\n\r\n      this.setState(\r\n        (prevState) => ({ \r\n          ...prevState, \r\n          action: msgObject.action,\r\n          data: msgObject.data,\r\n          uniqueId: msgObject.uniqueId,\r\n          options: msgObject.options,\r\n          isChecked: check\r\n        }),\r\n        () => Streamlit.setComponentValue(msgObject.data)\r\n      );\r\n      console.log('JSON string sent!');\r\n    }\r\n    else\r\n    {\r\n      console.log('Webview2 is not running...');\r\n    }\r\n  }\r\n\r\n  private _onFocus = (): void => {\r\n    this.setState({ isFocused: true })\r\n  }\r\n\r\n  private _onBlur = (): void => {\r\n    this.setState({ isFocused: false })\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(SendGeometry)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport SendGeometry from \"./SendGeometry\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <SendGeometry />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}