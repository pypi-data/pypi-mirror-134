{"version":3,"file":"chunks/app_components_searchBar_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"uxBA2BA,MAAMA,UAAkBC,EAAAA,cAAkC,mDAOzC,CACbC,MAAOC,KAAKC,MAAMF,OAASC,KAAKC,MAAMC,aACtCC,iBAAiB,KATqC,6BAoBvCL,EAAAA,cApBuC,oBAsBjD,KACDE,KAAKI,eAAeC,SACtBL,KAAKI,eAAeC,QAAQC,WAxBwB,wBA4B5CC,IACVA,EAAIC,iBACJR,KAAKM,OACLN,KAAKC,MAAMQ,SAAST,KAAKU,MAAMX,WA/BuB,2BAkC1C,KACZC,KAAKW,SAAS,CAACZ,MAAOC,KAAKC,MAAMC,eAAe,KAC9CF,KAAKC,MAAMQ,SAAST,KAAKU,MAAMX,QAC/Ba,EAAAA,EAAAA,GAAeZ,KAAKC,MAAMY,SAAUb,KAAKU,MAAMX,cArCK,4BAyCzC,KACbC,KAAKW,SAAS,CACZR,iBAAiB,QA3CmC,2BA+C1C,KACZH,KAAKW,SAAS,CAACR,iBAAiB,QAhDsB,6BAmDvCI,IACf,MAAM,MAACO,GAASP,EAAIQ,OAEpBf,KAAKW,SAAS,CAACZ,MAAOe,KACtBF,EAAAA,EAAAA,GAAeZ,KAAKC,MAAMY,SAAUC,MA3CtCE,iCAAiCC,GAC3BA,EAAUlB,QAAUC,KAAKC,MAAMF,OACjCC,KAAKW,SAAS,CACZZ,MAAOkB,EAAUlB,QA2CvBmB,SAEE,MAAM,UACJC,EADI,MAEJC,EACArB,MAAOsB,EAHH,aAIJnB,EACAW,SAAUS,EACVb,SAAUc,KACPC,GACDxB,KAAKC,MAET,OACE,eAAKkB,UAAWM,GAAAA,CAAW,SAAUN,GAArC,UACE,gBAAMA,UAAU,kBAAkBO,SAAU1B,KAAK0B,SAAjD,UACE,0BACE,QAACC,EAAD,IACMH,EACJI,KAAK,OACLT,UAAU,eACVU,KAAK,QACLC,IAAK9B,KAAKI,eACV2B,aAAa,MACbjB,MAAOd,KAAKU,MAAMX,MAClBiC,OAAQhC,KAAKiC,YACbpB,SAAUb,KAAKkC,cACfd,MAAOA,KAET,QAACe,EAAD,CAAkBhB,UAAU,oBAAoBiB,KAAK,KAAKC,MAAM,YAC/DrC,KAAKU,MAAMX,QAAUG,IACpB,QAACoC,EAAD,CACEV,KAAK,SACLT,UAAU,oBACVoB,SAAS,OACTC,QAASxC,KAAKyC,YACdL,KAAK,SACLM,MAAM,QAAC,IAAD,IACNC,OAAOC,EAAAA,EAAAA,GAAE,mBA/FnB/C,EAAAA,YAAAA,a,OAAAA,EAAAA,eACgC,CAClCE,MAAO,GACPG,aAAc,GACdO,SAAU,eAqGd,MAAMkB,GAAc,OAAOkB,EAAAA,EAAP,qBAAH,UACNC,GAAMA,EAAE1B,MAAQ0B,EAAE1B,WAAQ2B,GADpB,sIASXZ,GAAmB,OAAOa,EAAAA,GAAP,qBAAH,yFAOhBV,GAAoB,OAAOW,EAAAA,GAAP,qBAAH,0FAMRH,GAAKA,EAAEI,MAAMC,eANL,WAOZL,GAAKA,EAAEI,MAAME,SAPD,mBAUVN,GAAKA,EAAEI,MAAMG,SAVH,MAcvB","sources":["webpack:///./app/components/searchBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'sentry/components/button';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport Input from 'sentry/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  width?: string;\n  onChange?: (query: string) => void;\n} & Omit<React.ComponentProps<typeof Input>, 'onChange'>;\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state: State = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    // Remove keys that should not be passed into Input\n    const {\n      className,\n      width,\n      query: _q,\n      defaultQuery,\n      onChange: _oC,\n      onSearch: _oS,\n      ...inputProps\n    } = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              {...inputProps}\n              type=\"text\"\n              className=\"search-input\"\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n"],"names":["SearchBar","React","query","this","props","defaultQuery","dropdownVisible","searchInputRef","current","blur","evt","preventDefault","onSearch","state","setState","callIfFunction","onChange","value","target","UNSAFE_componentWillReceiveProps","nextProps","render","className","width","_q","_oC","_oS","inputProps","classNames","onSubmit","StyledInput","type","name","ref","autoComplete","onBlur","onQueryBlur","onQueryChange","StyledIconSearch","size","color","SearchClearButton","priority","onClick","clearSearch","icon","label","t","Input","p","undefined","IconSearch","Button","theme","fontSizeLarge","gray200","gray300"],"sourceRoot":""}