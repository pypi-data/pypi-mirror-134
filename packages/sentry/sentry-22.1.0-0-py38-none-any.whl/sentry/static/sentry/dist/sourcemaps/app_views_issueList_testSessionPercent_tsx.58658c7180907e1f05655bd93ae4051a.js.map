{"version":3,"file":"chunks/app_views_issueList_testSessionPercent_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/issueList/testSessionPercent.tsx","webpack:///../node_modules/lodash/_baseRange.js","webpack:///../node_modules/lodash/_createRange.js","webpack:///../node_modules/lodash/range.js"],"sourcesContent":["import {Fragment, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport range from 'lodash/range';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Link from 'sentry/components/links/link';\nimport {t, tn} from 'sentry/locale';\nimport {\n  Group,\n  GroupStats,\n  Organization,\n  PageFilters,\n  SavedQueryVersions,\n} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport useApi from 'sentry/utils/useApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport Input from 'sentry/views/settings/components/forms/controls/input';\n\ntype Props = {\n  selection: PageFilters;\n  params: {orgId: string};\n  organization: Organization;\n};\n\nconst timePeriods = range(-1, -24 * 7, -1);\nconst defaultValue = '0.1';\n\ntype GroupWithPercent = {\n  group: Group;\n  percent: number;\n};\n\nfunction SessionPercent({params, selection, organization}: Props) {\n  const api = useApi();\n  const [threshold, setThreshold] = useState(defaultValue);\n  const [statsArr, setStats] = useState<GroupWithPercent[][]>([]);\n\n  const requestParams = {\n    expand: 'sessions',\n    display: 'sessions',\n    project: selection.projects,\n    query: 'is:unresolved',\n    sort: 'freq',\n  };\n\n  const fetchData = async () => {\n    for (let idx = 0; idx < timePeriods.length; idx++) {\n      const period = timePeriods[idx];\n      const start = getUtcDateString(\n        moment().subtract(Math.abs(period), 'hours').toDate()\n      );\n      const end = getUtcDateString(\n        moment()\n          .subtract(Math.abs(period) - 1, 'hours')\n          .toDate()\n      );\n\n      const issuesQuery = {...requestParams, limit: 5, start, end};\n      let results: Group[];\n      try {\n        results = await api.requestPromise(`/organizations/${params.orgId}/issues/`, {\n          method: 'GET',\n          data: qs.stringify(issuesQuery),\n        });\n      } catch {\n        results = [];\n      }\n\n      const groupIds = results.map(group => group.id);\n      if (groupIds.length === 0) {\n        setStats(prevState => {\n          return [...prevState, []];\n        });\n        continue;\n      }\n\n      const query = {\n        ...requestParams,\n        start,\n        end,\n        groups: groupIds,\n      };\n\n      try {\n        const groupStats: GroupStats[] = await api.requestPromise(\n          `/organizations/${params.orgId}/issues-stats/`,\n          {\n            method: 'GET',\n            data: qs.stringify(query),\n          }\n        );\n        const newData = groupStats.map(stats => {\n          return {\n            group: results.find(grp => grp.id === stats.id)!,\n            percent: stats.sessionCount\n              ? (Number(stats.count) / Number(stats.sessionCount)) * 100\n              : 100,\n          };\n        });\n        setStats(prevState => {\n          return [...prevState, newData];\n        });\n      } catch {\n        setStats(prevState => {\n          return [...prevState, []];\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function getDiscoverUrl({title, id, type}: Group, period: number) {\n    const start = getUtcDateString(\n      moment()\n        .subtract(Math.abs(period - 2), 'hours')\n        .toDate()\n    );\n    const end = getUtcDateString(\n      moment()\n        .subtract(Math.abs(period) - 3, 'hours')\n        .toDate()\n    );\n    const discoverQuery = {\n      id: undefined,\n      name: title || type,\n      fields: ['title', 'release', 'environment', 'user.display', 'timestamp'],\n      orderby: '-timestamp',\n      query: `issue.id:${id}`,\n      projects: selection.projects,\n      version: 2 as SavedQueryVersions,\n      start,\n      end,\n    };\n\n    const discoverView = EventView.fromSavedQuery(discoverQuery);\n    return discoverView.getResultsViewUrlTarget(organization.slug);\n  }\n\n  return (\n    <Fragment>\n      <Layout.Header>\n        <Layout.HeaderContent>\n          <Layout.Title>{t('Session Threshold Percent')}</Layout.Title>\n          <StyledInput\n            type=\"text\"\n            value={threshold}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setThreshold(event.target.value);\n            }}\n          />\n        </Layout.HeaderContent>\n      </Layout.Header>\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          {timePeriods.map((period, idx) => {\n            const stats = statsArr[idx];\n            const isLoading = stats === undefined;\n\n            return (\n              <Fragment key={idx}>\n                <h4>{tn('%s hour', '%s hours', period)}</h4>\n                <ul>\n                  {isLoading && t('Loading\\u2026')}\n                  {!isLoading &&\n                    stats\n                      .filter(({percent}) => percent > parseFloat(threshold))\n                      .map(({group, percent}) => (\n                        <li key={group.id}>\n                          {percent.toLocaleString()}% -{' '}\n                          <Link to={getDiscoverUrl(group, period)}>{group.title}</Link>\n                        </li>\n                      ))}\n                </ul>\n              </Fragment>\n            );\n          })}\n        </Layout.Main>\n      </Layout.Body>\n    </Fragment>\n  );\n}\n\nfunction SessionPercentWrapper(props: Props) {\n  return (\n    <Feature\n      features={['issue-percent-filters']}\n      renderDisabled={p => <FeatureDisabled features={p.features} hideHelpToggle />}\n    >\n      <SessionPercent {...props} />\n    </Feature>\n  );\n}\n\nexport default withPageFilters(withOrganization(SessionPercentWrapper));\n\nconst StyledInput = styled(Input)`\n  width: 100px;\n`;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n"],"names":["timePeriods","range","SessionPercent","params","selection","organization","api","useApi","threshold","setThreshold","useState","statsArr","setStats","requestParams","expand","display","project","projects","query","sort","getDiscoverUrl","title","id","type","period","start","getUtcDateString","moment","subtract","Math","abs","toDate","end","discoverQuery","undefined","name","fields","orderby","version","EventView","getResultsViewUrlTarget","slug","useEffect","async","idx","length","issuesQuery","limit","results","requestPromise","orgId","method","data","qs","groupIds","map","group","prevState","groups","newData","stats","find","grp","percent","sessionCount","Number","count","fetchData","Fragment","t","StyledInput","value","onChange","event","target","fullWidth","isLoading","tn","filter","parseFloat","toLocaleString","to","SessionPercentWrapper","props","features","renderDisabled","p","hideHelpToggle","withPageFilters","withOrganization","Input","nativeCeil","ceil","nativeMax","max","module","exports","step","fromRight","index","result","Array","baseRange","isIterateeCall","toFinite","createRange"],"sourceRoot":""}