{"version":3,"file":"chunks/app_views_organizationStats_teamInsights_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"miBAcA,SAASA,GAAsB,SAACC,EAAD,aAAWC,IACxC,OACE,QAAC,IAAD,CAASA,aAAcA,EAAcC,SAAU,CAAC,iBAAhD,UACE,QAAC,IAAD,CAAkBD,aAAcA,EAAhC,UACE,QAAC,IAAD,CAAqBE,OAAOC,EAAAA,EAAAA,GAAE,mBAAoBC,QAASJ,EAAaK,KAAxE,SACGN,IAAYO,EAAAA,EAAAA,gBAAeP,IACxBQ,EAAAA,EAAAA,cAAaR,EAAU,CACrBC,aAAAA,IAEDD,QATND,EAAAA,YAAAA,wBAgBT,SAAeU,EAAAA,EAAAA,GAAiBV","sources":["webpack:///./app/views/organizationStats/teamInsights/index.tsx"],"sourcesContent":["import {cloneElement, isValidElement} from 'react';\n\nimport Feature from 'sentry/components/acl/feature';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n  children?: React.ReactNode;\n};\n\nfunction TeamInsightsContainer({children, organization}: Props) {\n  return (\n    <Feature organization={organization} features={['team-insights']}>\n      <NoProjectMessage organization={organization}>\n        <SentryDocumentTitle title={t('Project Reports')} orgSlug={organization.slug}>\n          {children && isValidElement(children)\n            ? cloneElement(children, {\n                organization,\n              })\n            : (children as React.ReactChild)}\n        </SentryDocumentTitle>\n      </NoProjectMessage>\n    </Feature>\n  );\n}\n\nexport default withOrganization(TeamInsightsContainer);\n"],"names":["TeamInsightsContainer","children","organization","features","title","t","orgSlug","slug","isValidElement","cloneElement","withOrganization"],"sourceRoot":""}