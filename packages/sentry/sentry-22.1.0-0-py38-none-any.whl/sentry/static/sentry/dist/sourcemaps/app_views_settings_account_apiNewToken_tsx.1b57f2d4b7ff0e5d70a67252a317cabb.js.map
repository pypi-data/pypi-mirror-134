{"version":3,"file":"chunks/app_views_settings_account_apiNewToken_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"ugCAeA,MAAMA,EAAmCC,EAAAA,GAAAA,OACnCC,EAAuBC,EAAAA,GAAAA,KAAsBC,GAAK,CAACA,EAAGA,KACtDC,EAAkB,qCAET,MAAMC,UAAoBC,EAAAA,UAAU,uDACtC,KACTC,EAAAA,eAAAA,KAAoBH,OAF2B,+BAK/B,KAChBG,EAAAA,eAAAA,KAAoBH,MAGtBI,SACE,OACE,QAAC,IAAD,CAAqBC,OAAOC,EAAAA,EAAAA,GAAE,oBAA9B,UACE,0BACE,QAAC,IAAD,CAAoBD,OAAOC,EAAAA,EAAAA,GAAE,uBAC7B,QAAC,IAAD,WACGA,EAAAA,EAAAA,GACC,iKAGJ,QAAC,IAAD,WACGC,EAAAA,EAAAA,IACC,gFACA,CACEC,MAAM,QAAC,IAAD,CAAcC,KAAK,qCAI/B,QAAC,KAAD,YACE,QAAC,KAAD,WAAcH,EAAAA,EAAAA,GAAE,uBAChB,QAAC,IAAD,CACEI,UAAU,OACVC,YAAY,eACZC,YAAa,CAACC,OAAQlB,GACtBmB,gBAAiBC,KAAKD,gBACtBE,SAAUD,KAAKC,SACfC,YAAa,CACXC,UAAW,EACXC,aAAc,IAEhBC,aAAad,EAAAA,EAAAA,GAAE,gBAVjB,UAYE,QAAC,IAAD,WACE,QAAC,IAAD,CAAWe,KAAK,SAASC,OAAOhB,EAAAA,EAAAA,GAAE,UAAWiB,QAAQ,EAAOC,UAAQ,EAApE,SACG,EAAEC,MAAAA,EAAOC,SAAAA,MACR,QAAC,IAAD,CACEA,SAAUA,EACVD,MAAOA,EACPE,QAAS9B,mBA/CVI,EAAAA,YAAAA,e,ieCbrB,MAAM2B,GAA0B,OAAO,MAAP,sBAAH,sDAKvBC,GAAQ,OAAO,QAAP,sBAAH,gHAQLC,GAAgB,OAAO,OAAP,sBAAH,2CAanB,MAAMC,UAAyBC,EAAAA,UAAuB,uDACzC,CAACC,EAAgCC,KAC1C,MAAM,MAACT,EAAD,SAAQC,GAAYX,KAAKoB,MAC/B,IAAIC,EAA0B,GAEN,mBAAbV,IAKTU,EADEF,EAAEG,OAAOC,QACAb,EAAQ,IAAIA,EAAOQ,GAAiB,CAACR,GAErCA,EAAMc,QAAOC,GAAKA,IAAMP,IAGrCP,EAASU,EAAUF,OAGrB9B,SACE,MAAM,SAACqC,EAAD,QAAWd,EAAX,MAAoBF,GAASV,KAAKoB,MAExC,OACE,QAACP,EAAD,UACGD,EAAQe,KAAI,EAAEC,EAAaC,MAC1B,QAACC,EAAD,WACE,QAAChB,EAAD,YACE,iBACEiB,KAAK,WACLrB,MAAOkB,EACPjB,SAAUX,KAAKW,SAASqB,KAAKhC,KAAM4B,GACnCF,SAAUA,EACVH,SAASU,EAAAA,EAAAA,IAAQvB,KAA0C,IAAhCA,EAAMwB,QAAQN,MAE3C,QAACb,EAAD,UAAgBc,QATCD,QAxBzBZ,EAAAA,YAAAA,mBA0CN,UAEMc,GAAiB,OAAO,MAAP,sBAAH,kCAGGK,GAAKA,EAAEC,MAAMC,YAAY,IAH5B,oCAMGF,GAAKA,EAAEC,MAAMC,YAAY,IAN5B,wCASGF,GAAKA,EAAEC,MAAMC,YAAY,IAT5B","sources":["webpack:///./app/views/settings/account/apiNewToken.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {API_ACCESS_SCOPES, DEFAULT_API_ACCESS_SCOPES} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport {Choices} from 'sentry/types';\nimport ApiForm from 'sentry/views/settings/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/views/settings/components/forms/controls/multipleCheckbox';\nimport FormField from 'sentry/views/settings/components/forms/formField';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst SORTED_DEFAULT_API_ACCESS_SCOPES = DEFAULT_API_ACCESS_SCOPES.sort();\nconst API_CHOICES: Choices = API_ACCESS_SCOPES.map(s => [s, s]);\nconst API_INDEX_ROUTE = '/settings/account/api/auth-tokens/';\n\nexport default class ApiNewToken extends Component {\n  onCancel = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  onSubmitSuccess = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  render() {\n    return (\n      <SentryDocumentTitle title={t('Create API Token')}>\n        <div>\n          <SettingsPageHeader title={t('Create New Token')} />\n          <TextBlock>\n            {t(\n              \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n            )}\n          </TextBlock>\n          <TextBlock>\n            {tct(\n              'For more information on how to use the web API, see our [link:documentation].',\n              {\n                link: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n              }\n            )}\n          </TextBlock>\n          <Panel>\n            <PanelHeader>{t('Create New Token')}</PanelHeader>\n            <ApiForm\n              apiMethod=\"POST\"\n              apiEndpoint=\"/api-tokens/\"\n              initialData={{scopes: SORTED_DEFAULT_API_ACCESS_SCOPES}}\n              onSubmitSuccess={this.onSubmitSuccess}\n              onCancel={this.onCancel}\n              footerStyle={{\n                marginTop: 0,\n                paddingRight: 20,\n              }}\n              submitLabel={t('Create Token')}\n            >\n              <PanelBody>\n                <FormField name=\"scopes\" label={t('Scopes')} inline={false} required>\n                  {({value, onChange}) => (\n                    <MultipleCheckbox\n                      onChange={onChange}\n                      value={value}\n                      choices={API_CHOICES}\n                    />\n                  )}\n                </FormField>\n              </PanelBody>\n            </ApiForm>\n          </Panel>\n        </div>\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  value: (string | number)[];\n  choices: Choices;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n};\n\nclass MultipleCheckbox extends React.Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    width: 25%;\n  }\n`;\n"],"names":["SORTED_DEFAULT_API_ACCESS_SCOPES","DEFAULT_API_ACCESS_SCOPES","API_CHOICES","API_ACCESS_SCOPES","s","API_INDEX_ROUTE","ApiNewToken","Component","browserHistory","render","title","t","tct","link","href","apiMethod","apiEndpoint","initialData","scopes","onSubmitSuccess","this","onCancel","footerStyle","marginTop","paddingRight","submitLabel","name","label","inline","required","value","onChange","choices","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","React","selectedValue","e","props","newValue","target","checked","filter","v","disabled","map","choiceValue","choiceLabel","LabelContainer","type","bind","defined","indexOf","p","theme","breakpoints"],"sourceRoot":""}