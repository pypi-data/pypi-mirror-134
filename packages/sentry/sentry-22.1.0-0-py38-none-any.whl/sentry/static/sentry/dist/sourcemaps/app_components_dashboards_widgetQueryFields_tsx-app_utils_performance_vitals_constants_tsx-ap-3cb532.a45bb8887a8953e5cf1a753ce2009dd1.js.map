{"version":3,"file":"chunks/app_components_dashboards_widgetQueryFields_tsx-app_utils_performance_vitals_constants_tsx-ap-3cb532.xxxxxxxxxxxxxxxxxxxx.js","mappings":"m7BA2CA,SAASA,GAAkB,WACzBC,EADyB,YAEzBC,EAFyB,OAGzBC,EAHyB,OAIzBC,EAJyB,aAKzBC,EALyB,aAMzBC,EANyB,SAOzBC,EAPyB,MAQzBC,IAwDA,MAAMC,EAAqC,eAAhBP,EAErBQ,EAAuBC,IAG3B,IAAKF,GAAsBE,EAAOC,MAAMC,OAASC,EAAAA,EAAAA,SAAyB,CACxE,MAAMC,GAAgBC,EAAAA,EAAAA,IACpBL,EAAOC,MAAMK,KAAKC,UAClBC,GAEF,GAAIJ,EAEF,OAAOK,EAAAA,EAAAA,IAAiBL,GAI5B,OAAOJ,EAAOC,MAAMC,OAASC,EAAAA,EAAAA,UAGzBO,EAA4BC,GAAcX,IAG9C,GAAIF,EACF,OAAO,EAGT,GAAwB,aAApBa,EAAWT,KACb,OAAO,EAGT,MAAMU,EAAeD,EAAWE,SAAS,GACnCT,GAAgBC,EAAAA,EAAAA,IACpBO,EACAZ,EAAOC,MAAMK,KAAKC,MAEpB,OAAIH,GACKK,EAAAA,EAAAA,IAAiBL,GAGtBJ,EAAOC,MAAMC,OAASC,EAAAA,EAAAA,WAKnBM,EAAAA,EAAAA,IAAiBT,EAAOC,MAAMK,KAAKQ,WAGtCC,EACH,CAAC,YAAa,cAAcC,SAASzB,IAAkC,IAAlBE,EAAOwB,QAC5D,CAAC,OAAQ,OAAQ,eAAgB,OAAOD,SAASzB,IAC9B,IAAlBE,EAAOwB,OAELC,EAAYzB,EAAOwB,OAAS,EAElC,GAAoB,UAAhB1B,EACF,OACE,QAAC,IAAD,CACE,eAAa,UACb4B,OAAOC,EAAAA,EAAAA,GAAE,WACTC,QAAQ,EACRxB,MAAO,CAACyB,QAAS,GAAF,QAAKC,EAAAA,EAAAA,GAAM,GAAX,SAAuB1B,MAAAA,EAAAA,EAAS,IAC/C2B,MAAOhC,MAAAA,OAAF,EAAEA,EAAQC,OACfgC,0BAAwB,EACxBC,SAAO,EACPC,UAAQ,EARV,UAUE,QAACC,EAAD,CACEC,QAASpC,EACTG,SA5ER,SAA4BiC,GAC1BjC,EAASiC,IA4EHnC,aAAcA,EACdC,aAAcA,EACdmC,OAAQxC,MAMhB,GAAoB,UAAhBC,EAAyB,CAC3B,MAAMoB,EAAalB,EAAOA,EAAOwB,OAAS,GACpCY,EAAUpC,EAAOsC,MAAM,EAAGtC,EAAOwB,OAAS,GAEhD,OACE,QAAC,WAAD,YACE,QAAC,IAAD,CACE,eAAa,UACbE,OAAOC,EAAAA,EAAAA,GAAE,WACTC,QAAQ,EACRxB,MAAO,CAACyB,QAAS,GAAF,QAAKC,EAAAA,EAAAA,GAAM,GAAX,SAAuB1B,MAAAA,EAAAA,EAAS,IAC/C2B,MAAOhC,MAAAA,OAAF,EAAEA,EAAQC,OACfgC,0BAAwB,EACxBC,SAAO,EACPC,UAAQ,EARV,UAUE,QAACC,EAAD,CACEC,QAASA,EACTjC,SA5GV,SAAgCiC,GAC9B,MAAMG,EAAY,IAAIH,EAASpC,EAAOA,EAAOwB,OAAS,IACtDrB,EAASoC,IA2GDtC,aAAcA,EACdC,aAAcA,OAGlB,QAAC,IAAD,CACE,eAAa,SACbwB,OAAOC,EAAAA,EAAAA,GAAE,UACTC,QAAQ,EACRxB,MAAO,CAACyB,QAAS,GAAF,QAAKC,EAAAA,EAAAA,GAAM,GAAX,gBAA8B1B,MAAAA,EAAAA,EAAS,IACtD4B,0BAAwB,EACxBD,MAAOhC,MAAAA,OAAF,EAAEA,EAAQC,OACfkC,UAAQ,EACRD,SAAO,EART,UAUE,QAACO,EAAD,WACE,QAAC,IAAD,CACEtB,WAAYA,EACZjB,cAAcwC,EAAAA,EAAAA,IAAqB,CAACvC,aAAAA,IACpCC,SAAUK,GArItB,SAA+BA,GAC7B,MAAM+B,EAAY,IAAIvC,GACtBuC,EAAUvC,EAAOwB,OAAS,GAAKhB,EAC/BL,EAASoC,GAkIoBG,CAAsBlC,GACzCF,qBAAsBA,EACtBW,0BAA2BA,EAA0BC,MANzD,UAA2BA,EAA3B,YAcR,OACE,QAAC,IAAD,CACE,eAAa,SACbQ,OAAOC,EAAAA,EAAAA,GAAE,UACTC,QAAQ,EACRxB,MAAO,CAACyB,QAAS,GAAF,QAAKC,EAAAA,EAAAA,GAAM,GAAX,gBAA8B1B,MAAAA,EAAAA,EAAS,IACtD4B,0BAAwB,EACxBD,MAAOhC,MAAAA,OAAF,EAAEA,EAAQC,OACfkC,UAAQ,EACRD,SAAO,EART,UAUGjC,EAAO2C,KAAI,CAACC,EAAOC,KAEhB,QAACL,EAAD,YACE,QAAC,IAAD,CACEtB,WAAY0B,EACZ3C,aAAcA,EACdE,SAAUK,GAtKtB,SAA2BA,EAAwBsC,GACjD,MAAMP,EAAY,IAAIvC,GACtBuC,EAAUO,GAActC,EACxBL,EAASoC,GAmKoBQ,CAAkBvC,EAAOqC,GAC5CvC,qBAAsBA,EACtBW,0BAA2BA,EAA0B2B,GACrDI,aAAchD,KAEdyB,GAA4B,aAAfmB,EAAMnC,QACnB,QAAC,KAAD,CACEwC,KAAK,OACLC,YAAU,EACVC,QAASC,GAvLvB,SAAsBA,EAAyBN,GAC7CM,EAAMC,iBAEN,MAAMd,EAAY,IAAIvC,GACtBuC,EAAUe,OAAOR,EAAY,GAC7B3C,EAASoC,GAkLqBgB,CAAaH,EAAOP,GACtCW,MAAM,QAAC,KAAD,IACNC,OAAO9B,EAAAA,EAAAA,GAAE,sBACTD,OAAOC,EAAAA,EAAAA,GAAE,0BAhBf,UAA2BiB,EAA3B,YAAoCC,OAsBtCvB,IACA,QAACoC,EAAD,YACE,QAAC,KAAD,CAAQT,KAAK,QAAQO,MAAM,QAAC,KAAD,CAASG,WAAS,IAAKR,QAtN1D,SAAmBC,GACjBA,EAAMC,iBAEN,MAAMd,EAAY,IACbvC,EACH,CAACS,KAAMC,EAAAA,EAAAA,MAAsBkC,MAAO,KAEtCzC,EAASoC,IA+MH,UACGZ,EAAAA,EAAAA,GAAE,kBAEL,QAAC,KAAD,CACEsB,KAAK,QACLvB,OAAOC,EAAAA,EAAAA,GAAE,mBACTwB,QAlNV,SAA2BC,GACzBA,EAAMC,iBAEN,MAAMd,EAAY,IACbvC,EACH,CAACS,KAAMC,EAAAA,EAAAA,SAAyBkC,MAAO,KAEzCzC,EAASoC,IA4MDiB,MAAM,QAAC,KAAD,CAASG,WAAS,IAJ1B,UAMGhC,EAAAA,EAAAA,GAAE,2BA1ON/B,EAAAA,YAAAA,oBAkPT,MAAMuC,GAA6B,OAAOyB,EAAAA,EAAP,qBAAH,eAChB9B,EAAAA,EAAAA,GAAM,GADU,KAInBU,GAAoB,OAAO,MAAP,qBAAH,gFAIXV,EAAAA,EAAAA,GAAM,GAJK,sBAOXA,EAAAA,EAAAA,GAAM,GAPK,MAWxB4B,GAAU,OAAO,MAAP,qBAAH,0CAIO5B,EAAAA,EAAAA,GAAM,GAJb,MAQb,K,kKChTO,MAAM+B,EAA6C,CACxD,CAACC,EAAAA,GAAAA,IAAc,CACbC,KAAM,KACNjD,MAAMa,EAAAA,EAAAA,GAAE,eACRqC,QAAS,KACTC,aAAatC,EAAAA,EAAAA,GACX,iFAEFuC,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBN,EAAAA,GAAAA,KAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNjD,MAAMa,EAAAA,EAAAA,GAAE,0BACRqC,QAAS,MACTC,aAAatC,EAAAA,EAAAA,GACX,2EAEFuC,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBN,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNjD,MAAMa,EAAAA,EAAAA,GAAE,4BACRqC,QAAS,MACTC,aAAatC,EAAAA,EAAAA,GACX,6EAEFuC,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBN,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNjD,MAAMa,EAAAA,EAAAA,GAAE,qBACRqC,QAAS,MACTC,aAAatC,EAAAA,EAAAA,GACX,gFAEFuC,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBN,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNjD,MAAMa,EAAAA,EAAAA,GAAE,2BACRqC,QAAS,MACTC,aAAatC,EAAAA,EAAAA,GACX,6EAEFuC,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBN,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,MAAgB,CACfC,KAAM,OACNjD,MAAMa,EAAAA,EAAAA,GAAE,sBACRqC,QAAS,OACTC,aAAatC,EAAAA,EAAAA,GACX,0FAEFuC,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBN,EAAAA,GAAAA,OAExB,CAACA,EAAAA,GAAAA,aAAuB,CACtBC,KAAM,mBACNjD,MAAMa,EAAAA,EAAAA,GAAE,gBACRqC,QAAS,KACTC,aAAatC,EAAAA,EAAAA,GACX,4FAEFuC,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBN,EAAAA,GAAAA,eAIbO,EAAmD,CAC9D,CAACC,EAAAA,GAAAA,cAA2B,CAC1BP,KAAM,iBACNjD,MAAMa,EAAAA,EAAAA,GAAE,kBACRsC,aAAatC,EAAAA,EAAAA,GACX,0EAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,eAExB,CAACA,EAAAA,GAAAA,cAA2B,CAC1BP,KAAM,iBACNjD,MAAMa,EAAAA,EAAAA,GAAE,kBACRsC,aAAatC,EAAAA,EAAAA,GACX,mFAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,eAExB,CAACA,EAAAA,GAAAA,aAA0B,CACzBP,KAAM,eACNjD,MAAMa,EAAAA,EAAAA,GAAE,gBACRsC,aAAatC,EAAAA,EAAAA,GACX,kFAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,cAExB,CAACA,EAAAA,GAAAA,YAAyB,CACxBP,KAAM,cACNjD,MAAMa,EAAAA,EAAAA,GAAE,eACRsC,aAAatC,EAAAA,EAAAA,GACX,sFAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,aAExB,CAACA,EAAAA,GAAAA,cAA2B,CAC1BP,KAAM,gBACNjD,MAAMa,EAAAA,EAAAA,GAAE,iBACRsC,aAAatC,EAAAA,EAAAA,GACX,0FAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,eAExB,CAACA,EAAAA,GAAAA,gBAA6B,CAC5BP,KAAM,mBACNjD,MAAMa,EAAAA,EAAAA,GAAE,oBACRsC,aAAatC,EAAAA,EAAAA,GACX,uGAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,iBAExB,CAACA,EAAAA,GAAAA,kBAA+B,CAC9BP,KAAM,qBACNjD,MAAMa,EAAAA,EAAAA,GAAE,sBACRsC,aAAatC,EAAAA,EAAAA,GACX,2GAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,mBAExB,CAACA,EAAAA,GAAAA,YAAyB,CACxBP,KAAM,cACNjD,MAAMa,EAAAA,EAAAA,GAAE,UACRsC,aAAatC,EAAAA,EAAAA,GACX,+EAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,aAExB,CAACA,EAAAA,GAAAA,gBAA6B,CAC5BP,KAAM,mBACNjD,MAAMa,EAAAA,EAAAA,GAAE,oBACRsC,aAAatC,EAAAA,EAAAA,GACX,iGAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,iBAExB,CAACA,EAAAA,GAAAA,kBAA+B,CAC9BP,KAAM,qBACNjD,MAAMa,EAAAA,EAAAA,GAAE,sBACRsC,aAAatC,EAAAA,EAAAA,GACX,qGAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,mBAExB,CAACA,EAAAA,GAAAA,iBAA8B,CAC7BP,KAAM,mBACNjD,MAAMa,EAAAA,EAAAA,GAAE,oBACRsC,aAAatC,EAAAA,EAAAA,GACX,+FAEFwC,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,oB,2TCjJnB,SAASC,EACdC,EACAC,GAgBA,OAdAC,OAAOC,KAAKH,GAAMI,SAASC,IACzB,MAAMrE,EAAQgE,EAAKK,GAEfC,MAAMC,QAAQvE,IAA8B,iBAAbA,EAAM,GACvCiE,EAAOI,GAAOrE,EAAM,GAGlBsE,MAAMC,QAAQvE,IAA8B,iBAAbA,EAAM,GACvCiE,EAAOI,GAAQrE,EAA4BmC,KAAIqC,GAAQT,EAAUS,EAAM,MAEvEP,EAAOI,GAAON,EAAU/D,EAA0B,OAI/CiE,EAGF,SAASQ,EACdnF,EACAoF,GAEA,MAAMC,EAAoB,CACxBC,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,aACAA,EAAAA,GAAAA,KACA7D,SAASzB,GAcX,GAXE,CAACsF,EAAAA,GAAAA,MAAmBA,EAAAA,GAAAA,UAAuBA,EAAAA,GAAAA,YAAwB7D,SACjEzB,GAIFoF,EAAUA,EAAQ5C,MAAM,EAAG,GAClB6C,IAETD,EAAUA,EAAQ5C,MAAM,EAAG,IAGzB,CAAC8C,EAAAA,GAAAA,MAAmBA,EAAAA,GAAAA,OAAmB7D,SAASzB,GAClD,OAAOoF,EAuBT,GAnBAA,EAAUA,EAAQvC,KAAI0C,IACpB,IAAIrF,EAASqF,EAAMrF,OAAOsF,OAAOC,EAAAA,IAYjC,OAVIJ,GAAqBrF,IAAgBsF,EAAAA,GAAAA,aAEvCpF,EAASA,EAAOsF,QAAO1C,IAAS5B,EAAAA,EAAAA,KAAiBwE,EAAAA,EAAAA,IAAoB5C,OAGnEuC,GAAqBnF,EAAOwB,QAAUxB,EAAOwB,OAAS,IAExDxB,EAASA,EAAOsC,MAAM,EAAG,IAGpB,IACF+C,EACHrF,OAAQA,EAAOwB,OAASxB,EAAS,CAAC,eAIlCmF,EAAmB,CAGrB,MAAMM,EAAkB,IAAIP,EAAQ,GAAGlF,QAEvC0F,EAAW,IAAK,MAAML,KAASH,EAAS,CACtC,GAAIO,EAAgBjE,QAAU,EAC5B,MAGF,IAAImE,GAAAA,CAAQF,EAAiBJ,EAAMrF,QAInC,IAAK,MAAM4C,KAASyC,EAAMrF,OAAQ,CAChC,GAAIyF,EAAgBjE,QAAU,EAC5B,MAAMkE,EAGHD,EAAgBlE,SAASqB,IAC5B6C,EAAgBG,KAAKhD,IAK3BsC,EAAUA,EAAQvC,KAAI0C,IACb,IACFA,EACHrF,OAAQyF,MAed,MAVI,CAACL,EAAAA,GAAAA,UAAuBA,EAAAA,GAAAA,YAAwB7D,SAASzB,KAE3DoF,EAAUA,EAAQvC,KAAI0C,IACb,IACFA,EACHrF,OAAQqF,EAAMrF,OAAOsC,MAAM,EAAG,QAK7B4C,I,2DClIT,IAAIW,EAAW,EAAQ,kDACnBC,EAAU,EAAQ,oDAGlBC,EAFkB,EAAQ,yDAElBC,CAAgB,SAI5BC,EAAOC,QAAU,SAAUC,GACzB,IAAIC,EACJ,OAAOP,EAASM,UAAmCpF,KAA1BqF,EAAWD,EAAGJ,MAA0BK,EAA0B,UAAfN,EAAQK,M,qECVtF,IAAIE,EAAW,EAAQ,kDACnBC,EAAY,EAAQ,mDAGpBC,EAFkB,EAAQ,yDAEhBP,CAAgB,WAI9BC,EAAOC,QAAU,SAAUM,EAAGC,GAC5B,IACIC,EADAC,EAAIN,EAASG,GAAGI,YAEpB,YAAa7F,IAAN4F,GAAiD5F,OAA7B2F,EAAIL,EAASM,GAAGJ,IAAyBE,EAAqBH,EAAUI,K,gFCTrG,IAAIG,EAAI,EAAQ,+CACZC,EAA4B,EAAQ,oEACpCC,EAAyB,EAAQ,iEACjCC,EAAW,EAAQ,kDACnBC,EAAW,EAAQ,kDACnBX,EAAY,EAAQ,mDACpBD,EAAW,EAAQ,kDACnBP,EAAU,EAAQ,oDAClBM,EAAW,EAAQ,kDACnBc,EAAiB,EAAQ,qDACzBC,EAA8B,EAAQ,uEACtCC,EAAQ,EAAQ,8CAChBpB,EAAkB,EAAQ,0DAC1BqB,EAAqB,EAAQ,4DAC7BC,EAAqB,EAAQ,6DAC7BC,EAAsB,EAAQ,uDAC9BC,EAAU,EAAQ,gDAElBC,EAAYzB,EAAgB,YAE5B0B,EAAyBC,yBACzBC,EAAmBL,EAAoBM,IACvCC,EAAmBP,EAAoBQ,UAAUL,GACjDM,EAAkBC,OAAOC,UACzBC,EAAoBH,EAAgBI,KACpCC,EAAiB,GAAGC,SAEpBC,IAAgCF,IAAmBjB,GAAM,WAC3D,IAAIkB,SAAS,QAcXE,EAAwB1B,GAA0B,SAA8B2B,EAAQC,EAAQC,EAAQC,GAC1GhB,EAAiBiB,KAAM,CACrB1E,KAAMuD,EACNe,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRG,QAASF,EACTG,MAAM,MA9BU,iBAgCF,WAChB,IAAIC,EAAQlB,EAAiBe,MAC7B,GAAIG,EAAMD,KAAM,MAAO,CAAEvI,WAAOO,EAAWgI,MAAM,GACjD,IAAIE,EAAID,EAAMP,OACV/B,EAAIsC,EAAMN,OACVQ,EAzBW,SAAUD,EAAGvC,GAC5B,IACIyC,EADAf,EAAOa,EAAEb,KAEb,GAAmB,mBAARA,EAAoB,CAE7B,GAAqB,iBADrBe,EAASf,EAAKgB,KAAKH,EAAGvC,IACS,MAAM2C,UAAU,yBAC/C,OAAOF,EACP,OAAOhB,EAAkBiB,KAAKH,EAAGvC,GAkBvB4C,CAAWL,EAAGvC,GAC1B,OAAc,OAAVwC,EAAuB,CAAE1I,WAAOO,EAAWgI,KAAMC,EAAMD,MAAO,GAC9DC,EAAML,QACmB,KAAvB1B,EAASiC,EAAM,MAAYD,EAAEM,UAAYjC,EAAmBZ,EAAGM,EAASiC,EAAEM,WAAYP,EAAMF,UACzF,CAAEtI,MAAO0I,EAAOH,MAAM,KAE/BC,EAAMD,MAAO,EACN,CAAEvI,MAAO0I,EAAOH,MAAM,OAG3BS,EAAY,SAAUd,GACxB,IAEI/B,EAAG8C,EAAYC,EAAOC,EAAShB,EAAQC,EAFvCK,EAAI5C,EAASwC,MACbnC,EAAIO,EAASyB,GAYjB,OAVA/B,EAAIU,EAAmB4B,EAAGhB,aAEPlH,KADnB0I,EAAaR,EAAES,QACiBT,aAAahB,UAAY,UAAWD,KAClEyB,EAAavC,EAAekC,KAAKH,IAEnCS,OAAuB3I,IAAf0I,EAA2B,GAAKxC,EAASwC,GACjDE,EAAU,IAAIhD,EAAEA,IAAMsB,OAASgB,EAAE5G,OAAS4G,EAAGS,GAC7Cf,KAAYe,EAAME,QAAQ,KAC1BhB,KAAiBc,EAAME,QAAQ,KAC/BD,EAAQJ,UAAYvC,EAASiC,EAAEM,WACxB,IAAIf,EAAsBmB,EAASjD,EAAGiC,EAAQC,IAKvD/B,EAAE,CAAEgD,OAAQ,SAAUC,OAAO,EAAMC,OAAQxB,GAA+B,CACxED,SAAU,SAAkBG,GAC1B,IACW/B,EAAGiD,EAASK,EADnBxD,EAAIO,EAAuB8B,MAE/B,GAAc,MAAVJ,EAAgB,CAClB,GAAIrC,EAASqC,MACHxB,EAASF,EAAuB,UAAWiB,EAC/CS,EAAOiB,MACPxC,EAAekC,KAAKX,KAEZmB,QAAQ,KAAM,MAAMP,UAAU,iDAE5C,GAAId,EAA6B,OAAOF,EAAe4B,MAAMzD,EAAG0D,WAGhE,QADgBnJ,KADhB4I,EAAUlB,EAAOhB,KACYD,GAA8B,UAAnB1B,EAAQ2C,KAAqBkB,EAAUH,GAChE,MAAXG,EAAiB,OAAOrD,EAAUqD,GAASP,KAAKX,EAAQjC,QACvD,GAAI+B,EAA6B,OAAOF,EAAe4B,MAAMzD,EAAG0D,WAGvE,OAFAxD,EAAIO,EAAST,GACbwD,EAAK,IAAI/B,OAAOQ,EAAQ,KACjBjB,EAAUgC,EAAUJ,KAAKY,EAAItD,GAAKsD,EAAGvC,GAAWf,MAI3Dc,GAAWC,KAAaO,GAAmBb,EAA4Ba,EAAiBP,EAAW+B","sources":["webpack:///./app/components/dashboards/widgetQueryFields.tsx","webpack:///./app/utils/performance/vitals/constants.tsx","webpack:///./app/views/dashboardsV2/widget/eventWidget/utils.tsx","webpack:///../node_modules/core-js/internals/is-regexp.js","webpack:///../node_modules/core-js/internals/species-constructor.js","webpack:///../node_modules/core-js/modules/es.string.match-all.js"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {\n  aggregateFunctionOutputType,\n  isLegalYAxisType,\n  QueryFieldValue,\n} from 'sentry/utils/discover/fields';\nimport {Widget} from 'sentry/views/dashboardsV2/types';\nimport ColumnEditCollection from 'sentry/views/eventsV2/table/columnEditCollection';\nimport {QueryField} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\nimport Field from 'sentry/views/settings/components/forms/field';\n\ntype Props = {\n  /**\n   * The widget display type. Used to render different fieldsets.\n   */\n  displayType: Widget['displayType'];\n  widgetType: Widget['widgetType'];\n  fieldOptions: ReturnType<typeof generateFieldOptions>;\n  /**\n   * The field list for the widget.\n   */\n  fields: QueryFieldValue[];\n  /**\n   * Fired when fields are added/removed/modified/reordered.\n   */\n  onChange: (fields: QueryFieldValue[]) => void;\n  /**\n   * Any errors that need to be rendered.\n   */\n  organization: Organization;\n  errors?: Record<string, any>;\n  style?: React.CSSProperties;\n};\n\nfunction WidgetQueryFields({\n  widgetType,\n  displayType,\n  errors,\n  fields,\n  fieldOptions,\n  organization,\n  onChange,\n  style,\n}: Props) {\n  // Handle new fields being added.\n  function handleAdd(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const newFields = [\n      ...fields,\n      {kind: FieldValueKind.FIELD, field: ''} as QueryFieldValue,\n    ];\n    onChange(newFields);\n  }\n\n  function handleAddEquation(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const newFields = [\n      ...fields,\n      {kind: FieldValueKind.EQUATION, field: ''} as QueryFieldValue,\n    ];\n    onChange(newFields);\n  }\n\n  function handleRemove(event: React.MouseEvent, fieldIndex: number) {\n    event.preventDefault();\n\n    const newFields = [...fields];\n    newFields.splice(fieldIndex, 1);\n    onChange(newFields);\n  }\n\n  function handleChangeField(value: QueryFieldValue, fieldIndex: number) {\n    const newFields = [...fields];\n    newFields[fieldIndex] = value;\n    onChange(newFields);\n  }\n\n  function handleTopNChangeField(value: QueryFieldValue) {\n    const newFields = [...fields];\n    newFields[fields.length - 1] = value;\n    onChange(newFields);\n  }\n\n  function handleTopNColumnChange(columns: QueryFieldValue[]) {\n    const newFields = [...columns, fields[fields.length - 1]];\n    onChange(newFields);\n  }\n\n  function handleColumnChange(columns: QueryFieldValue[]) {\n    onChange(columns);\n  }\n\n  // Any function/field choice for Big Number widgets is legal since the\n  // data source is from an endpoint that is not timeseries-based.\n  // The function/field choice for World Map widget will need to be numeric-like.\n  // Column builder for Table widget is already handled above.\n  const doNotValidateYAxis = displayType === 'big_number';\n\n  const filterPrimaryOptions = option => {\n    // Only validate function names for timeseries widgets and\n    // world map widgets.\n    if (!doNotValidateYAxis && option.value.kind === FieldValueKind.FUNCTION) {\n      const primaryOutput = aggregateFunctionOutputType(\n        option.value.meta.name,\n        undefined\n      );\n      if (primaryOutput) {\n        // If a function returns a specific type, then validate it.\n        return isLegalYAxisType(primaryOutput);\n      }\n    }\n\n    return option.value.kind === FieldValueKind.FUNCTION;\n  };\n\n  const filterAggregateParameters = fieldValue => option => {\n    // Only validate function parameters for timeseries widgets and\n    // world map widgets.\n    if (doNotValidateYAxis) {\n      return true;\n    }\n\n    if (fieldValue.kind !== 'function') {\n      return true;\n    }\n\n    const functionName = fieldValue.function[0];\n    const primaryOutput = aggregateFunctionOutputType(\n      functionName as string,\n      option.value.meta.name\n    );\n    if (primaryOutput) {\n      return isLegalYAxisType(primaryOutput);\n    }\n\n    if (option.value.kind === FieldValueKind.FUNCTION) {\n      // Functions are not legal options as an aggregate/function parameter.\n      return false;\n    }\n\n    return isLegalYAxisType(option.value.meta.dataType);\n  };\n\n  const hideAddYAxisButton =\n    (['world_map', 'big_number'].includes(displayType) && fields.length === 1) ||\n    (['line', 'area', 'stacked_area', 'bar'].includes(displayType) &&\n      fields.length === 3);\n\n  const canDelete = fields.length > 1;\n\n  if (displayType === 'table') {\n    return (\n      <Field\n        data-test-id=\"columns\"\n        label={t('Columns')}\n        inline={false}\n        style={{padding: `${space(1)} 0`, ...(style ?? {})}}\n        error={errors?.fields}\n        flexibleControlStateSize\n        stacked\n        required\n      >\n        <StyledColumnEditCollection\n          columns={fields}\n          onChange={handleColumnChange}\n          fieldOptions={fieldOptions}\n          organization={organization}\n          source={widgetType}\n        />\n      </Field>\n    );\n  }\n\n  if (displayType === 'top_n') {\n    const fieldValue = fields[fields.length - 1];\n    const columns = fields.slice(0, fields.length - 1);\n\n    return (\n      <React.Fragment>\n        <Field\n          data-test-id=\"columns\"\n          label={t('Columns')}\n          inline={false}\n          style={{padding: `${space(1)} 0`, ...(style ?? {})}}\n          error={errors?.fields}\n          flexibleControlStateSize\n          stacked\n          required\n        >\n          <StyledColumnEditCollection\n            columns={columns}\n            onChange={handleTopNColumnChange}\n            fieldOptions={fieldOptions}\n            organization={organization}\n          />\n        </Field>\n        <Field\n          data-test-id=\"y-axis\"\n          label={t('Y-Axis')}\n          inline={false}\n          style={{padding: `${space(2)} 0 24px 0`, ...(style ?? {})}}\n          flexibleControlStateSize\n          error={errors?.fields}\n          required\n          stacked\n        >\n          <QueryFieldWrapper key={`${fieldValue}:0`}>\n            <QueryField\n              fieldValue={fieldValue}\n              fieldOptions={generateFieldOptions({organization})}\n              onChange={value => handleTopNChangeField(value)}\n              filterPrimaryOptions={filterPrimaryOptions}\n              filterAggregateParameters={filterAggregateParameters(fieldValue)}\n            />\n          </QueryFieldWrapper>\n        </Field>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Field\n      data-test-id=\"y-axis\"\n      label={t('Y-Axis')}\n      inline={false}\n      style={{padding: `${space(2)} 0 24px 0`, ...(style ?? {})}}\n      flexibleControlStateSize\n      error={errors?.fields}\n      required\n      stacked\n    >\n      {fields.map((field, i) => {\n        return (\n          <QueryFieldWrapper key={`${field}:${i}`}>\n            <QueryField\n              fieldValue={field}\n              fieldOptions={fieldOptions}\n              onChange={value => handleChangeField(value, i)}\n              filterPrimaryOptions={filterPrimaryOptions}\n              filterAggregateParameters={filterAggregateParameters(field)}\n              otherColumns={fields}\n            />\n            {(canDelete || field.kind === 'equation') && (\n              <Button\n                size=\"zero\"\n                borderless\n                onClick={event => handleRemove(event, i)}\n                icon={<IconDelete />}\n                title={t('Remove this Y-Axis')}\n                label={t('Remove this Y-Axis')}\n              />\n            )}\n          </QueryFieldWrapper>\n        );\n      })}\n      {!hideAddYAxisButton && (\n        <Actions>\n          <Button size=\"small\" icon={<IconAdd isCircled />} onClick={handleAdd}>\n            {t('Add Overlay')}\n          </Button>\n          <Button\n            size=\"small\"\n            label={t('Add an Equation')}\n            onClick={handleAddEquation}\n            icon={<IconAdd isCircled />}\n          >\n            {t('Add an Equation')}\n          </Button>\n        </Actions>\n      )}\n    </Field>\n  );\n}\n\nconst StyledColumnEditCollection = styled(ColumnEditCollection)`\n  margin-top: ${space(1)};\n`;\n\nexport const QueryFieldWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n\n  > * + * {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst Actions = styled('div')`\n  grid-column: 2 / 3;\n\n  & button {\n    margin-right: ${space(1)};\n  }\n`;\n\nexport default WidgetQueryFields;\n","import {t} from 'sentry/locale';\nimport {measurementType, MobileVital, WebVital} from 'sentry/utils/discover/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n","import isEqual from 'lodash/isEqual';\n\nimport {\n  aggregateOutputType,\n  isAggregateFieldOrEquation,\n  isLegalYAxisType,\n} from 'sentry/utils/discover/fields';\nimport {Widget} from 'sentry/views/dashboardsV2/types';\n\nimport {DisplayType} from '../utils';\n\ntype ValidationError = {\n  [key: string]: string[] | ValidationError[] | ValidationError;\n};\n\ntype FlatValidationError = {\n  [key: string]: string | FlatValidationError[] | FlatValidationError;\n};\n\nexport function mapErrors(\n  data: ValidationError,\n  update: FlatValidationError\n): FlatValidationError {\n  Object.keys(data).forEach((key: string) => {\n    const value = data[key];\n    // Recurse into nested objects.\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n      update[key] = value[0];\n      return;\n    }\n    if (Array.isArray(value) && typeof value[0] === 'object') {\n      update[key] = (value as ValidationError[]).map(item => mapErrors(item, {}));\n    } else {\n      update[key] = mapErrors(value as ValidationError, {});\n    }\n  });\n\n  return update;\n}\n\nexport function normalizeQueries(\n  displayType: DisplayType,\n  queries: Widget['queries']\n): Widget['queries'] {\n  const isTimeseriesChart = [\n    DisplayType.LINE,\n    DisplayType.AREA,\n    DisplayType.STACKED_AREA,\n    DisplayType.BAR,\n  ].includes(displayType);\n\n  if (\n    [DisplayType.TABLE, DisplayType.WORLD_MAP, DisplayType.BIG_NUMBER].includes(\n      displayType\n    )\n  ) {\n    // Some display types may only support at most 1 query.\n    queries = queries.slice(0, 1);\n  } else if (isTimeseriesChart) {\n    // Timeseries charts supports at most 3 queries.\n    queries = queries.slice(0, 3);\n  }\n\n  if ([DisplayType.TABLE, DisplayType.TOP_N].includes(displayType)) {\n    return queries;\n  }\n\n  // Filter out non-aggregate fields\n  queries = queries.map(query => {\n    let fields = query.fields.filter(isAggregateFieldOrEquation);\n\n    if (isTimeseriesChart || displayType === DisplayType.WORLD_MAP) {\n      // Filter out fields that will not generate numeric output types\n      fields = fields.filter(field => isLegalYAxisType(aggregateOutputType(field)));\n    }\n\n    if (isTimeseriesChart && fields.length && fields.length > 3) {\n      // Timeseries charts supports at most 3 fields.\n      fields = fields.slice(0, 3);\n    }\n\n    return {\n      ...query,\n      fields: fields.length ? fields : ['count()'],\n    };\n  });\n\n  if (isTimeseriesChart) {\n    // For timeseries widget, all queries must share identical set of fields.\n\n    const referenceFields = [...queries[0].fields];\n\n    queryLoop: for (const query of queries) {\n      if (referenceFields.length >= 3) {\n        break;\n      }\n\n      if (isEqual(referenceFields, query.fields)) {\n        continue;\n      }\n\n      for (const field of query.fields) {\n        if (referenceFields.length >= 3) {\n          break queryLoop;\n        }\n\n        if (!referenceFields.includes(field)) {\n          referenceFields.push(field);\n        }\n      }\n    }\n\n    queries = queries.map(query => {\n      return {\n        ...query,\n        fields: referenceFields,\n      };\n    });\n  }\n\n  if ([DisplayType.WORLD_MAP, DisplayType.BIG_NUMBER].includes(displayType)) {\n    // For world map chart, cap fields of the queries to only one field.\n    queries = queries.map(query => {\n      return {\n        ...query,\n        fields: query.fields.slice(0, 1),\n      };\n    });\n  }\n\n  return queries;\n}\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","'use strict';\n/* eslint-disable es/no-string-prototype-matchall -- safe */\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof-raw');\nvar isRegExp = require('../internals/is-regexp');\nvar getRegExpFlags = require('../internals/regexp-flags');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar InternalStateModule = require('../internals/internal-state');\nvar IS_PURE = require('../internals/is-pure');\n\nvar MATCH_ALL = wellKnownSymbol('matchAll');\nvar REGEXP_STRING = 'RegExp String';\nvar REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);\nvar RegExpPrototype = RegExp.prototype;\nvar regExpBuiltinExec = RegExpPrototype.exec;\nvar nativeMatchAll = ''.matchAll;\n\nvar WORKS_WITH_NON_GLOBAL_REGEX = !!nativeMatchAll && !fails(function () {\n  'a'.matchAll(/./);\n});\n\nvar regExpExec = function (R, S) {\n  var exec = R.exec;\n  var result;\n  if (typeof exec == 'function') {\n    result = exec.call(R, S);\n    if (typeof result != 'object') throw TypeError('Incorrect exec result');\n    return result;\n  } return regExpBuiltinExec.call(R, S);\n};\n\n// eslint-disable-next-line max-len -- ignore\nvar $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, global, fullUnicode) {\n  setInternalState(this, {\n    type: REGEXP_STRING_ITERATOR,\n    regexp: regexp,\n    string: string,\n    global: global,\n    unicode: fullUnicode,\n    done: false\n  });\n}, REGEXP_STRING, function next() {\n  var state = getInternalState(this);\n  if (state.done) return { value: undefined, done: true };\n  var R = state.regexp;\n  var S = state.string;\n  var match = regExpExec(R, S);\n  if (match === null) return { value: undefined, done: state.done = true };\n  if (state.global) {\n    if (toString(match[0]) === '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);\n    return { value: match, done: false };\n  }\n  state.done = true;\n  return { value: match, done: false };\n});\n\nvar $matchAll = function (string) {\n  var R = anObject(this);\n  var S = toString(string);\n  var C, flagsValue, flags, matcher, global, fullUnicode;\n  C = speciesConstructor(R, RegExp);\n  flagsValue = R.flags;\n  if (flagsValue === undefined && R instanceof RegExp && !('flags' in RegExpPrototype)) {\n    flagsValue = getRegExpFlags.call(R);\n  }\n  flags = flagsValue === undefined ? '' : toString(flagsValue);\n  matcher = new C(C === RegExp ? R.source : R, flags);\n  global = !!~flags.indexOf('g');\n  fullUnicode = !!~flags.indexOf('u');\n  matcher.lastIndex = toLength(R.lastIndex);\n  return new $RegExpStringIterator(matcher, S, global, fullUnicode);\n};\n\n// `String.prototype.matchAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.matchall\n$({ target: 'String', proto: true, forced: WORKS_WITH_NON_GLOBAL_REGEX }, {\n  matchAll: function matchAll(regexp) {\n    var O = requireObjectCoercible(this);\n    var flags, S, matcher, rx;\n    if (regexp != null) {\n      if (isRegExp(regexp)) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype\n          ? regexp.flags\n          : getRegExpFlags.call(regexp)\n        ));\n        if (!~flags.indexOf('g')) throw TypeError('`.matchAll` does not allow non-global regexes');\n      }\n      if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll.apply(O, arguments);\n      matcher = regexp[MATCH_ALL];\n      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;\n      if (matcher != null) return aFunction(matcher).call(regexp, O);\n    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll.apply(O, arguments);\n    S = toString(O);\n    rx = new RegExp(regexp, 'g');\n    return IS_PURE ? $matchAll.call(rx, S) : rx[MATCH_ALL](S);\n  }\n});\n\nIS_PURE || MATCH_ALL in RegExpPrototype || createNonEnumerableProperty(RegExpPrototype, MATCH_ALL, $matchAll);\n"],"names":["WidgetQueryFields","widgetType","displayType","errors","fields","fieldOptions","organization","onChange","style","doNotValidateYAxis","filterPrimaryOptions","option","value","kind","FieldValueKind","primaryOutput","aggregateFunctionOutputType","meta","name","undefined","isLegalYAxisType","filterAggregateParameters","fieldValue","functionName","function","dataType","hideAddYAxisButton","includes","length","canDelete","label","t","inline","padding","space","error","flexibleControlStateSize","stacked","required","StyledColumnEditCollection","columns","source","slice","newFields","QueryFieldWrapper","generateFieldOptions","handleTopNChangeField","map","field","i","fieldIndex","handleChangeField","otherColumns","size","borderless","onClick","event","preventDefault","splice","handleRemove","icon","title","Actions","isCircled","ColumnEditCollection","WEB_VITAL_DETAILS","WebVital","slug","acronym","description","poorThreshold","type","measurementType","MOBILE_VITAL_DETAILS","MobileVital","mapErrors","data","update","Object","keys","forEach","key","Array","isArray","item","normalizeQueries","queries","isTimeseriesChart","DisplayType","query","filter","isAggregateFieldOrEquation","aggregateOutputType","referenceFields","queryLoop","isEqual","push","isObject","classof","MATCH","wellKnownSymbol","module","exports","it","isRegExp","anObject","aFunction","SPECIES","O","defaultConstructor","S","C","constructor","$","createIteratorConstructor","requireObjectCoercible","toLength","toString","getRegExpFlags","createNonEnumerableProperty","fails","speciesConstructor","advanceStringIndex","InternalStateModule","IS_PURE","MATCH_ALL","REGEXP_STRING_ITERATOR","REGEXP_STRING","setInternalState","set","getInternalState","getterFor","RegExpPrototype","RegExp","prototype","regExpBuiltinExec","exec","nativeMatchAll","matchAll","WORKS_WITH_NON_GLOBAL_REGEX","$RegExpStringIterator","regexp","string","global","fullUnicode","this","unicode","done","state","R","match","result","call","TypeError","regExpExec","lastIndex","$matchAll","flagsValue","flags","matcher","indexOf","target","proto","forced","rx","apply","arguments"],"sourceRoot":""}