[
  "test_commandparser.py::TestCommandParser::test__get_place_cmd_elements[cmd0-expected_outcome0]",
  "test_commandparser.py::TestCommandParser::test__get_place_cmd_elements[cmd1-expected_outcome1]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_position[cmd0-expected_outcome0]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_position[cmd1-expected_outcome1]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_position[cmd2-expected_outcome2]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_position[cmd3-expected_outcome3]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_string[cmd0-expected_outcome0]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_string[cmd1-expected_outcome1]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_string[cmd2-expected_outcome2]",
  "test_commandparser.py::TestCommandParser::test__parse_place_cmd_string[cmd3-expected_outcome3]",
  "test_commandparser.py::TestCommandParser::test_apply_command[cmd0-True]",
  "test_commandparser.py::TestCommandParser::test_apply_command[cmd1-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command[cmd2-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command[cmd3-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command_first_single_cmd[cmd0-True]",
  "test_commandparser.py::TestCommandParser::test_apply_command_first_single_cmd[cmd1-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command_first_single_cmd[cmd2-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command_first_single_cmd[cmd3-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command_first_single_cmd[cmd4-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command_first_single_cmd[cmd5-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command_first_single_cmd[cmd6-False]",
  "test_commandparser.py::TestCommandParser::test_apply_command_report[cmd_list0-1,1,NORTH\\n]",
  "test_commandparser.py::TestCommandParser::test_apply_command_report[cmd_list0-1,1,NORTH]",
  "test_commandparser.py::TestCommandParser::test_apply_command_report[cmd_list1-]",
  "test_commandparser.py::TestCommandParser::test_apply_command_report[cmd_list2-1,1,EAST\\n2,1,EAST\\n]",
  "test_commandparser.py::TestCommandParser::test_apply_command_report[cmd_list2-1,1,EAST\\n2,1,EAST]",
  "test_commandparser.py::TestCommandParser::test_apply_command_with_prior_place[cmd0-expected_outcome0]",
  "test_commandparser.py::TestCommandParser::test_apply_command_with_prior_place[cmd1-expected_outcome1]",
  "test_commandparser.py::TestCommandParser::test_apply_command_with_prior_place[cmd2-expected_outcome2]",
  "test_commandparser.py::TestCommandParser::test_apply_command_with_prior_place[cmd3-expected_outcome3]",
  "test_commandparser.py::TestCommandParser::test_apply_command_with_prior_place[cmd4-expected_outcome4]",
  "test_commandparser.py::TestCommandParser::test_apply_command_with_prior_place[cmd5-expected_outcome5]",
  "test_commandparser.py::TestCommandParser::test_apply_command_with_prior_place[cmd6-expected_outcome6]",
  "test_commandparser.py::TestCommandParser::test_fails_apply_command_multiple_cmds[cmd_list0-True]",
  "test_commandparser.py::TestCommandParser::test_fails_apply_command_multiple_cmds[cmd_list1-False]",
  "test_commandparser.py::TestCommandParser::test_fails_apply_command_multiple_cmds[cmd_list2-False]",
  "test_commandparser.py::TestCommandParser::test_fails_apply_command_multiple_cmds[cmd_list3-False]",
  "test_commandparser.py::TestCommandParser::test_fails_apply_command_multiple_cmds[cmd_list4-False]",
  "test_commandparser.py::TestCommandParser::test_fails_apply_command_multiple_cmds[cmd_list5-False]",
  "test_commandparser.py::TestCommandParser::test_fails_apply_command_multiple_cmds[cmd_list6-True]",
  "test_commandparser.py::TestCommandParser::test_get_valid_place_cmd_elements[cmd0-expected_outcome0]",
  "test_commandparser.py::TestCommandParser::test_get_valid_place_cmd_elements[cmd1-expected_outcome1]",
  "test_commandparser.py::TestCommandParser::test_get_valid_place_cmd_elements[cmd2-expected_outcome2]",
  "test_commandparser.py::TestCommandParser::test_get_valid_place_cmd_elements[cmd3-expected_outcome3]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd0-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd1-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd2-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd3-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd4-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd5-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd6-False]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd7-False]",
  "test_commandparser.py::TestCommandParser::test_is_valid_base_command[cmd8-False]",
  "test_commandparser.py::TestCommandParser::test_is_valid_place_command[cmd0-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_place_command[cmd1-False]",
  "test_commandparser.py::TestCommandParser::test_is_valid_place_command[cmd2-False]",
  "test_commandparser.py::TestCommandParser::test_is_valid_place_command[cmd2-True]",
  "test_commandparser.py::TestCommandParser::test_is_valid_place_command[cmd3-False]",
  "test_commandparser.py::TestCommandParser::test_passes_apply_command_multiple_cmds[cmd_list0-expected_outcome0]",
  "test_commandparser.py::TestCommandParser::test_passes_apply_command_multiple_cmds[cmd_list1-expected_outcome1]",
  "test_commandparser.py::TestCommandParser::test_passes_apply_command_multiple_cmds[cmd_list2-expected_outcome2]",
  "test_main.py::test_fails2_parse_args[argv0]",
  "test_main.py::test_fails_parse_args[argv0]",
  "test_main.py::test_fails_parse_args[argv1]",
  "test_main.py::test_fails_parse_args[argv2]",
  "test_main.py::test_fails_parse_args[argv3]",
  "test_main.py::test_fails_parse_args[argv4]",
  "test_main.py::test_fails_positive_integer[-1]",
  "test_main.py::test_fails_positive_integer[0]",
  "test_main.py::test_fails_positive_integer[12a]",
  "test_main.py::test_fails_positive_integer[test]",
  "test_main.py::test_parse_args[args0-expected_outcome0]",
  "test_main.py::test_parse_args[args1-expected_outcome1]",
  "test_main.py::test_parse_args[args2-expected_outcome2]",
  "test_main.py::test_passes_parse_args[argv0-test.txt-5-5]",
  "test_main.py::test_passes_parse_args[argv1-test/test.txt-1-5]",
  "test_main.py::test_passes_parse_args[argv2-test/test.txt-4-1]",
  "test_main.py::test_positive_integer[020]",
  "test_main.py::test_positive_integer[10]",
  "test_main.py::test_positive_integer[123]",
  "test_main.py::test_positive_integer[1]",
  "test_main.py::test_start_app_file",
  "test_main.py::test_start_app_file[argv0-0,1,NORTH\\n]",
  "test_main.py::test_start_app_file[argv1-0,0,WEST\\n]",
  "test_main.py::test_start_app_file[argv2-3,3,NORTH\\n]",
  "test_main.py::test_start_app_file[argv3-]",
  "test_orientation.py::TestOrientation::test_left[Orientation.EAST-Orientation.NORTH]",
  "test_orientation.py::TestOrientation::test_left[Orientation.NORTH-Orientation.WEST]",
  "test_orientation.py::TestOrientation::test_left[Orientation.SOUTH-Orientation.EAST]",
  "test_orientation.py::TestOrientation::test_left[Orientation.WEST-Orientation.SOUTH]",
  "test_orientation.py::TestOrientation::test_right[Orientation.EAST-Orientation.SOUTH]",
  "test_orientation.py::TestOrientation::test_right[Orientation.NORTH-Orientation.EAST]",
  "test_orientation.py::TestOrientation::test_right[Orientation.SOUTH-Orientation.WEST]",
  "test_orientation.py::TestOrientation::test_right[Orientation.WEST-Orientation.NORTH]",
  "test_orientation.py::test_left",
  "test_orientation.py::test_left[Orientation.EAST-Orientation.NORTH]",
  "test_orientation.py::test_left[Orientation.NORTH-Orientation.WEST]",
  "test_orientation.py::test_left[Orientation.SOUTH-Orientation.EAST]",
  "test_orientation.py::test_left[Orientation.WEST-Orientation.SOUTH]",
  "test_orientation.py::test_right",
  "test_orientation.py::test_right[Orientation.EAST-Orientation.SOUTH]",
  "test_orientation.py::test_right[Orientation.NORTH-Orientation.EAST]",
  "test_orientation.py::test_right[Orientation.SOUTH-Orientation.WEST]",
  "test_orientation.py::test_right[Orientation.WEST-Orientation.NORTH]",
  "test_robot.py::TestRobot::test_left",
  "test_robot.py::TestRobot::test_move",
  "test_robot.py::TestRobot::test_place",
  "test_robot.py::TestRobot::test_report",
  "test_robot.py::TestRobot::test_right",
  "test_robot.py::TestRobot::test_update_position",
  "test_tabletop.py::TestTableTop::test_add_robot",
  "test_tabletop.py::TestTableTop::test_add_robot[0]",
  "test_tabletop.py::TestTableTop::test_add_robot[1]",
  "test_tabletop.py::TestTableTop::test_add_robot[2]",
  "test_tabletop.py::TestTableTop::test_add_robot[3]",
  "test_tabletop.py::TestTableTop::test_fails_get_robot_multiple",
  "test_tabletop.py::TestTableTop::test_get_robot",
  "test_tabletop.py::TestTableTop::test_has_robot",
  "test_tabletop.py::TestTableTop::test_has_robot[0-False]",
  "test_tabletop.py::TestTableTop::test_has_robot[1-True]",
  "test_tabletop.py::TestTableTop::test_has_robot[2-True]",
  "test_tabletop.py::TestTableTop::test_has_robot[3-True]",
  "test_tabletop.py::TestTableTop::test_has_robot[n_robot0]",
  "test_tabletop.py::TestTableTop::test_has_robot[n_robot1]",
  "test_tabletop.py::TestTableTop::test_has_robot[n_robot2]",
  "test_tabletop.py::TestTableTop::test_has_robot[n_robot3]",
  "test_tabletop.py::TestTableTop::test_is_valid_position",
  "test_tabletop.py::TestTableTop::test_is_valid_position[-1-3-False]",
  "test_tabletop.py::TestTableTop::test_is_valid_position[0-0-True]",
  "test_tabletop.py::TestTableTop::test_is_valid_position[5-5-True]",
  "test_tabletop.py::TestTableTop::test_is_valid_position[5-6-False]",
  "test_tabletop.py::TestTableTop::test_is_valid_position[6-5-False]",
  "test_tabletop.py::TestTableTop::test_is_within_boundary",
  "test_tabletop.py::TestTableTop::test_is_within_boundary[-1-3-False]",
  "test_tabletop.py::TestTableTop::test_is_within_boundary[0-0-True]",
  "test_tabletop.py::TestTableTop::test_is_within_boundary[5-5-True]",
  "test_tabletop.py::TestTableTop::test_is_within_boundary[5-6-False]",
  "test_tabletop.py::TestTableTop::test_is_within_boundary[6-5-False]",
  "test_tabletop.py::TestTableTop::test_passes_get_robot_default[1-expected_outcome0]",
  "test_tabletop.py::TestTableTop::test_passes_get_robot_default[2-expected_outcome1]",
  "test_tabletop.py::TestTableTop::test_passes_get_robot_default[3-expected_outcome2]",
  "test_tabletop.py::TestTableTop::test_passes_get_robot_multiple[1-expected_outcome0]",
  "test_tabletop.py::TestTableTop::test_passes_get_robot_multiple[2-expected_outcome1]",
  "test_tabletop.py::TestTableTop::test_passes_get_robot_multiple[3-expected_outcome2]"
]