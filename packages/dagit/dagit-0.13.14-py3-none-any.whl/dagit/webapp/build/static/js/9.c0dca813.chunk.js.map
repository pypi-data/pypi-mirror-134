{"version":3,"sources":["../../core/src/app/time/TimezoneSelect.tsx","../../core/src/app/SettingsRoot.tsx","../../core/src/hooks/useDocumentTitle.tsx"],"names":["formatOffset","mm","amm","Math","abs","floor","AllTimezoneItems","moment","tz","names","map","key","offset","zone","utcOffset","Date","now","offsetLabel","sort","a","b","PopularTimezones","SortedTimezoneItems","browserTimezoneAbbreviation","browserTimezone","filter","t","includes","TimezoneSelect","trigger","React","TimezoneContext","timezone","setTimezone","popoverProps","position","modifiers","enabled","activeItem","find","inputProps","style","width","items","itemPredicate","query","toLowerCase","itemRenderer","props","startsWith","active","onClick","handleClick","label","text","itemListRenderer","renderItem","renderedItems","filteredItems","Boolean","noResults","disabled","onItemSelect","SettingsRoot","useDocumentTitle","getFeatureFlags","flags","setFlags","setFeatureFlags","toggleFlag","flag","f","window","location","reload","automaticLabel","height","overflowY","title","padding","vertical","horizontal","bottom","rows","value","border","side","color","ColorsWIP","KeylineGray","format","checked","FeatureFlag","flagDebugConsoleLogging","onChange","flagAssetGraph","flagInstanceOverview","currentTitle","document"],"mappings":"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","file":"static/js/9.c0dca813.chunk.js","sourcesContent":["import {MenuDividerWIP, MenuItemWIP, MenuWIP, SelectWIP} from '@dagster-io/ui';\nimport moment from 'moment-timezone';\nimport * as React from 'react';\n\nimport {TimezoneContext} from './TimezoneContext';\nimport {browserTimezone, browserTimezoneAbbreviation} from './browserTimezone';\n\nconst formatOffset = (mm: number) => {\n  const amm = Math.abs(mm);\n  // moment.tz.zone() offsets are inverted: https://momentjs.com/timezone/docs/#/zone-object/offset/\n  return `${mm < 0 ? '+' : '-'}${Math.floor(amm / 60)}:${amm % 60 < 10 ? '0' : ''}${amm % 60}`;\n};\n\nconst AllTimezoneItems = moment.tz\n  .names()\n  .map((key) => {\n    const offset = moment.tz.zone(key)?.utcOffset(Date.now()) || 0;\n    return {offsetLabel: `${formatOffset(offset)}`, offset, key};\n  })\n  .sort((a, b) => a.offset - b.offset);\n\nconst PopularTimezones = ['UTC', 'US/Pacific', 'US/Mountain', 'US/Central', 'US/Eastern'];\n\nconst offsetLabel = () => {\n  return `${browserTimezoneAbbreviation()} ${formatOffset(\n    moment.tz.zone(browserTimezone())?.utcOffset(Date.now()) || 0,\n  )}`;\n};\n\nconst SortedTimezoneItems = [\n  {\n    key: 'Automatic',\n    offsetLabel: offsetLabel(),\n    offset: 0,\n  },\n  {\n    key: 'divider-1',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => PopularTimezones.includes(t.key)),\n  {\n    key: 'divider-2',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => !PopularTimezones.includes(t.key)),\n];\n\ninterface Props {\n  trigger: (timezone: string) => React.ReactNode;\n}\n\nexport const TimezoneSelect: React.FC<Props> = ({trigger}) => {\n  const [timezone, setTimezone] = React.useContext(TimezoneContext);\n\n  return (\n    <SelectWIP<typeof SortedTimezoneItems[0]>\n      popoverProps={{\n        position: 'bottom-left',\n        modifiers: {offset: {enabled: true, offset: '-12px, 8px'}},\n      }}\n      activeItem={SortedTimezoneItems.find((tz) => tz.key === timezone)}\n      inputProps={{style: {width: '300px'}}}\n      items={SortedTimezoneItems}\n      itemPredicate={(query, tz) => tz.key.toLowerCase().includes(query.toLowerCase())}\n      itemRenderer={(tz, props) =>\n        tz.key.startsWith('divider') ? (\n          <MenuDividerWIP key={tz.key} />\n        ) : (\n          <MenuItemWIP\n            active={props.modifiers.active}\n            onClick={props.handleClick}\n            label={tz.offsetLabel}\n            key={tz.key}\n            text={tz.key}\n          />\n        )\n      }\n      itemListRenderer={({renderItem, filteredItems}) => {\n        const renderedItems = filteredItems.map(renderItem).filter(Boolean);\n        return <MenuWIP>{renderedItems}</MenuWIP>;\n      }}\n      noResults={<MenuItemWIP disabled text=\"No results.\" />}\n      onItemSelect={(tz) => setTimezone(tz.key)}\n    >\n      {trigger(timezone)}\n    </SelectWIP>\n  );\n};\n","import {\n  Box,\n  ButtonLink,\n  Checkbox,\n  ColorsWIP,\n  MetadataTable,\n  PageHeader,\n  Heading,\n  Subheading,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {FeatureFlag, getFeatureFlags, setFeatureFlags} from './Flags';\nimport {TimezoneSelect} from './time/TimezoneSelect';\nimport {automaticLabel} from './time/browserTimezone';\n\nconst SettingsRoot = () => {\n  useDocumentTitle('User settings');\n\n  const [flags, setFlags] = React.useState<FeatureFlag[]>(() => getFeatureFlags());\n\n  React.useEffect(() => {\n    setFeatureFlags(flags);\n  });\n\n  const toggleFlag = (flag: FeatureFlag) => {\n    setFlags(flags.includes(flag) ? flags.filter((f) => f !== flag) : [...flags, flag]);\n    window.location.reload();\n  };\n\n  const trigger = React.useCallback(\n    (timezone: string) => (\n      <ButtonLink>{timezone === 'Automatic' ? automaticLabel() : timezone}</ButtonLink>\n    ),\n    [],\n  );\n\n  return (\n    <div style={{height: '100vh', overflowY: 'auto'}}>\n      <PageHeader title={<Heading>User settings</Heading>} />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Box padding={{bottom: 8}}>\n          <Subheading>Preferences</Subheading>\n        </Box>\n        <MetadataTable\n          rows={[\n            {\n              key: 'Timezone',\n              value: <TimezoneSelect trigger={trigger} />,\n            },\n          ]}\n        />\n      </Box>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'top', width: 1, color: ColorsWIP.KeylineGray}}\n      >\n        <Box padding={{bottom: 8}}>\n          <Subheading>Experimental features</Subheading>\n        </Box>\n        <MetadataTable\n          rows={[\n            {\n              key: 'Debug console logging',\n              value: (\n                <Checkbox\n                  format=\"switch\"\n                  checked={flags.includes(FeatureFlag.flagDebugConsoleLogging)}\n                  onChange={() => toggleFlag(FeatureFlag.flagDebugConsoleLogging)}\n                />\n              ),\n            },\n            {\n              key: 'Experimental Asset APIs',\n              value: (\n                <Checkbox\n                  format=\"switch\"\n                  checked={flags.includes(FeatureFlag.flagAssetGraph)}\n                  onChange={() => toggleFlag(FeatureFlag.flagAssetGraph)}\n                />\n              ),\n            },\n            {\n              key: 'Instance overview page',\n              value: (\n                <Checkbox\n                  format=\"switch\"\n                  checked={flags.includes(FeatureFlag.flagInstanceOverview)}\n                  onChange={() => toggleFlag(FeatureFlag.flagInstanceOverview)}\n                />\n              ),\n            },\n          ]}\n        />\n      </Box>\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SettingsRoot;\n","import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n"],"sourceRoot":""}